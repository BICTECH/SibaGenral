@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">

    <!----------------- Siba References-->
    <!-----------------General  References-->
    <link href="~/Content/font-awesome.min.css" rel="stylesheet" />

    <link href="~/Content/Site.css" rel="stylesheet" />
    <link href="~/Content/jquery.jqGrid/ui.jqgrid.css" rel="stylesheet" />
    <link href="~/Content/themes/base/jquery.ui.theme.css" rel="stylesheet" />
    <link href="~/Content/themes/base/jquery.ui.base.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-1.7.2.min.js"></script>

    <script src="~/Scripts/jquery-1.7.2.js"></script>

    <script src="~/Scripts/jquery-ui-1.8.11.js"></script>
    <script src="~/Scripts/i18n/grid.locale-en.js"></script>
    <script src="~/Scripts/jquery.jqGrid.min.js"></script>

    <!--  -->

    <link href="~/Content/Css/Custom/sibaStyle.css" rel="stylesheet" />
    <script src="~/Scripts/SibaScript/sibaUWMotor.js"></script>
    <script src="~/Scripts/SibaScript/RetnSequenceNo.js"></script>
    <script src="~/Scripts/SibaScript/sibaDateFunction.js"></script>
    <script>

        // ================================== Policy Processing ===============================
        function fxnProcessPolicy(callback) {
            var polData = [{

                //user inputs

                parampolhSysID: $('#txtPolDocNoProc').val(),
                parampolhEndNo: $('#txtPolEndNoProc').val(),

            }];

            $.ajax({

                type: 'POST',
                url: '/api/accountPostingProcess/getPremRigister',

                //Data to send

                data: JSON.stringify({ polh: polData }),

                contentType: 'application/json; charset=utf-8',
                dataType: 'json',

                //dataprocess: true,
                success: function (data) {

                    callback(data);
                    return (data);

                },
                'error': function (error) {

                    callback(error);

                    return (error);
                    alert(JSON.stringify(error));
                }
            });

        };

        // Approval process
        function fxnSavePremRegister(callback) {

            var seqPremRegName = "SEQ_PREM_REG";
            var premRegisterData = jQuery("#gridPremReg").jqGrid('getRowData');

            $.ajax({

                type: 'POST',
                url: '/api/accountPostingProcess/savePremRigister',

                //Data to send

                data: JSON.stringify({ premReg: premRegisterData, seqName: seqPremRegName }),

                contentType: 'application/json; charset=utf-8',
                dataType: 'json',

                //dataprocess: true,
                success: function (data) {

                    callback(data);
                    return (data);

                },
                'error': function (error) {

                    callback(error);

                    return (error);
                    alert(JSON.stringify(error));
                }
            });

        }
        $(document).ready(function () {
            $("#btnApprovePolicy").click(function () {

                fxnSavePremRegister(fxnSavedStatus);

                function fxnSavedStatus(data) {

                    alert(JSON.stringify(data));

                }
            });
        });
        // ================================== Policy Head ===============================
        //Function to save or upate records ** To be called at the dialog form
        //Note callback (handleData)function is used so that the result returnd on success can be acted on

        function GetPolhData() {

            SumPolhAmounts();

            var polHeadData = [{

                //user inputs
                POLH_COMP_CODE: $('#txtComCode').val(),
                POLH_CHANNEL_CODE: $('#txtChanIntermCode').val(),
                POLH_OFF_CODE: $('#txtOffCode').val(),
                POLH_CUST_CODE: $('#txtCustCode').val(),
                POLH_INS_SOURCE: $('#txtInsSrcCode').val(),
                POLH_BIZ_SOURCE: $('#txtbizSrcCode').val(),
                POLH_INTERMIDIARY: $('#txtAgencySrcCode').val(),
                POLH_POL_START_DATE: $('#dtPolstartDate').val(),
                POLH_POL_END_DATE: $('#dtPolEndDate').val(),
                POLH_POL_DAYS: $('#txtPolDays').val(),
                //system values

                POLH_SYS_ID: $('#txtPolsysID').val(),
                POLH_DOC_NO: $('#txtPolsysID').val(),
                POLH_END_NO: 0,
                POLH_QUT_SER_NO: $('#txtPolsysID').val(),
                POLH_POL_SER_NO: $('#txtPolsysID').val(),
                POLH_CLASS_CODE: $('#txtProductCode').val(),
                POLH_SUB_CLASS_CODE: $('#txtCoverTypeCode').val(),
                // POLH_POL_UW_YEAR:

                POLH_POL_SI_FC: $('#txtPolSIFC').val(),
                POLH_POL_SI_BC: $('#txtPolSIBC').val(),

                POLH_POL_PREM_FC: $('#txtPolPremFC').val(),
                POLH_POL_PREM_BC: $('#txtPolPremBC').val(),

                POLH_POL_COMM_FC: 0,
                POLH_POL_COMM_BC: 0,

                POLH_POL_DISC_FC: $('#txtPolLoadFC').val(),
                POLH_POL_DIS_BC: $('#txtPolDiscBC').val(),

                POLH_POL_LOAD_FC: $('#txtPolLoadFC').val(),
                POLH_POL_LOAD_BC: $('#txtPolLoadBC').val(),

                POLH_COINS_SI_FC: 0,
                POLH_COINS_SI_BC: 0,

                POLH_COINS_PREM_FC: 0,
                POLH_COINS_PREM_BC: 0,

                POLH_NET_SI_FC: $('#txtPolPremFC').val(),
                POLH_NET_SI_BC: $('#txtPolPremFC').val(),

                POLH_NET_PREM_FC: $('#txtPolPremFC').val(),
                POLH_NET_PREM_BC: $('#txtPolPremBC').val(),

                POLH_FEE_FC: 0,
                POLH_FEE_BC: 0,

                POLH_RENEW_SER_NO: 0,
                POLH_TXN_STATE: 'U',
                POLH_POL_STATE: 'U',
                POLH_END_TYPE: 'N',
                //POLH_APPROVE_DATE:
                //POLH_ACCT_DATE:
                POLH_DISPLAY_NO: $('#txtPolicyNo').val(),
                POLH_CRTE_BY: 'DEMO',
                POLH_CRTE_DATE: sysdate(),
                POLH_MOD_BY: 'DEMO',
                POLH_MOD_DATE: sysdate(),
                POLH_STATUS: "U"
            }];


            return polHeadData;

        }

        function SaveUpdate(callback) {

            //get policy Number:
            policyNumber();
            // SumPolhAmounts();
            //Cover data
            polhData = GetPolhData();
            //Vehicle data
            var vehData = jQuery("#gridVehRisks").jqGrid('getRowData');
            var riskCovervData = jQuery("#gridAppCovers").jqGrid('getRowData');

            if ($('#txtPolicyState').val() == "") {

                Url = '/api/CreateMotorPolicy';
            }
            else if ($('#txtPolicyState').val() == "A") {

                //udate if status is A (Saved and active)
                Url = '/api/updateMotorPolicy';
            }
            // --- -- ------
            //alert(JSON.stringify({ polh: polhData, veh: vehData, rcov: riskCovervData }));
            $.ajax({

                type: 'POST',
                url: Url,

                //Data to send

                data: JSON.stringify({ polh: polhData, veh: vehData, rcov: riskCovervData }),

                contentType: 'application/json; charset=utf-8',
                dataType: 'json',

                //dataprocess: true,
                success: function (data) {

                    callback(data);
                    return (data);

                },
                'error': function (error) {

                    callback(error);

                    return (error);
                    alert(JSON.stringify(error));
                }
            });
        };


        //Policy Number Function
        function policyNumber() {
            var PolicyNo, comCode, productCode, uw, serNo;

            comCode = $('#txtComCode').val();

            productCode = $('#txtProductCode').val();

            serNo = $('#txtPolsysID').val();

            uw = 2016;

            $('#txtEndSeq').val("0");
            $('#txtRenSeq').val("0");
            $('#txtSerNo').val(serNo);

            PolicyNo = comCode + "-" + productCode + "-" + 2016 + "-" + productCode + "-0000-" + serNo

            $('#txtPolicyNo').val(PolicyNo);

            // return PolicyNo;
        }
        //
        $(document).ready(function () {
            $('#txtComCode').blur(function () {
                var errormsg = "";
                var GetItem = $('#txtComCode').val();

                $.ajax({

                    type: 'GET',
                    url: '/api/CreateCompany/GetSubs',

                    //Data to send

                    data: JSON.stringify({ getcov: GetItem }),

                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    success: function (data) {
                        $("#txtCompanyName").val(data.CMP_GLOBAL_NAME);

                        //$('#error').html(data)
                    },
                    error: function (jqXHR, exception) {
                        $('#error').html("Primitive Functions not allowed.")
                    }
                });
            });
        })

        //--------------------------------Dialog Box to Save -------------------------------

        $(function () {
            var dialog, form,
            Savedialog = $("#dlgCode-form").dialog({
                autoOpen: false,
                height: 300,
                width: 500,
                modal: true,

                buttons: {
                    "YES": function () {

                        //Call Save function
                        SaveUpdate(getDataAfterSave);

                        function getDataAfterSave(data) {
                            var results = data;

                            if (results == "A") {

                                $('#txtPolicyState').val("A");

                                var covergrid = $('#gridAppCovers');

                                var covRowIds = covergrid.jqGrid('getDataIDs');

                                // iterate through the rows in Cover Grid and update Status
                                for (var i = 0, len = covRowIds.length; i < len; i++) {
                                    var covCurrRow = covRowIds[i];

                                    covergrid.jqGrid('setCell', covCurrRow, 'RCOV_STATUS', 'A');

                                }
                                //
                                var riskgrid = $('#gridVehRisks');

                                var riskRowIds = riskgrid.jqGrid('getDataIDs');

                                // iterate through the rows in veh risk Grid and update Status
                                for (var i = 0, len = riskRowIds.length; i < len; i++) {

                                    var riskCurrRow = riskRowIds[i];

                                    riskgrid.jqGrid('setCell', riskCurrRow, 'VEH_STATUS', 'A');
                                }

                                alert("Saved successfully");

                            }

                                //Update responds from controller
                            else if (results == "S") {
                                //returns S on updated

                                $('#txtPolicyState').val("A");

                                var covergrid = $('#gridAppCovers');

                                var covRowIds = covergrid.jqGrid('getDataIDs');

                                // iterate through the rows in Cover Grid and update Status
                                for (var i = 0, len = covRowIds.length; i < len; i++) {
                                    var covCurrRow = covRowIds[i];

                                    var covRecStatus = covergrid.jqGrid('getCell', covCurrRow, 'RCOV_STATUS');

                                    //Delete cover row if it is marked for deletion
                                    if (covRecStatus == "D") {
                                        covergrid.jqGrid('delRowData', covCurrRow);
                                    }
                                    //Update cover row status to Active (A) if it is newlly added
                                    if (covRecStatus == "U") {

                                        covergrid.jqGrid('setCell', covCurrRow, 'RCOV_STATUS', 'A');
                                    }

                                }
                                //Upade Vehcil risk status
                                var riskgrid = $('#gridVehRisks');

                                var riskRowIds = riskgrid.jqGrid('getDataIDs');

                                // iterate through the rows and check if it exists each of them
                                for (var i = 0, len = riskRowIds.length; i < len; i++) {
                                    var riskCurrRow = riskRowIds[i];

                                    var riskRecStatus = riskgrid.jqGrid('getCell', riskCurrRow, 'VEH_STATUS');

                                    //Delete risk row if it is marked for deletion
                                    if (riskRecStatus == "D") {

                                        riskgrid.jqGrid('delRowData', riskCurrRow);
                                    }

                                    //Update risk row status to Active (A) if it is newlly added
                                    if (riskRecStatus == "U") {

                                        riskgrid.jqGrid('setCell', riskCurrRow, 'VEH_STATUS', 'A');
                                    }
                                }
                                //alert user
                                alert("Upadted successfully");

                            }
                            else if (results == "F") {
                                alert("No records were updated, Check and try again");
                            }
                            else {
                                alert("An error occured: " + JSON.stringify(jresults));
                            }

                        };


                        $(this).dialog("close");
                    },


                    "NO": function () {

                        $(this).dialog("close");

                    },
                }

            });

            //open the dialog form TO SAVE
            $("#btnSavePolicy").button().on("click", function () {
                if ($('#txtPolsysID').val() == "") {
                    RetnSequenceNo("MOT_TFF_SEQ", "#txtPolsysID");
                }

                Savedialog.dialog("open");
            });

            // ------
            // ------

        });

        ///----------------------Grid to add vehicles---------------------


        $(document).ready(function () {

            $("#gridVehRisks").jqGrid({
                data: 'local',
                colNames: [
                     'Usage code', 'Usage Name', 'Registration No', 'No. Of Seats',
                     'Sum Insured FC', 'Sum Insured BC', 'Total Premium FC', 'Total Premium BC',
                      'Currrency', 'Exchange Rate', 'Risk Start date', 'Risk End date', 'Period Days', 'UW Year',

                     //
                   'Make', 'Model', 'Body Type',

                     'Manufacture Year', 'Chassis No.', 'Cubic Capacity',
                    'Excess', 'Excess Percentage', 'Min Excess', 'Max Excess', 'Fix Excess',
                    'Additional TPPD', 'TP Interest', 'TP Details', 'Proposal Declined', 'Declined Reasons',
                    'Policy Cancelled', 'Cancelled Reason',

                    'Risk Premium FC', 'Risk Premium BC',
                    'RI Applicable', 'RI Effective Date', 'RI SI FC', 'RI SI BC', 'RI Premium FC',
                      'RI Premium BC', 'Adj Premium FC',
                     'Adj Premium BC', 'Discount FC', 'Discount BC', 'Load FC', 'Laod BC',
                    'Compulsory Fee FC', 'Compulsory Fee BC', 'Commossion FC', 'Commission BC', 'Txn Status', 'Risk State',
                    //
                    'Risk No', 'VehID', 'PolID', 'polDocNo', 'Endorsement No.',
                    'Issue Date', 'Restrospective Date', 'Product code',
                    'Cover Code', ' Renewal Status', 'Endorsement Type', 'Approval Date', 'Account Date',
                    'Create by', 'Create Date', 'Modified By', 'Modified Date', 'Status'

                ],
                colModel: [
                    { name: 'VEH_USAGE_CODE', index: 'VEH_USAGE_CODE', width: 150 },
                    { name: 'VEH_USAGE_NAME', index: 'VEH_USAGE_NAME', width: 150 },
                    { name: 'VEH_VEH_REG_NO', index: 'VEH_VEH_REG_NO', width: 150, },
                     { name: 'VEH_PASSENGERS', index: 'VEH_PASSENGERS', width: 150 },
                     { name: 'VEH_SI_FC', index: 'VEH_SI_FC', width: 150 },
                    { name: 'VEH_SI_BC', index: 'VEH_SI_BC', width: 150 },
                    { name: 'VEH_TOT_PREM_FC', index: 'VEH_TOT_PREM_FC', width: 150 },
                    { name: 'VEH_TOT_PREM_BC', index: 'VEH_TOT_PREM_BC', width: 150 },
                    { name: 'VEH_CURRENCY', index: 'VEH_CURRENCY', width: 150 },
                    { name: 'VEH_CURR_RATE', index: 'VEH_CURR_RATE', width: 150 },
                     { name: 'VEH_START_DATE', index: 'VEH_START_DATE', width: 150 },
                    { name: 'VEH_END_DATE', index: 'VEH_END_DATE', width: 150 },
                    { name: 'VEH_PERIOD_DAYS', index: 'VEH_PERIOD_DAYS', width: 150 },
                    { name: 'VEH_UW_YEAR', index: 'VEH_UW_YEAR', width: 150 },
                    //
                    { name: 'VEH_MAKE', index: 'VEH_MAKE', width: 150 },
                    { name: 'VEH_MODEL', index: 'VEH_MODEL', width: 150 },
                    { name: 'VEH_BODY_TYPE', index: 'VEH_BODY_TYPE', width: 150 },

                    { name: 'VEH_MANUFACTURE_YR', index: 'VEH_MANUFACTURE_YR', width: 150 },
                    { name: 'VEH_CHASSIS_NO', index: 'VEH_CHASSIS_NO', width: 150 },
                    { name: 'VEH_CUBIC_CAP', index: 'VEH_CUBIC_CAP', width: 150 },

                    { name: 'VEH_EXCESS_APP', index: 'VEH_EXCESS_APP', width: 150 },
                    { name: 'VEH_EXCESS_PERC', index: 'VEH_EXCESS_PERC', width: 150 },
                    { name: 'VEH_EXCESS_MIN', index: 'VEH_EXCESS_MIN', width: 150 },
                    { name: 'VEH_EXCESS_MAX', index: 'VEH_EXCESS_MAX', width: 150 },
                    { name: 'VEH_EXCESS_FIX', index: 'VEH_EXCESS_FIX', width: 150 },
                    { name: 'VEH_EXTRA_TPPD', index: 'VEH_EXTRA_TPPD', width: 150 },
                    { name: 'VEH_TP_INTEREST', index: 'VEH_TP_INTEREST', width: 150 },
                    { name: 'VEH_TP_DETAILS', index: 'VEH_TP_DETAILS', width: 150 },
                    { name: 'VEH_PROP_DECLINED', index: 'VEH_PROP_DECLINED', width: 150 },
                    { name: 'VEH_DECLINED_REASON', index: 'VEH_DECLINED_REASON', width: 150 },
                    { name: 'VEH_POL_CANCELLED', index: 'VEH_POL_CANCELLED', width: 150 },
                    { name: 'VEH_CANCELLED_REASON', index: 'VEH_CANCELLED_REASON', width: 150 },

                    { name: 'VEH_RISK_PREM_FC', index: 'VEH_RISK_PREM_FC', width: 150 },
                    { name: 'VEH_RISK_PREM_BC', index: 'VEH_RISK_PREM_BC', width: 150 },

                    { name: ' VEH_RI_APPLICABLE', index: ' VEH_RI_APPLICABLE', width: 150 },
                    { name: 'VEH_RI_EFF_DATE', index: 'VEH_RI_EFF_DATE', width: 150 },
                    { name: 'VEH_RI_SI_FC', index: 'VEH_RI_SI_FC', width: 150 },
                    { name: 'VEH_RI_SI_BC', index: 'VEH_RI_SI_BC', width: 150 },
                    { name: 'VEH_RI_PREM_FC', index: 'VEH_RI_PREM_FC', width: 150 },
                    { name: 'VEH_RI_PREM_BC', index: 'VEH_RI_PREM_BC', width: 150 },

                    { name: 'VEH_ADJ_PREM_FC', index: 'VEH_ADJ_PREM_FC', width: 150 },
                    { name: 'VEH_ADJ_PREM_BC', index: 'VEH_ADJ_PREM_BC', width: 150 },
                    { name: 'VEH_DISC_FC', index: 'VEH_DISC_FC', width: 150 },
                    { name: 'VEH_DISC_BC', index: 'VEH_DISC_BC', width: 150 },
                    { name: 'VEH_LOAD_FC', index: 'VEH_LOAD_FC', width: 150 },
                    { name: 'VEH_LOAD_BC', index: 'VEH_LOAD_BC', width: 150 },
                    { name: 'VEH_COMP_FEE_FC', index: 'VEH_COMP_FEE_FC', width: 150 },
                    { name: 'VEH_COMP_FEE_BC', index: 'VEH_COMP_FEE_BC', width: 150 },
                    { name: 'VEH_COMMISSION_FC', index: 'VEH_COMMISSION_FC', width: 150 },
                    { name: 'VEH_COMMISSION_BC', index: 'VEH_COMMISSION_BC', width: 150 },

                    { name: 'VEH_TXN_STATUS', index: 'VEH_TXN_STATUS', width: 150 },
                    { name: 'VEH_RISK_STATE', index: 'VEH_RISK_STATE', width: 150 },

                    { name: 'VEH_RISK_NO', index: 'VEH_RISK_NO', width: 150 },
                    { name: 'VEH_SYS_ID', index: 'VEH_SYS_ID', width: 150, sorttype: "int" },
                    { name: 'VEH_POLH_SYS_ID', index: 'VEH_POLH_SYS_ID', width: 150 },
                    { name: 'VEH_POLH_DOC_NO', index: 'VEH_POLH_DOC_NO', width: 150 },
                    { name: 'VEH_POLH_END_NO', index: 'VEH_POLH_END_NO', width: 150 },
                    { name: 'VEH_ISSUE_DATE', index: 'VEH_ISSUE_DATE', width: 150 },
                    { name: 'VEH_RETROS_DATE', index: 'VEH_RETROS_DATE', width: 150 },

                    { name: 'VEH_PRODUCT_CODE', index: 'VEH_PRODUCT_CODE', width: 150 },
                    { name: 'VEH_COVER_CODE', index: 'VEH_COVER_CODE', width: 150 },
                     { name: 'VEH_RENEWAL_STATUS', index: 'VEH_RENEWAL_STATUS', width: 150 },
                    { name: 'VEH_END_TYPE', index: 'VEH_END_TYPE', width: 150 },
                    { name: 'VEH_APPROVE_DATE', index: 'VEH_APPROVE_DATE', width: 150 },
                    { name: 'VEH_ACCT_DATE', index: 'VEH_ACCT_DATE', width: 150 },
                    { name: 'VEH_CRTE_BY', index: 'VEH_CRTE_BY', width: 150 },
                    { name: 'VEH_CRTE_DATE', index: '', width: 150 },
                    { name: 'VEH_MOD_BY', index: 'VEH_MOD_BY', width: 150 },
                    { name: 'VEH_MOD_DATE', index: 'VEH_MOD_DATE', width: 150 },
                    { name: 'VEH_STATUS', index: 'VEH_STATUS', width: 150 }
                ],
                //Retrive Code and description and return on row click..
                onSelectRow: function (rowid) {

                    LoadVehicleFromGrid();

                },

                ondblClickRow: function (rowid) {

                    //Open Coers Window on double clicking the Risk Row
                    openRiskCoversDlgWindow();

                },

                rowNum: 30,
                rowList: [30, 50, 100],
                pager: '#grdVehPager',
                sortname: 'Code',
                viewrecords: true,

                sortorder: "asc",
                caption: "Vehicle Risks",
                loadtext: 'Loading, please wait',

                //new added
                ignoreCase: true,
                loadonce: true,
                width: this.parentElement,
                shrinkToFit: false,
                autowidth: false,
                multiselect: false
            });
            jQuery("#gridVehRisks").jqGrid('navGrid', '#gridVehPager',
                { search: true, edit: false, add: false, del: false });

            jQuery("#gridVehRisks").jqGrid('filterToolbar',
             { searchOnEnter: false, stringResult: true, defaultSearch: "cn" });
        });


        ///----------------------Grid to select Covers---------------------
        $(document).ready(function () {

            $("#gridFindCovers").jqGrid({
                data: 'local',
                colNames: [
                    'Code', 'Name', 'Cover Type', 'Default SI', 'Default Rate', 'Discount Applicable', 'Load Applicable',
                    'Rate Change', 'SI Change', 'Cover Level', 'Premium Refund', 'RI App', 'User Premium'
                ],
                colModel: [
                    { name: 'COVER_CODE', index: 'COVER_CODE', width: 330, },
                    { name: 'COVER_NAME', index: 'COVER_NAME', width: 330 },
                    { name: 'COVER_TYPE', index: 'COVER_TYPE', width: 150 },
                    { name: 'COVER_DEFT_SI', index: 'COVER_DEFT_SI', width: 330 },
                    { name: 'COVER_DEFT_RATE', index: 'COVER_DEFT_RATE', width: 330 },
                    { name: 'COVER_DISOUNT_YN', index: 'COVER_DISOUNT_YN', width: 330 },
                    { name: 'COVER_LOAD_YN', index: 'COVER_LOAD_YN', width: 330 },
                //
                    { name: 'COVER_RATE_CHANGE', index: 'COVER_RATE_CHANGE', width: 150 },
                    { name: 'COVER_SI_CHANGE', index: 'COVER_SI_CHANGE', width: 150 },
                    { name: 'COVER_LEVEL', index: 'COVER_LEVEL', width: 150 },
                    { name: 'COVER_PREM_REFUND', index: 'COVER_PREM_REFUND', width: 150 },
                    { name: 'COVER_RI_APP', index: 'COVER_RI_APP', width: 150 },
                    { name: 'COVER_USER_PREM', index: 'COVER_USER_PREM', width: 150 },

                ],
                //Retrive Code and description and return on row click..
                onSelectRow: function (rowid) {
                    var grid = $('#gridFindCovers');
                    var sel_id = grid.jqGrid('getGridParam', 'selrow');
                    //
                    var Code = grid.jqGrid('getCell', sel_id, 'COVER_CODE');
                    var Name = grid.jqGrid('getCell', sel_id, 'COVER_NAME');
                    var CoverType = grid.jqGrid('getCell', sel_id, 'COVER_TYPE');
                    var dftSI = grid.jqGrid('getCell', sel_id, 'COVER_DEFT_SI');
                    var dftRate = grid.jqGrid('getCell', sel_id, 'COVER_DEFT_RATE');
                    var disYN = grid.jqGrid('getCell', sel_id, 'COVER_DISOUNT_YN');
                    var laodYN = grid.jqGrid('getCell', sel_id, 'COVER_LOAD_YN');

                    var RateChange = grid.jqGrid('getCell', sel_id, 'COVER_RATE_CHANGE');
                    var SIChange = grid.jqGrid('getCell', sel_id, 'COVER_SI_CHANGE');
                    var CoverLevel = grid.jqGrid('getCell', sel_id, 'COVER_LEVEL');
                    var PremRefund = grid.jqGrid('getCell', sel_id, 'COVER_PREM_REFUND');
                    var RIApp = grid.jqGrid('getCell', sel_id, 'COVER_RI_APP');
                    var UserPrem = grid.jqGrid('getCell', sel_id, 'COVER_USER_PREM');

                    //

                    $("#txtCoverCode").val(Code);
                    $("#txtRiskCoverName").val(Name);
                    $("#txtCovSI").val(dftSI);

                    $('#txtGrossPrem').val(0);
                    $('#txtNetPrem').val(0);

                    $("#txtCoveRate").val(dftRate);
                    $("#txtDiscYN").val(disYN);
                    $("#txtLoadYN").val(laodYN);

                    //
                    $("#txtCoverType").val(CoverType);
                    $("#txtRateChange").val(RateChange);
                    $("#txtSIChange").val(SIChange);
                    $("#txtCoverLevel").val(CoverLevel);
                    $("#txtPremRefund").val(PremRefund);
                    $("#txtRIApp").val(RIApp);
                    $("#txtUserPrem").val(UserPrem);

                },

                rowNum: 50,
                rowList: [50, 100, 200],
                pager: '#grdVehPager',
                sortname: 'Code',
                viewrecords: true,
                sortorder: "asc",
                caption: "Find Covers",
                loadtext: 'Loading, please wait',
                loadonce: true,
                //new added
                width: this.parentElement,
                shrinkToFit: false,
                autowidth: false,
                multiselect: false
            });
            jQuery("#gridFindCovers").jqGrid('navGrid', '#gridFindCovPager',
                { search: true, edit: false, add: false, del: false });

            jQuery("#gridFindCovers").jqGrid('filterToolbar',
             { searchOnEnter: false, stringResult: true, defaultSearch: "cn" });
        });

        //call add function to add records to Vwhicle Risk Grid
        function AddVehicleRisksToGrid() {

            //Declare variables
            var CovGrossPremFC = 0;
            var CovGrossPremBC = 0;

            var CovNetPremFC = 0;
            var CovNetPremBC = 0;

            var CovLoadFC = 0;
            var CovLoadBC = 0;

            var CovDisFC = 0;
            var CovDisBC = 0;
            //
            var riskSIFC = 0;
            var riskSIBC = 0;

            var riskpRremFC = 0;
            var riskpRremBC = 0;
            var riskRIApp = "";

            var grid = $('#gridAppCovers');

            var rowIds = grid.jqGrid('getDataIDs');

            // iterate through the rows and check if it exists each of them
            for (var i = 0, len = rowIds.length; i < len; i++) {
                var currRow = rowIds[i];

                //get value of the cell or column in an array

                var getvehID = grid.jqGrid('getCell', currRow, 'RCOV_RISK_NO');

                var vehID = $("#txtVehSysID").val();

                var covRIApp = grid.jqGrid('getCell', currRow, 'RCOV_RI_YN');



                var vehID = $("#txtVehSysID").val();

                // get Cover Values to be sum up for Vehicle Risk
                if (getvehID == vehID) {


                    CovGrossPremFC += parseFloat(grid.jqGrid('getCell', currRow, 'RCOV_GROSS_PREM_FC'));
                    CovGrossPremBC += parseFloat(grid.jqGrid('getCell', currRow, 'RCOV_GROSS_PREM_BC'));

                    CovNetPremFC += parseFloat(grid.jqGrid('getCell', currRow, 'RCOV_NET_PREM_FC'));
                    CovNetPremBC += parseFloat(grid.jqGrid('getCell', currRow, 'RCOV_NET_PREM_BC'));

                    CovLoadFC += parseFloat(grid.jqGrid('getCell', currRow, 'RCOV_LOAD_FC'));
                    CovLoadBC += parseFloat(grid.jqGrid('getCell', currRow, 'RCOV_LOAD_BC'));

                    CovDisFC += parseFloat(grid.jqGrid('getCell', currRow, 'RCOV_DISC_FC'));
                    CovDisBC += parseFloat(grid.jqGrid('getCell', currRow, 'RCOV_DISC_BC'));

                    if (covRIApp == 'Y') {
                        riskSIFC += parseFloat(grid.jqGrid('getCell', currRow, 'RCOV_SI_FC'));

                        riskSIBC += parseFloat(grid.jqGrid('getCell', currRow, 'RCOV_SI_BC'));

                        riskpRremFC += parseFloat(grid.jqGrid('getCell', currRow, 'RCOV_NET_PREM_FC'));

                        riskpRremBC += parseFloat(grid.jqGrid('getCell', currRow, 'RCOV_NET_PREM_BC'));

                        riskRIApp = covRIApp;
                    }
                }

            }


            // Assign values
            var vehpData = [
            {

                VEH_SYS_ID: $('#txtVehSysID').val(), //vehsysID,
                VEH_POLH_SYS_ID: $('#txtPolsysID').val(),
                VEH_POLH_DOC_NO: $('#txtPolDocNo').val(),
                VEH_POLH_END_NO: 0,
                VEH_RISK_NO: $('#txtVehRiskID').val(),  //vehsysID,
                VEH_ISSUE_DATE: $('#dtIssueDate').val(),
                VEH_RETROS_DATE: $('#dtRetroDate').val(),
                VEH_START_DATE: $('#dtVehstartDate').val(),
                VEH_END_DATE: $('#dtsVehEndDate').val(),
                VEH_PERIOD_DAYS: $('#txtVehPeriodDays').val(),
                VEH_UW_YEAR: 2016, // $('#txtEmpID').val(),
                VEH_CURRENCY: $('#txtCurrCode').val(),
                VEH_CURR_RATE: $('#txtFxRate').val(),
                VEH_PRODUCT_CODE: $('#txtProductCode').val(),
                VEH_COVER_CODE: $('#txtCoverTypeCode').val(),
                VEH_USAGE_CODE: $('#txtVehUsageCode').val(),
                VEH_VEH_REG_NO: $('#txtVehRegNo').val(),
                VEH_MAKE: $('#txtVehMakeCode').val(),
                VEH_MODEL: $('#txtVehModelCode').val(),
                VEH_BODY_TYPE: $('#txtBodyType').val(),

                VEH_MANUFACTURE_YR: $('#txtManuYear').val(),
                VEH_CHASSIS_NO: $('#txtChassisNo').val(),
                VEH_CUBIC_CAP: $('#txtCC').val(),
                VEH_PASSENGERS: $('#txtSeatNo').val(),
                VEH_EXCESS_APP: ($("#chkbuybackExx").is(':checked')) ? 'Y' : 'N',
                VEH_EXCESS_PERC: $('#ExxPerc').val(),
                VEH_EXCESS_MIN: 0,
                VEH_EXCESS_MAX: 0,
                VEH_EXCESS_FIX: 0,
                VEH_EXTRA_TPPD: ($("#chkAddTPPD").is(':checked')) ? 'Y' : 'N',
                VEH_TP_INTEREST: ($("#chkTPInterest").is(':checked')) ? 'Y' : 'N',
                VEH_TP_DETAILS: $('#txtTPInterestInfo').val(),
                VEH_PROP_DECLINED: ($("#chkPropDeclined").is(':checked')) ? 'Y' : 'N',
                VEH_DECLINED_REASON: $('#txtPropDeclReason').val(),
                VEH_POL_CANCELLED: ($("#chkPolCancelled").is(':checked')) ? 'Y' : 'N',
                VEH_CANCELLED_REASON: $('#txtReasonCancelled').val(),
                //
                VEH_SI_FC: riskSIFC,
                VEH_SI_BC: riskSIBC,
                VEH_TOT_PREM_FC: CovGrossPremFC,
                VEH_TOT_PREM_BC: CovGrossPremBC,
                VEH_RI_APPLICABLE: 'Y', //($("#chkRIApp").is(':checked')) ? 'Y' : 'N',
                VEH_RI_EFF_DATE: $('#dtVehstartDate').val(),
                VEH_RI_SI_FC: riskSIFC,
                VEH_RI_SI_BC: riskSIBC,
                VEH_RI_PREM_FC: riskpRremFC,
                VEH_RI_PREM_BC: riskpRremBC,
                VEH_RISK_PREM_FC: riskpRremFC,
                VEH_RISK_PREM_BC: riskpRremBC,
                //  VEH_TP_PREM_BC: riskpRremBC,
                VEH_ADJ_PREM_FC: 0,
                VEH_ADJ_PREM_BC: 0,
                VEH_DISC_FC: CovDisFC,
                VEH_DISC_BC: CovDisBC,
                VEH_LOAD_FC: CovLoadFC,
                VEH_LOAD_BC: CovLoadFC,
                VEH_COMP_FEE_FC: 0,
                VEH_COMP_FEE_BC: 0,
                VEH_COMMISSION_FC: 0,
                VEH_COMMISSION_BC: 0,
                VEH_TXN_STATUS: 'U',
                VEH_RISK_STATE: 'A',
                VEH_RENEWAL_STATUS: 'N',
                VEH_END_TYPE: 'N',

                // VEH_APPROVE_DATE: $('#dtIssueDate').val(),
                //VEH_ACCT_DATE: $('#dtIssueDate').val(),
                VEH_CRTE_BY: 'DEMO',
                //VEH_CRTE_DATE: $('#dtIssueDate').val(),
                VEH_MOD_BY: 'DEMO',
                //VEH_MOD_DATE: $('#dtIssueDate').val(),
                VEH_STATUS: 'U'
            },

            ];
            for (var i = 0; i < vehpData.length; i++)
                jQuery("#gridVehRisks").addRowData(vehpData[i].id, vehpData[i]);
        };


        //call function to Edit/Update records in Vehicle Risk Grid

        function UpdateVehicleRisks() {
            //

            //Declare variables
            var riskGrossPremFC = 0;
            var riskGrossPremBC = 0;

            var riskNetPremFC = 0;
            var riskNetPremBC = 0;

            var riskLoadFC = 0;
            var riskLoadBC = 0;

            var riskDisFC = 0;
            var riskDisBC = 0;
            //
            var riskSIFC = 0;
            var riskSIBC = 0;

            var riskPremFC = 0;
            var riskPremBC = 0;
            var riskRIApp = "";

            //Get vehicle risk grid IDs

            var vehGrid = $('#gridVehRisks');

            var riskRow_id = vehGrid.jqGrid('getGridParam', 'selrow');

            var vehRiskNo = vehGrid.jqGrid('getCell', riskRow_id, 'VEH_RISK_NO');


            //get cover grid IDs

            var covGrid = $('#gridAppCovers');

            var covRowIds = covGrid.jqGrid('getDataIDs');


            //// iterate through the rows and check if it exists each of them
            for (var i = 0, len = covRowIds.length; i < len; i++) {

                var currRow = covRowIds[i];

                //get value of the cell or column in an array

                var covVehRiskNo = covGrid.jqGrid('getCell', currRow, 'RCOV_RISK_NO');


                var covRIApp = covGrid.jqGrid('getCell', currRow, 'RCOV_RI_YN');

                //// get Cover Values to be sum up for Vehicle Risk

                if (covVehRiskNo == vehRiskNo) {

                    riskGrossPremFC += parseFloat(covGrid.jqGrid('getCell', currRow, 'RCOV_GROSS_PREM_FC'));
                    riskGrossPremBC += parseFloat(covGrid.jqGrid('getCell', currRow, 'RCOV_GROSS_PREM_BC'));

                    riskNetPremFC += parseFloat(covGrid.jqGrid('getCell', currRow, 'RCOV_NET_PREM_FC'));
                    riskNetPremBC += parseFloat(covGrid.jqGrid('getCell', currRow, 'RCOV_NET_PREM_BC'));

                    riskLoadFC += parseFloat(covGrid.jqGrid('getCell', currRow, 'RCOV_LOAD_FC'));
                    riskLoadBC += parseFloat(covGrid.jqGrid('getCell', currRow, 'RCOV_LOAD_BC'));

                    riskDisFC += parseFloat(covGrid.jqGrid('getCell', currRow, 'RCOV_DISC_FC'));
                    riskDisBC += parseFloat(covGrid.jqGrid('getCell', currRow, 'RCOV_DISC_BC'));

                    if (covRIApp == 'Y') {

                        riskSIFC += parseFloat(covGrid.jqGrid('getCell', currRow, 'RCOV_SI_FC'));

                        riskSIBC += parseFloat(covGrid.jqGrid('getCell', currRow, 'RCOV_SI_BC'));

                        riskPremFC += parseFloat(covGrid.jqGrid('getCell', currRow, 'RCOV_NET_PREM_FC'));

                        riskPremBC += parseFloat(covGrid.jqGrid('getCell', currRow, 'RCOV_NET_PREM_BC'));

                        //riskRIApp = covRIApp;
                    }
                }

            }
            //

            vehGrid.jqGrid('setCell', riskRow_id, 'VEH_TOT_PREM_FC', riskGrossPremFC);
            vehGrid.jqGrid('setCell', riskRow_id, 'VEH_TOT_PREM_BC', riskGrossPremBC);

            vehGrid.jqGrid('setCell', riskRow_id, 'VEH_SI_FC', riskSIFC);
            vehGrid.jqGrid('setCell', riskRow_id, 'VEH_SI_BC', riskSIBC);

            vehGrid.jqGrid('setCell', riskRow_id, 'VEH_RISK_PREM_FC', riskPremFC);
            vehGrid.jqGrid('setCell', riskRow_id, 'VEH_RISK_PREM_BC', riskPremBC);

            vehGrid.jqGrid('setCell', riskRow_id, 'VEH_RI_SI_FC', riskSIFC);
            vehGrid.jqGrid('setCell', riskRow_id, 'VEH_RI_SI_BC', riskSIBC);

            vehGrid.jqGrid('setCell', riskRow_id, 'VEH_RI_PREM_FC', riskPremFC);
            vehGrid.jqGrid('setCell', riskRow_id, 'VEH_RI_PREM_BC', riskPremBC);

            //
            vehGrid.jqGrid('setCell', riskRow_id, 'VEH_LOAD_FC', riskLoadFC);
            vehGrid.jqGrid('setCell', riskRow_id, 'VEH_LOAD_BC', riskLoadBC);

            vehGrid.jqGrid('setCell', riskRow_id, 'VEH_DISC_FC', riskDisFC);
            vehGrid.jqGrid('setCell', riskRow_id, 'VEH_DISC_BC', riskDisBC);


        };

        //-----Load Defaulted Risk Covers---------------
        function GetRiskCovers(Urlparameter) {

            var CovData = [{
                //pass squence name for generationg cover sys IDs
                paramSeqName: 'SEQ_VEH_COVERS',
                //pass other parameters rquired for generating primiums
                paramProductCode: $('#txtProductCode').val(),
                paramMotorRiskCode: $('#txtVehUsageCode').val(),
                paramCoverCode: $('#txtCoverTypeCode').val(),
                paramSeatNo: $('#txtSeatNo').val(),
                paramFXRate: $('#txtFxRate').val(),
                paramMinimumSeats: 5,
                paramCubicCapacity: $('#dwnCovType').val(),

                paramRiskStartDate: $('#dtVehstartDate').val(),
                paramRiskEndDate: $('#dtsVehEndDate').val(),
                paramInsPeriod: $('#txtVehPeriodDays').val(),

                paramManufYear: $('#txtManuYear').val(),
                //
                paramVehSysID: $('#txtVehSysID').val(),
                paramPolDocNo: $('#txtPolDocNo').val(),
                //txtCoverTypeCode
                //chkbuybackExx
                //ExxPerc
                //txtAddTPPDSI
                paramRenewalYears: '1',
                paramCubicCapacity: 1,
                paramVehicleAge: 3,

            }];
            //alert("No data found, Check and try again");

            $.ajax({

                type: 'POST',
                url: Urlparameter,

                //Data to send

                data: JSON.stringify({ cov: CovData }),

                contentType: 'application/json; charset=utf-8',
                dataType: 'json',


                //dataprocess: true,
                success: function (data) {


                    var Covdata = [data];


                    rowData = jQuery("#gridAppCovers").jqGrid('getRowData');

                    //alert(rowData.length);

                    //check if there is data returned from the data based
                    if (Covdata.length > 0) {
                        //if function output has data, then check if data exists in the Cover grid
                        if (rowData <= 0) {

                            //if no data exists, then just add the data
                            var thegrid = $("#gridAppCovers");

                            //thegrid.clearGridData();

                            for (var i = 0; i < Covdata.length; i++)
                                jQuery("#gridAppCovers").addRowData(Covdata[i].id, Covdata[i]);


                        }
                        else {

                            //add the new default covers and then hide the existing ones

                            for (var i = 0; i < Covdata.length; i++)
                                jQuery("#gridAppCovers").addRowData(Covdata[i].id, Covdata[i]);

                        }
                    }

                    else {
                        alert("No data found, Check and try again")
                    }

                },
                'error': function (error) {

                    alert(JSON.stringify(error));
                }
            });

        };

        //validate required fields........
        $(document).ready(function () {
            $("#btnValidate").click(function () {

                $('#frm-MotorRisk').validate({
                    rules: {
                        txtVehSysID: 'required',
                        txtVehUsageCode: 'required',

                    }
                });

            });
        });


        //Dialog to open Vehicle details form to add new..
        $(document).ready(function () {
            $(function () {
                var dialog, form,

                openVehForm = $("#frm-VehDetails").dialog({
                    autoOpen: false,
                    height: 900,
                    width: 1200,
                    modal: true,

                    buttons: {
                        "OK": function () {

                            $(this).dialog("close");

                            SumPolhAmounts();

                            //calculate policy level Premiumms Summary
                            PolhPremiumSummary();


                        },

                        "Cancel": function () {

                            $(this).dialog("close");

                        },


                    },

                })

                //open the dialog form
                $("#btnAddRisk").button().on("click", function () {

                    initializeVehDetailsForm();

                    openVehForm.dialog("open");
                });

                //open the dialog form
                $("#btnEditVehRisk").button().on("click", function () {

                    //initializeVehDetailsForm();
                    var grid = $('#gridVehRisks');

                    var row_id = grid.jqGrid('getGridParam', 'selrow');


                    //var rowIds = grid.jqGrid('getDataIDs');
                    if (row_id == null) {

                        // if no row is selected
                        alert("No row selected for edit, check and try again");
                    }
                    else {
                        // open selected row for edit

                        openVehForm.dialog("open");
                    }


                });


                // ------
                // ------

            });
        });

        //initialise dialog form to add risk Covers
        var dialog, form;
        //-------------------Dialog Form to  Add Vehicle Risk Covers--------------------------------
        $(document).ready(function () {
            $(function () {

                AddCoversdialog = $("#dlgCovers-form").dialog({
                    autoOpen: false,
                    height: 780,
                    width: 1500,
                    modal: true,

                    buttons: {
                        "OK": function () {
                            //check if Covers are empty or have records
                            var CoverRecordsFound = jQuery("#gridAppCovers").jqGrid('getRowData');

                            if (CoverRecordsFound.length == 0) {
                                //if no records exist, you cannot add vehicle risk
                                alert("At least one Cover must Exist for each risk, Check and try again");
                            }
                            else if (CoverRecordsFound.length != 0) {
                                //if some covers exists, the vehicle record can be added

                                //but check if vehicle is not already added
                                var getVehRiskSysID = $("#txtVehSysID").val();

                                var grid = $('#gridVehRisks');

                                var rowIds = grid.jqGrid('getDataIDs');

                                //declare array to contain the codes to varify
                                var Code = [];

                                // iterate through the rows and check duplicat each of them
                                for (var i = 0, len = rowIds.length; i < len; i++) {
                                    var currRow = rowIds[i];

                                    //get value of the cell or column in an array
                                    var vehRiskSysID = grid.jqGrid('getCell', currRow, 'VEH_SYS_ID');

                                    Code.push(vehRiskSysID);

                                }

                                //find out if the vehicle Risk sys ID exists in the array
                                if ($.inArray(getVehRiskSysID, Code) < 0) {

                                    //Call function to Add Vehicle Risk if it does not exist
                                    AddVehicleRisksToGrid();

                                    //close the form
                                    $(this).dialog("close");

                                    //calculate policy level SI and Premiumms
                                    SumPolhAmounts();

                                    //calculate policy level Premiumms Summary
                                    PolhPremiumSummary();

                                }

                                else {
                                    //Update when it exists

                                    UpdateVehicleRisks();

                                    //close the form
                                    $(this).dialog("close");

                                    //Update Policy level SI and Premium values
                                    SumPolhAmounts();

                                    //calculate policy level Premiumms Summary
                                    PolhPremiumSummary();


                                }

                            }

                            else {

                                $(this).dialog("close");

                                //AddVehicleRisksToGrid();
                            }

                        },

                        "Cancel": function () {

                            //clear Cover grid on cancel if no data in the Vehil risk grid
                            var grid = $('#gridVehRisks');

                            var datainVehGrid = grid.jqGrid('getDataIDs');

                            if (datainVehGrid.length == 0) {
                                $("#gridAppCovers").clearGridData();

                                $(this).dialog("close");
                            }
                            else {
                                $(this).dialog("close");
                            }

                        },
                    }

                });

                //open the dialog form TO add Covers
                $("#btnDeftProductCovers").button().on("click", function () {

                    //Call Function to open the Covers Dlg Window

                    openRiskCoversDlgWindow();

                });

            });

        });

        // Opening Dialog window for Applicable Covers for a risk
        function openRiskCoversDlgWindow() {

            var url = '/api/getDeftRiskCovers';
            //get vehicle sysID if it is not generated
            if ($("#txtVehSysID").val() == "" || $("#txtVehUsageCode").val() == "") {

                alert("Risk details not completed, check and try again")

            }

            else {

                //check if risk already exists in Vehicle Grid

                var getVehRiskSysID = $("#txtVehSysID").val();

                var grid = $('#gridVehRisks');

                var rowIds = grid.jqGrid('getDataIDs');

                //declare array to contain the codes to varify
                var Code = [];

                // iterate through the rows and check duplicat each of them
                for (var i = 0, len = rowIds.length; i < len; i++) {
                    var currRow = rowIds[i];

                    //get value of the cell or column in an array
                    var vehRiskSysID = grid.jqGrid('getCell', currRow, 'VEH_SYS_ID');

                    Code.push(vehRiskSysID);

                }

                //find out if the vehicle Risk sys ID exists in the array
                if ($.inArray(getVehRiskSysID, Code) < 0) {

                    //if it does not exist?

                    //add default risk Covers
                    GetRiskCovers(url);
                    HidSowCovers();
                    SumCoverAmounts();
                    // open the Covers Dialog form
                    AddCoversdialog.dialog("open");
                }
                else {
                    //if it exists, dont add default risk covers

                    AddCoversdialog.dialog("open");

                    HidSowCovers();
                    SumCoverAmounts();
                }



            }

        };
        //Load Vehicle Risk Form on select grid
        function LoadVehicleFromGrid() {
            var grid = $('#gridVehRisks');
            var sel_id = grid.jqGrid('getGridParam', 'selrow');
            //
            var riskSysID = grid.jqGrid('getCell', sel_id, 'VEH_SYS_ID');
            var riskPolsysID = grid.jqGrid('getCell', sel_id, 'VEH_POLH_SYS_ID');
            var riskPolDocNo = grid.jqGrid('getCell', sel_id, 'VEH_POLH_DOC_NO');
            var riskRiskID = grid.jqGrid('getCell', sel_id, 'VEH_RISK_NO');

            var riskUsage = grid.jqGrid('getCell', sel_id, 'VEH_USAGE_CODE');
            var riskUsageName = grid.jqGrid('getCell', sel_id, 'VEH_USAGE_NAME');
            var riskRgnNo = grid.jqGrid('getCell', sel_id, 'VEH_VEH_REG_NO');
            var riskPersons = grid.jqGrid('getCell', sel_id, 'VEH_PASSENGERS');

            var riskCurrency = grid.jqGrid('getCell', sel_id, 'VEH_CURRENCY');
            var riskFxRate = grid.jqGrid('getCell', sel_id, 'VEH_CURR_RATE');
            var riskStartDate = grid.jqGrid('getCell', sel_id, 'VEH_START_DATE');
            var riskEndDate = grid.jqGrid('getCell', sel_id, 'VEH_END_DATE');
            var riskPeriodDays = grid.jqGrid('getCell', sel_id, 'VEH_PERIOD_DAYS');

            var riskIssueDate = grid.jqGrid('getCell', sel_id, 'VEH_ISSUE_DATE');
            var riskRetroDate = grid.jqGrid('getCell', sel_id, 'VEH_RETROS_DATE');
            var riskMake = grid.jqGrid('getCell', sel_id, 'VEH_MAKE');
            var riskModel = grid.jqGrid('getCell', sel_id, 'VEH_MODEL');
            var riskBodyType = grid.jqGrid('getCell', sel_id, 'VEH_BODY_TYPE');
            var riskMakeYear = grid.jqGrid('getCell', sel_id, 'VEH_MANUFACTURE_YR');
            var riskChassisNo = grid.jqGrid('getCell', sel_id, 'VEH_CHASSIS_NO');
            var riskCC = grid.jqGrid('getCell', sel_id, 'VEH_CUBIC_CAP');
            var riskExcessYN = grid.jqGrid('getCell', sel_id, 'VEH_EXCESS_APP');
            var riskExcessPerc = grid.jqGrid('getCell', sel_id, 'VEH_EXCESS_PERC');
            var riskAddTPPD = grid.jqGrid('getCell', sel_id, 'VEH_EXTRA_TPPD');
            var riskInterestYN = grid.jqGrid('getCell', sel_id, 'VEH_TP_INTEREST');
            var riskTPDetails = grid.jqGrid('getCell', sel_id, 'VEH_TP_DETAILS');
            var riskPropDecYN = grid.jqGrid('getCell', sel_id, 'VEH_PROP_DECLINED');
            var riskPropDecReason = grid.jqGrid('getCell', sel_id, 'VEH_DECLINED_REASON');
            var riskPolCancelled = grid.jqGrid('getCell', sel_id, 'VEH_POL_CANCELLED');
            var riskPolCanReason = grid.jqGrid('getCell', sel_id, 'VEH_CANCELLED_REASON');
            var riskProdCode = grid.jqGrid('getCell', sel_id, 'VEH_PRODUCT_CODE');
            var riskCoverCode = grid.jqGrid('getCell', sel_id, 'VEH_COVER_CODE');
            //var riskSysID = grid.jqGrid('getCell', sel_id, 'VEH_SYS_ID');

            $('#txtVehSysID').val(riskSysID); //vehsysID,
            $('#txtPolsysID').val(riskPolsysID);
            $('#txtPolDocNo').val(riskPolDocNo);

            $('#txtVehRiskID').val(riskRiskID);
            $('#dtIssueDate').val(riskIssueDate);
            $('#dtRetroDate').val(riskRetroDate);
            $('#dtVehstartDate').val(riskStartDate);
            $('#dtsVehEndDate').val(riskEndDate);
            $('#txtVehPeriodDays').val(riskPeriodDays);
            $('#txtCurrCode').val(riskCurrency);
            $('#txtFxRate').val(riskFxRate);
            $('#txtProductCode').val(riskProdCode);
            $('#txtCoverTypeCode').val(riskCoverCode);
            $('#txtVehUsageCode').val(riskUsage);
            $('#txtUsageName').val(riskUsageName);
            $('#txtVehRegNo').val(riskRgnNo);
            $('#txtVehMakeCode').val(riskMake);
            $('#txtVehModelCode').val(riskModel);
            $('#txtBodyType').val(riskBodyType);

            $('#txtManuYear').val(riskMakeYear);
            $('#txtChassisNo').val(riskChassisNo);
            $('#txtCC').val(riskCC);
            $('#txtSeatNo').val(riskPersons);
            //riskExcessYN
            ($("#chkbuybackExx").is(':checked')) ? 'Y' : 'N';
            $('#ExxPerc').val(riskExcessPerc);
            ($("#chkAddTPPD").is(':checked')) ? 'Y' : 'N';
            ($("#chkTPInterest").is(':checked')) ? 'Y' : 'N'; //riskAddTPPD
            $('#txtTPInterestInfo').val(riskTPDetails),
            ($("#chkPropDeclined").is(':checked')) ? 'Y' : 'N';
            $('#txtPropDeclReason').val(riskPropDecReason),
            ($("#chkPolCancelled").is(':checked')) ? 'Y' : 'N';
            $('#txtReasonCancelled').val(riskPolCanReason);
            // "OOOO"

        }

        //Hide or show Covers in the Risk Covers (to filter out the covers for particular risk
        function HidSowCovers() {


            var grid = $('#gridAppCovers');

            var rowIds = grid.jqGrid('getDataIDs');

            // iterate through the rows and check if it exists each of them
            for (var i = 0, len = rowIds.length; i < len; i++) {
                var currRow = rowIds[i];

                //get value of the cell or column in an array

                var getvehID = grid.jqGrid('getCell', currRow, 'RCOV_RISK_NO');

                var vehID = $("#txtVehSysID").val();

                if (getvehID != vehID) {
                    $("#" + currRow).hide();

                }
                else {

                    $("#" + currRow).show();

                }
            }
        };

        //----------------------- Dialog Form to Select covers --------------------------------
        $(function () {
            var dialog, form,
            SelCovDialog = $("#dlgSelCovers-form").dialog({
                autoOpen: false,
                height: 600,
                width: 750,
                modal: true,

                buttons: {
                    "OK": function () {

                        $(this).dialog("close");

                    },

                    "Cancel": function () {

                        $(this).dialog("close");

                    },
                }

            });

            //open the dialog form on button click
            $("#btnSelCovCode").button().on("click", function () {

                if ($("#txtVehSysID").val() == "") {
                    alert("Form not properly initialised, please refresh and try again");
                }
                else {

                    SelCovDialog.dialog("open");
                }

            });

        });

        //Query Motor Policy function
        function getMotorPolicyData(callback) {

            var PolhSysID = [{

                parampolhSysID: $("#txtSearch").val(),

            }];

            //alert("No data found, Check and try again");

            $.ajax({

                type: 'POST',
                url: '/api/getMotorPolicy',

                //Data to send

                data: JSON.stringify({ sysID: PolhSysID }),

                contentType: 'application/json; charset=utf-8',
                dataType: 'json',


                //dataprocess: true,
                success: function (data) {
                    if (data.length > 0) {
                        callback(data);
                    }
                    else {
                        aler("No data found, please check and try again");
                    }



                },
                'error': function (error) {

                    alert(JSON.stringify(error));
                }

            });
        }

        //Query Motor Policy and fill data

        $(document).ready(function () {
            $("#btnQueryMotorPolicy").click(function () {

                //Call Save function
                getMotorPolicyData(getMotorData);

                function getMotorData(data) {

                    // alert(JSON.stringify(data));

                    var PolicyData = data[0].POLH_DATA;
                    var VehicleData = data[0].VEH_DATA;
                    var CoverRiskData = data[0].COVER_DATA;

                    //var PolNo = data[0].POLH_DATA[0].C;
                    //$("#txtSearch").val(PolNo);

                    //alert(JSON.stringify(VehicleData.length));

                    // alert(JSON.stringify(VehicleData));

                    if (PolicyData.length > 0) {

                        $('#txtComCode').val(PolicyData[0].POLH_COMP_CODE);

                        $('#txtChanIntermCode').val(PolicyData[0].POLH_CHANNEL_CODE);
                        $('#txtOffCode').val(PolicyData[0].POLH_OFF_CODE);
                        $('#txtCustCode').val(PolicyData[0].POLH_CUST_CODE);
                        $('#txtInsSrcCode').val(PolicyData[0].POLH_INS_SOURCE);
                        $('#txtbizSrcCode').val(PolicyData[0].POLH_BIZ_SOURCE);
                        $('#txtAgencySrcCode').val(PolicyData[0].POLH_INTERMIDIARY);
                        $('#dtPolstartDate').val(PolicyData[0].POLH_POL_START_DATE);
                        $('#dtPolEndDate').val(PolicyData[0].POLH_POL_END_DATE);
                        $('#txtPolDays').val(PolicyData[0].POLH_POL_DAYS);

                        $('#txtPolicyState').val("A");

                        $('#txtPolicyNo').val(PolicyData[0].POLH_DISPLAY_NO);

                        ////system values

                        //$('#txtPolsysID').val(PolicyData[0].POLH_SYS_ID);
                        $('#txtPolsysID').val(PolicyData[0].POLH_SYS_ID);
                        $('#txtPolDocNo').val(PolicyData[0].POLH_DOC_NO);
                        $('#txtPolEndNo').val(PolicyData[0].POLH_END_NO);

                        //POLH_END_NO: 0,
                        //$('#txtPolsysID').val(POLH_QUT_SER_NO);
                        // $('#txtPolsysID').val(PolicyData[0].POLH_POL_SER_NO);
                        $('#txtProductCode').val(PolicyData[0].POLH_CLASS_CODE);
                        $('#txtCoverTypeCode').val(PolicyData[0].POLH_SUB_CLASS_CODE);


                        $('#txtPolPremFC').val(PolicyData[0].POLH_POL_PREM_FC);
                        $('#txtPolPremBC').val(PolicyData[0].POLH_POL_PREM_BC);
                        //
                        $('#txtPolLoadFC').val(PolicyData[0].POLH_POL_LOAD_FC);
                        $('#txtPolLoadBC').val(PolicyData[0].POLH_POL_LOAD_BC);

                        $('#txtPolDiscFC').val(PolicyData[0].POLH_POL_DIS_FC);
                        $('#txtPolDiscBC').val(PolicyData[0].POLH_POL_DIS_BC);

                        $('#txtPolSIFC').val(PolicyData[0].POLH_POL_SI_FC);
                        $('#txtPolSIBC').val(PolicyData[0].POLH_POL_SI_BC);

                        //POLH_COINS_SI_FC: 0,
                        //POLH_COINS_SI_BC: 0,
                        //POLH_COINS_PREM_FC: 0,
                        //POLH_COINS_PREM_BC: 0,
                        //POLH_NET_SI_FC: 0,
                        //POLH_NET_SI_BC: 0,
                        //POLH_NET_PREM_FC: 0,
                        //POLH_NET_PREM_BC: 0,
                        //POLH_FEE_FC: 0,
                        //POLH_FEE_BC: 0,
                        //POLH_RENEW_SER_NO: 0,
                        //POLH_TXN_STATE: 'U',
                        //POLH_POL_STATE: 'U',
                        //POLH_END_TYPE: 'N',
                        ////POLH_APPROVE_DATE:
                        ////POLH_ACCT_DATE:

                        //POLH_CRTE_BY: 'DEMO',
                        ////POLH_CRTE_DATE:
                        //POLH_MOD_BY: 'DEMO',
                        ////POLH_MOD_DATE:
                        //POLH_STATUS: "U"

                        //load Vehicle

                        if (VehicleData.length > 0) {

                            //clear before loading
                            $("#gridVehRisks").clearGridData();
                            //Load grid
                            for (var i = 0; i < VehicleData.length; i++)
                                jQuery("#gridVehRisks").addRowData(VehicleData[i].id, VehicleData[i]);


                        }

                        if (CoverRiskData.length > 0) {

                            //clear before loading
                            $("#gridAppCovers").clearGridData();
                            //Load grid
                            for (var i = 0; i < CoverRiskData.length; i++)
                                jQuery("#gridAppCovers").addRowData(CoverRiskData[i].id, CoverRiskData[i]);
                        }

                        //Call function to get Policy Level premium


                        PolhPremiumSummary();
                    }
                    else
                        alert("No Data found, check and try again");
                }


            });
        });
        ///

        //-------------function to find Covers
        function findCovers() {

            var CoverData = [{
                paramProdCode: $("#txtProductCode").val(),
                paramsearchField: $("#txtFindField").val(),
                paramCoverCode: $('#txtCoverCode').val()
            }];

            //alert("No data found, Check and try again");

            $.ajax({

                type: 'POST',
                url: '/api/findProdCovers',

                //Data to send

                data: JSON.stringify({ cov: CoverData }),

                contentType: 'application/json; charset=utf-8',
                dataType: 'json',


                //dataprocess: true,
                success: function (data) {

                    //clear the grid
                    $("#gridFindCovers").clearGridData();

                    var Covdata = data;
                    //alert(data);

                    if (Covdata.length > 0) {
                        for (var i = 0; i < Covdata.length; i++)

                            jQuery("#gridFindCovers").addRowData(Covdata[i].id, Covdata[i]);
                    }
                    else {

                        alert("No data found, Check and try again");
                    }

                },
                'error': function (error) {

                    alert(JSON.stringify(error));
                }

            });

        };
        //-----Find Covers---------------

        $(document).ready(function () {
            $("#btnfindProdCovers").click(function () {

                //Call function to get covers
                findCovers();

            });
        });

        // Call to Edit/Update covers
        $(document).ready(function () {
            $("#btnEditCovers").click(function () {
                alert("Are you sure you want to edit the current Cover?")

                //call update function
                UpdateCovers();
                // Call function to sum cover amounts
                SumCoverAmounts();



            });
        });

        //Edit/Update covers Function
        function UpdateCovers() {

            var grid = $('#gridAppCovers');

            var row_id = grid.jqGrid('getGridParam', 'selrow');

            var coverCode = grid.jqGrid('getCell', row_id, 'RCOV_CODE');

            if (coverCode == $('#txtCoverCode').val()) {

                grid.jqGrid('setCell', row_id, 'RCOV_SI_FC', $('#txtCovSI').val());
                grid.jqGrid('setCell', row_id, 'RCOV_SI_BC', $('#txtCovSI').val());

                grid.jqGrid('setCell', row_id, 'RCOV_RATE', $('#txtCoveRate').val());

                grid.jqGrid('setCell', row_id, 'RCOV_GROSS_PREM_FC', $('#txtGrossPrem').val());
                grid.jqGrid('setCell', row_id, 'RCOV_GROSS_PREM_BC', $('#txtGrossPrem').val());

                grid.jqGrid('setCell', row_id, 'RCOV_NET_PREM_FC', $('#txtNetPrem').val());
                grid.jqGrid('setCell', row_id, 'RCOV_NET_PREM_BC', $('#txtNetPrem').val());

                grid.jqGrid('setCell', row_id, 'RCOV_DISC_FC', $('#txtDiscount').val());
                grid.jqGrid('setCell', row_id, 'RCOV_DISC_BC', $('#txtDiscount').val());

                grid.jqGrid('setCell', row_id, 'RCOV_LOAD_FC', $('#txtLoading').val());
                grid.jqGrid('setCell', row_id, 'RCOV_LOAD_BC', $('#txtLoading').val());

            }

        }


        //Delete Cover Function
        function DeleteCovers() {

            var grid = $('#gridAppCovers');

            var row_id = grid.jqGrid('getGridParam', 'selrow');

            var recordStatus = grid.jqGrid('getCell', row_id, 'RCOV_STATUS');


            var CoverCode = grid.jqGrid('getCell', row_id, 'RCOV_CODE');

            // Remove newlly added record before saving
            if (recordStatus == "U") {

                grid.jqGrid('delRowData', row_id);

            }

            // Mark a record for deletion on saving
            if (recordStatus == "A") {
                grid.jqGrid('setCell', row_id, 'RCOV_STATUS', 'D');
                $('#' + row_id, '#gridAppCovers').css({ color: 'red' })
            }
            else if (recordStatus == "D") {

                $('#' + row_id, '#gridAppCovers').css({ color: 'red' })

            }

        }

        //Call function to delete Covers
        $(document).ready(function () {
            $("#btnDeleteCovers").click(function () {

                alert("are you sure you want to delete the current record?")

                //call delelte
                DeleteCovers();
                // Call function to sum cover amounts
                SumCoverAmounts();


            })
        });
        //Call function to delete Vehicle Risks

        $(document).ready(function () {
            $("#btnDeleteVehRisk").click(function () {

                var riskGrid = $('#gridVehRisks');

                var riskRow_id = riskGrid.jqGrid('getGridParam', 'selrow');

                var riskStatus = riskGrid.jqGrid('getCell', riskRow_id, 'VEH_STATUS');

                var risksSysID = riskGrid.jqGrid('getCell', riskRow_id, 'VEH_SYS_ID');

                //covers ids
                var covGrid = $('#gridAppCovers');

                var covRowIds = covGrid.jqGrid('getDataIDs');


                if (riskRow_id == null) {
                    //alert if now row is selected..
                    alert("No record is selected for Delete, please check and try again");
                }
                else {

                    // Remove newlly added record before saving
                    if (riskStatus == "U") {

                        alert("Are you sure you want to delete the newly added record,Note: this record will be deleted permanently!");
                        // iterate through the rows and check if it exists each of them
                        for (var i = 0, len = covRowIds.length; i < len; i++) {
                            var covCurrRow = covRowIds[i];

                            //get value of the cell or column in an array

                            var getCovRiskID = covGrid.jqGrid('getCell', covCurrRow, 'RCOV_RISK_NO');

                            // alert(getCovRiskID + " " + risksSysID);

                            if (getCovRiskID == risksSysID) {

                                covGrid.jqGrid('delRowData', covCurrRow);
                            }
                        }

                        riskGrid.jqGrid('delRowData', riskRow_id);

                    }

                    // Mark a record for deletion on saving
                    if (riskStatus == "A") {

                        alert("Are you sure you want to delete the Record,Note: this record will be deleted permanently after saving");

                        // iterate through the rows and check if it exists each of them
                        for (var i = 0, len = covRowIds.length; i < len; i++) {
                            var covCurrRow = covRowIds[i];

                            //get value of the cell or column in an array

                            var getCovRiskID = covGrid.jqGrid('getCell', covCurrRow, 'RCOV_RISK_NO');


                            if (getCovRiskID == risksSysID) {

                                covGrid.jqGrid('setCell', covCurrRow, 'RCOV_STATUS', 'D');

                                $('#' + covCurrRow, '#gridAppCovers').css({ color: 'red' })

                            }
                        }

                        riskGrid.jqGrid('setCell', riskRow_id, 'VEH_STATUS', 'D');

                        $('#' + riskRow_id, '#gridVehRisks').css({ color: 'red' })

                    }
                    else if (riskStatus == "D") {



                        alert("The record will is already marked for deletion, do you want to undo deletion?");

                        for (var i = 0, len = covRowIds.length; i < len; i++) {
                            var covCurrRow = covRowIds[i];

                            //get value of the cell or column in an array

                            var getCovRiskID = covGrid.jqGrid('getCell', covCurrRow, 'RCOV_RISK_NO');


                            if (getCovRiskID == risksSysID) {

                                covGrid.jqGrid('setCell', covCurrRow, 'RCOV_STATUS', 'A');

                                $('#' + covCurrRow, '#gridAppCovers').css({ color: 'black' })

                            }
                        }

                        riskGrid.jqGrid('setCell', riskRow_id, 'VEH_STATUS', 'A');

                        $('#' + riskRow_id, '#gridVehRisks').css({ color: 'black' })
                    }
                }

            })
        });

        // calculate sum of cover amounts
        function SumCoverAmounts() {

            //Declare variables
            var SumGrossPremFC = 0;
            var SumGrossPremBC = 0;

            var SumNetPremFC = 0;
            var SumNetPremBC = 0;

            var SumLoadFC = 0;
            var SumLoadBC = 0;

            var SumDisFC = 0;
            var SumDisBC = 0;

            var grid = $('#gridAppCovers');

            var rowIds = grid.jqGrid('getDataIDs');

            // iterate through the rows and check if it exists each of them
            for (var i = 0, len = rowIds.length; i < len; i++) {
                var currRow = rowIds[i];

                //get value of the cell or column in an array

                var getvehID = grid.jqGrid('getCell', currRow, 'RCOV_RISK_NO');

                var vehID = $("#txtVehSysID").val();

                if (getvehID != vehID) {
                    $("#" + currRow).hide();

                }
                else {

                    //
                    $("#" + currRow).show();

                    SumGrossPremFC += parseFloat(grid.jqGrid('getCell', currRow, 'RCOV_GROSS_PREM_FC'));
                    SumGrossPremBC += parseFloat(grid.jqGrid('getCell', currRow, 'RCOV_GROSS_PREM_BC'));

                    SumNetPremFC += parseFloat(grid.jqGrid('getCell', currRow, 'RCOV_NET_PREM_FC'));
                    SumNetPremBC += parseFloat(grid.jqGrid('getCell', currRow, 'RCOV_NET_PREM_BC'));

                    SumLoadFC += parseFloat(grid.jqGrid('getCell', currRow, 'RCOV_LOAD_FC'));
                    SumLoadBC += parseFloat(grid.jqGrid('getCell', currRow, 'RCOV_LOAD_BC'));

                    SumDisFC += parseFloat(grid.jqGrid('getCell', currRow, 'RCOV_DISC_FC'));
                    SumDisBC += parseFloat(grid.jqGrid('getCell', currRow, 'RCOV_DISC_BC'));
                }
            }

            grid.jqGrid('footerData', 'set', { 'RCOV_GROSS_PREM_FC': SumGrossPremFC });
            grid.jqGrid('footerData', 'set', { 'RCOV_GROSS_PREM_BC': SumGrossPremBC });

            grid.jqGrid('footerData', 'set', { 'RCOV_NET_PREM_FC': SumNetPremFC });
            grid.jqGrid('footerData', 'set', { 'RCOV_NET_PREM_BC': SumNetPremBC });

            grid.jqGrid('footerData', 'set', { 'RCOV_LOAD_FC': SumLoadFC });
            grid.jqGrid('footerData', 'set', { 'RCOV_LOAD_BC': SumLoadBC });

            grid.jqGrid('footerData', 'set', { 'RCOV_DISC_FC': SumDisFC });
            grid.jqGrid('footerData', 'set', { 'RCOV_DISC_BC': SumDisBC });
        };
        //Policy Level SI and premium Calculations

        // calculate sum of Risk level amounts
        function SumPolhAmounts() {

            //Declare variables
            var polGrossPremFC = 0;
            var polGrossPremBC = 0;

            var polNetPremFC = 0;
            var polNetPremBC = 0;

            var polLoadFC = 0;
            var polLoadBC = 0;

            var polDisFC = 0;
            var polDisBC = 0;

            var polSIFC = 0;
            var polSIBC = 0;

            //
            var polgrid = $('#gridVehRisks');

            var polrowIds = polgrid.jqGrid('getDataIDs');


            // iterate through the rows and check if it exists each of them
            for (var i = 0, len = polrowIds.length; i < len; i++) {

                var currRow = polrowIds[i];

                // Sum risk level Amounts for Policy Level Amounts

                polGrossPremFC += parseFloat(polgrid.jqGrid('getCell', currRow, 'VEH_TOT_PREM_FC'));
                polGrossPremBC += parseFloat(polgrid.jqGrid('getCell', currRow, 'VEH_TOT_PREM_BC'));

                polLoadFC += parseFloat(polgrid.jqGrid('getCell', currRow, 'VEH_LOAD_FC'));
                polLoadBC += parseFloat(polgrid.jqGrid('getCell', currRow, 'VEH_LOAD_BC'));

                polDisFC += parseFloat(polgrid.jqGrid('getCell', currRow, 'VEH_DISC_FC'));
                polDisBC += parseFloat(polgrid.jqGrid('getCell', currRow, 'VEH_DISC_BC'));

                polSIFC += parseFloat(polgrid.jqGrid('getCell', currRow, 'VEH_SI_FC'));
                polSIBC += parseFloat(polgrid.jqGrid('getCell', currRow, 'VEH_SI_BC'));

            }


            $('#txtPolPremFC').val(polGrossPremFC);
            $('#txtPolPremBC').val(polGrossPremBC);
            //
            $('#txtPolLoadFC').val(polLoadFC);
            $('#txtPolLoadBC').val(polLoadBC);

            $('#txtPolDiscFC').val(polDisFC);
            $('#txtPolDiscBC').val(polDisBC);

            $('#txtPolSIFC').val(polSIFC);
            $('#txtPolSIBC').val(polSIBC);
        };

        //Create new Vehicle function
        function initializeVehDetailsForm() {
            //clear and reset form

            $("#txtLoading").val("0.00");
            $("#txtDiscount").val("0.00");

            //$('#frm-MotorRisk')[0].reset();
            //sete Risk state
            $("#txtVehRiskState").val("U");

            //Delete ****
            //$("#txtVehUsageCode").val("101");
            //$("#txtProductCode").val("6001");
            //$("#txtFxRate").val("1");
            //$("#txtSeatNo").val("10");

            //get vehicle sysID if it is not generated
            if ($("#txtVehSysID").val() == "") {
                RetnSequenceNo("SEQ_VEH", getVehSeqNo);

                //var VehSeqNo;
                function getVehSeqNo(data) {
                    //VehSeqNo = data;
                    $("#txtVehSysID").val(data);
                    $("#txtVehRiskID").val(data);

                    //generate Policy header sysID  if it is not generated
                    if ($("#txtPolsysID").val() == "") {
                        var PolHeadSeqNo;
                        RetnSequenceNo("SEQ_POL_HEADER", getpolHeadSeqNo);


                        var VehSeqNo;
                        function getpolHeadSeqNo(data) {
                            // VehSeqNo = data;
                            $("#txtPolsysID").val(data);
                            $("#txtPolDocNo").val(data);

                        }
                    }
                    else {
                        var poldocNo = $("#txtPolsysID").val();
                        $("#txtPolDocNo").val(poldocNo);
                    };

                    //enable controls
                    $('#txtVehUsageCode').prop('disabled', false);
                    $('#txtVehUsageCode').css("background", "antiquewhite");

                    $('#btnSelUsage').prop('disabled', false);
                    $('#btnSelUsage').css("background", "white");
                }
            }
            else {

            }
        };


        // Initialse form controls on load form
        $(document).ready(function () {

            $('#txtVehUsageCode').prop('disabled', true);
            $('#txtVehUsageCode').css("background", "silver");

            $('#txtUsageName').prop('disabled', true);
            $('#txtUsageName').css("background", "silver");

            $('#btnSelUsage').prop('disabled', true);
            $('#btnSelUsage').css("background", "silver");
        });

        // calculate premium on leaving the rate field

        $(document).ready(function () {

            $('#txtGrossPrem').prop('disabled', true);
            $('#txtNetPrem').prop('disabled', true);

            $('#txtNetPrem').css("background", "silver");

            $('#txtGrossPrem').css("background", "silver");

            document.getElementById("txtCoveRate").addEventListener("focusout", rateFunction);
            document.getElementById("txtCovSI").addEventListener("focusout", rateFunction);


            function rateFunction() {
                //alert("Input field lost focus.");
                var grossPrem = "0";
                var NetPrem = "0";

                grossPrem = ($('#txtCovSI').val() * $('#txtCoveRate').val() * 0.01).toFixed(2);
                NetPrem = ($('#txtCovSI').val() * $('#txtCoveRate').val() * 0.01).toFixed(2);
                $('#txtGrossPrem').val(grossPrem);
                $('#txtNetPrem').val(NetPrem);
            }
        });

        // check if Code exists in grid on leaving the code field
        $(document).ready(function () {

            document.getElementById("txtCoverCode").addEventListener("focusout", FindIfCoverExists);

            function FindIfCoverExists() {

                var grid = $('#gridAppCovers');

                var rowIds = grid.jqGrid('getDataIDs');

                //declare array to contain the codes to varify
                var Code = [];

                // iterate through the rows and check duplicat each of them
                for (var i = 0, len = rowIds.length; i < len; i++) {
                    var currRow = rowIds[i];

                    //get value of the cell or column in an array
                    var cellValue = grid.jqGrid('getCell', currRow, 'RCOV_CODE');

                    Code.push(cellValue);

                }

                //find out if the code exists in the array
                if ($.inArray($('#txtCoverCode').val(), Code) < 0) {

                    //Call function to Search for  Cover

                }
                else {

                    // alert("Cover already added");

                }
            }
        });

        // ================= Applicable Covers Grid ======================

        $(document).ready(function () {

            $("#gridAppCovers").jqGrid({
                data: 'local',
                colNames: [
                    'Cover Code', 'Cover Name', 'Cover Type', 'Sum Insured FC', 'Sum Insured BC', 'Rate',
                    'Gross Premium FC', 'Gross Premium BC', 'Net Premium FC', 'Net Premium BC',
                    'Discount Applicable',
                    'Discount FC',
                    'Discount BC', 'Load Apllicable', 'Load FC', 'Load BC', 'Cover id', 'Risk id',
                    'Risk no', 'Pol doc no', 'End. no', 'RI SI YN', 'RI Premium YN',
                    'Rate Change', 'SI Change', 'Cover Level', 'Premium Refund', 'RI App', 'User Premium',
                    'Txn State', 'Create By', 'Create Date', 'Modified By', 'Modified Date',
                    'Record Status'

                ],
                colModel: [
                { name: 'RCOV_CODE', index: 'RCOV_CODE', width: 150 },
                { name: 'RCOV_NAME', index: 'RCOV_NAME', width: 150 },
                 { name: 'COVER_TYPE', index: 'COVER_TYPE', width: 150 },
                { name: 'RCOV_SI_FC', index: 'RCOV_SI_FC', width: 150 },
                { name: 'RCOV_SI_BC', index: 'RCOV_SI_BC', width: 150 },
                { name: 'RCOV_RATE', index: 'RCOV_RATE', width: 150 },
                { name: 'RCOV_GROSS_PREM_FC', index: 'RCOV_GROSS_PREM_FC', width: 150 },
                { name: 'RCOV_GROSS_PREM_BC', index: 'RCOV_GROSS_PREM_BC', width: 150 },
                { name: 'RCOV_NET_PREM_FC', index: 'RCOV_NET_PREM_FC', width: 150 },
                { name: 'RCOV_NET_PREM_BC', index: 'RCOV_NET_PREM_BC', width: 150 },

                { name: 'RCOV_DISC_YN', index: 'RCOV_DISC_YN', width: 150 },

                { name: 'RCOV_DISC_FC', index: 'RCOV_DISC_FC', width: 150 },
                { name: 'RCOV_DISC_BC', index: 'RCOV_DISC_BC', width: 150 },

                { name: 'RCOV_LOAD_YN', index: 'RCOV_LOAD_YN', width: 150 },

                { name: 'RCOV_LOAD_FC', index: 'RCOV_LOAD_FC', width: 150 },
                { name: 'RCOV_LOAD_BC', index: 'RCOV_LOAD_BC', width: 150 },

                { name: 'RCOV_SYS_ID', index: 'RCOV_SYS_ID', hidden: false, width: 150, sorttype: "int" },
                { name: 'RCOV_RISK_SYS_ID', index: 'RCOV_RISK_SYS_ID', hidden: false, width: 150, sorttype: "int" },
                { name: 'RCOV_RISK_NO', index: 'RCOV_RISK_NO', hidden: false, width: 150 },
                { name: 'RCOV_POLH_DOC_NO', index: 'RCOV_POLH_DOC_NO', width: 150 },
                { name: 'RPCOV_END_NO', index: 'RPCOV_END_NO', width: 150 },
                { name: 'RCOV_RI_SI_YN', index: 'RCOV_RI_SI_YN', hidden: false, width: 150 },
                { name: 'RCOV_RI_PREM_YN', index: 'RCOV_RI_PREM_YN', hidden: false, width: 150 },
                //
                { name: 'COVER_RATE_CHANGE', index: 'COVER_RATE_CHANGE', width: 150 },
                { name: 'COVER_SI_CHANGE', index: 'COVER_SI_CHANGE', width: 150 },
                { name: 'COVER_LEVEL', index: 'COVER_LEVEL', width: 150 },
                { name: 'COVER_PREM_REFUND', index: 'COVER_PREM_REFUND', width: 150 },
                { name: 'RCOV_RI_YN', index: 'RCOV_RI_YN', width: 150 },
                { name: 'COVER_USER_PREM', index: 'COVER_USER_PREM', width: 150 },

                //
                { name: 'RCOV_TXN_STATE', index: 'RCOV_TXN_STATE', width: 150 },
                { name: 'RCOV_CRTE_BY', index: 'RCOV_CRTE_BY', width: 150 },
                { name: 'RCOV_CRTE_DATE', index: 'RCOV_CRTE_DATE', width: 150 },
                { name: 'RCOV_MOD_BY', index: 'RCOV_MOD_BY', width: 150 },
                { name: 'RCOV_MOD_DATE', index: 'RCOV_MOD_DATE', width: 150 },
                { name: 'RCOV_STATUS', index: 'RCOV_STATUS', width: 150 },
                ],
                //Retrive Values from Cover Grid and return on row click..
                onSelectRow: function (rowid) {
                    var grid = $('#gridAppCovers');
                    var sel_id = grid.jqGrid('getGridParam', 'selrow');
                    //
                    var Code = grid.jqGrid('getCell', sel_id, 'RCOV_CODE');
                    var Name = grid.jqGrid('getCell', sel_id, 'RCOV_NAME');
                    var CoverType = grid.jqGrid('getCell', sel_id, 'COVER_TYPE');
                    //
                    var CoverSI = grid.jqGrid('getCell', sel_id, 'RCOV_SI_FC');
                    var CoverRate = grid.jqGrid('getCell', sel_id, 'RCOV_RATE');
                    var GrossPrem = grid.jqGrid('getCell', sel_id, 'RCOV_GROSS_PREM_FC');
                    var NetPrem = grid.jqGrid('getCell', sel_id, 'RCOV_NET_PREM_FC');
                    //
                    var disYN = grid.jqGrid('getCell', sel_id, 'RCOV_DISC_YN');
                    var laodYN = grid.jqGrid('getCell', sel_id, 'RCOV_LOAD_YN');

                    var RateChange = grid.jqGrid('getCell', sel_id, 'COVER_RATE_CHANGE');
                    var SIChange = grid.jqGrid('getCell', sel_id, 'COVER_SI_CHANGE');
                    var CoverLevel = grid.jqGrid('getCell', sel_id, 'COVER_LEVEL');
                    var PremRefund = grid.jqGrid('getCell', sel_id, 'COVER_PREM_REFUND');
                    var RIApp = grid.jqGrid('getCell', sel_id, 'RCOV_RI_YN');
                    var UserPrem = grid.jqGrid('getCell', sel_id, 'COVER_USER_PREM');
                    //
                    $("#txtCoverCode").val(Code);
                    $("#txtRiskCoverName").val(Name);
                    $("#txtCoverType").val(CoverType);
                    $("#txtCovSI").val(CoverSI);
                    $("#txtCoveRate").val(CoverRate);
                    $('#txtGrossPrem').val(GrossPrem);
                    $('#txtNetPrem').val(NetPrem);
                    $("#txtDiscYN").val(disYN);
                    $("#txtLoadYN").val(laodYN);
                    //
                    $("#txtRateChange").val(RateChange);
                    $("#txtSIChange").val(SIChange);
                    $("#txtCoverLevel").val(CoverLevel);
                    $("#txtPremRefund").val(PremRefund);
                    $("#txtRIApp").val(RIApp);
                    $("#txtUserPrem").val(UserPrem);

                },

                rowNum: 30,
                rowList: [30, 50, 100],
                pager: '#gridAppCovPager',
                sortname: 'Code',
                viewrecords: true,
                sortorder: "asc",
                caption: "Cover list",
                //loadtext: 'Loading, please wait',
                //new added
                width: this.parentElement,
                shrinkToFit: false,
                autowidth: false,
                multiselect: false,
                //
                footerrow: true,
                gridComplete: function () {

                    // Call function to sum cover amounts on adding covers
                    SumCoverAmounts();

                }
                //

            });
            jQuery("#gridAppCovers").jqGrid('navGrid', '#gridAppCovPager',
                { edit: false, add: false, del: false });
        });

        //Premium Summary Grid
        $(document).ready(function () {

            $("#gridPremSum").jqGrid({
                data: 'local',
                colNames: [
                    'DESCRIPTION', 'FC AMOUNT', 'BC AMOUNT'

                ],
                colModel: [
                { name: 'DESCRIPTION', index: 'DESCRIPTION', width: 400 },
                { name: 'FC_AMOUNT', index: 'FC_AMOUNT', width: 400 },
                { name: 'BC_AMOUNT', index: 'BC_AMOUNT', width: 400 },
                ],
                rowNum: 30,
                rowList: [30, 50, 100],
                pager: '#gridPremSumPager',
                sortname: 'Code',
                viewrecords: true,
                sortorder: "asc",
                caption: "PREMIUM SUMMARY",
                //loadtext: 'Loading, please wait',
                //new added
                width: this.parentElement,
                shrinkToFit: false,
                autowidth: false,
                multiselect: false,
                //
                footerrow: true,
                gridComplete: function () {

                    // Call function to sum risk amounts on adding risks

                    // PolhPremiumSummary();


                }
                //

            });

        });

        //Premium Register Grid
        $(document).ready(function () {

            $("#gridPremReg").jqGrid({
                data: 'local',
                colNames: [
                    'Pol sys ID', 'Pol Doc. No.', 'END No.', ' COB', 'Customer ID','Office',
                    'Insurane Source', 'Business Source', 'Treatty source', 'UW Accounts Type', 'FC Amount', 'BC Amount',
                    'Reference No.', 'Acct Posting',
                    'Post Date', 'Created by', 'Post Date', 'Modified by', 'Modified Date', 'Status'
                ],

                colModel: [
                { name: 'PR_POL_SYS_ID', index: 'PR_POL_SYS_ID', width: 200 },
                { name: 'PR_POL_DOC_NO', index: 'PR_POL_DOC_NO', width: 200 },
                { name: 'PR_END_NO', index: 'PR_END_NO', width: 200 },
                { name: 'PR_COB', index: 'PR_COB', width: 200 },
                { name: 'PR_CUST_CODE', index: 'PR_CUST_CODE', width: 200 },
                { name: 'PR_OFFICE', index: 'PR_OFFICE', width: 200 },
                { name: 'PR_INS_SOURCE', index: 'PR_INS_SOURCE', width: 200 },
                { name: 'PR_BUS_SOURCE', index: 'PR_BUS_SOURCE', width: 200 },
                { name: 'PR_TTY_SOURCE', index: 'PR_TTY_SOURCE', width: 200 },
                { name: 'PR_UWD_ACCT_TYPE', index: 'PR_UWD_ACCT_TYPE', width: 200 },
                { name: 'PR_FC_AMOUNT', index: 'PR_FC_AMOUNT', width: 200 },
                { name: 'PR_BC_AMOUNT', index: 'PR_BC_AMOUNT', width: 200 },
                { name: 'PR_TXN_REF', index: 'PR_TXN_REF', width: 200 },
                { name: 'PR_ACCT_YN', index: 'PR_ACCT_YN', width: 200 },
                { name: 'PR_POST_DATE', index: 'PR_POST_DATE', width: 200 },
                { name: 'PR_CRTE_BY', index: 'PR_CRTE_BY', width: 200 },
                { name: 'PR_CRTE_DATE', index: 'PR_CRTE_DATE', width: 200 },
                { name: 'PR_MOD_BY', index: 'PR_MOD_BY', width: 200 },
                { name: 'PR_MOD_DATE', index: 'PR_MOD_DATE', width: 200 },
                { name: 'PR_STATUS', index: 'PR_STATUS', width: 200 },
                ],
                rowNum: 30,
                rowList: [30, 50, 100],
                pager: '#gridPremRegPager',
                sortname: 'Code',
                viewrecords: true,
                sortorder: "asc",
                caption: "Premium Register",
                //loadtext: 'Loading, please wait',
                //new added
                width: this.parentElement,
                shrinkToFit: false,
                autowidth: false,
                multiselect: false,
                //
                footerrow: true,
                gridComplete: function () {

                    // Call function to sum risk amounts on adding risks

                    // PolhPremiumSummary();


                }
                //

            });

        });
        //FAC-IN Premium Summary Grid
        $(document).ready(function () {

            $("#gridFACINPremSum").jqGrid({
                data: 'local',
                colNames: [
                    'DESCRIPTION', 'FC AMOUNT', 'BC AMOUNT'

                ],
                colModel: [
                { name: 'DESCRIPTION', index: 'DESCRIPTION', width: 400 },
                { name: 'FC_AMOUNT', index: 'FC_AMOUNT', width: 400 },
                { name: 'BC_AMOUNT', index: 'BC_AMOUNT', width: 400 },
                ],
                rowNum: 30,
                rowList: [30, 50, 100],
                pager: '#gridFACINPager',
                sortname: 'Code',
                viewrecords: true,
                sortorder: "asc",
                caption: "PREMIUM SUMMARY",
                //loadtext: 'Loading, please wait',
                //new added
                width: this.parentElement,
                shrinkToFit: false,
                autowidth: false,
                multiselect: false,
                //
                footerrow: true,
                gridComplete: function () {

                    // Call function to sum cover amounts on adding covers
                    // SumCoverAmounts();


                }
                //

            });

        });

        //CO-IN Premium Summary Grid
        $(document).ready(function () {

            $("#gridCoIns").jqGrid({
                data: 'local',
                colNames: [
                    'DESCRIPTION', 'FC AMOUNT', 'BC AMOUNT'

                ],
                colModel: [
                { name: 'DESCRIPTION', index: 'DESCRIPTION', width: 400 },
                { name: 'FC_AMOUNT', index: 'FC_AMOUNT', width: 400 },
                { name: 'BC_AMOUNT', index: 'BC_AMOUNT', width: 400 },
                ],
                rowNum: 30,
                rowList: [30, 50, 100],
                pager: '#gridCoInsPager',
                sortname: 'Code',
                viewrecords: true,
                sortorder: "asc",
                caption: "PREMIUM SUMMARY",
                //loadtext: 'Loading, please wait',
                //new added
                width: this.parentElement,
                shrinkToFit: false,
                autowidth: false,
                multiselect: false,
                //
                footerrow: true,
                gridComplete: function () {

                    // Call function to sum cover amounts on adding covers
                    //  SumCoverAmounts();


                }
                //

            });

        });

        //Policy Accounts Summary Grid
        $(document).ready(function () {

            $("#gridPremPmt").jqGrid({
                data: 'local',
                colNames: [
                    'DESCRIPTION', 'FC AMOUNT', 'BC AMOUNT'

                ],
                colModel: [
                { name: 'DESCRIPTION', index: 'DESCRIPTION', width: 400 },
                { name: 'FC_AMOUNT', index: 'FC_AMOUNT', width: 400 },
                { name: 'BC_AMOUNT', index: 'BC_AMOUNT', width: 400 },
                ],
                rowNum: 30,
                rowList: [30, 50, 100],
                pager: '#gridPremPmtPager',
                sortname: 'Code',
                viewrecords: true,
                sortorder: "asc",
                caption: "Policy Accounts Summary",
                //loadtext: 'Loading, please wait',
                //new added
                width: this.parentElement,
                shrinkToFit: false,
                autowidth: false,
                multiselect: false,
                //
                footerrow: true,
                gridComplete: function () {

                    // Call function to sum cover amounts on adding covers
                    //  SumCoverAmounts();


                }
                //

            });

        });

        //Policy RI Summary Grid
        $(document).ready(function () {

            $("#gridRISummary").jqGrid({
                data: 'local',
                colNames: [
                    'DESCRIPTION', 'FC AMOUNT', 'BC AMOUNT'

                ],
                colModel: [
                { name: 'DESCRIPTION', index: 'DESCRIPTION', width: 400 },
                { name: 'FC_AMOUNT', index: 'FC_AMOUNT', width: 400 },
                { name: 'BC_AMOUNT', index: 'BC_AMOUNT', width: 400 },
                ],
                rowNum: 30,
                rowList: [30, 50, 100],
                pager: '#gridRISummaryPager',
                sortname: 'Code',
                viewrecords: true,
                sortorder: "asc",
                caption: "Policy RI Summary",
                //loadtext: 'Loading, please wait',
                //new added
                width: this.parentElement,
                shrinkToFit: false,
                autowidth: false,
                multiselect: false,
                //
                footerrow: true,
                gridComplete: function () {

                    // Call function to sum cover amounts on adding covers
                    //  SumCoverAmounts();


                }
                //

            });

        });

        //Policy Claims Summary Grid
        $(document).ready(function () {

            $("#gridClaimsSummary").jqGrid({
                data: 'local',
                colNames: [
                    'DESCRIPTION', 'FC AMOUNT', 'BC AMOUNT'

                ],
                colModel: [
                { name: 'DESCRIPTION', index: 'DESCRIPTION', width: 400 },
                { name: 'FC_AMOUNT', index: 'FC_AMOUNT', width: 400 },
                { name: 'BC_AMOUNT', index: 'BC_AMOUNT', width: 400 },
                ],
                rowNum: 30,
                rowList: [30, 50, 100],
                pager: '#gridClaimsSummaryPager',
                sortname: 'Code',
                viewrecords: true,
                sortorder: "asc",
                caption: "Policy RI Summary",
                //loadtext: 'Loading, please wait',
                //new added
                width: this.parentElement,
                shrinkToFit: false,
                autowidth: false,
                multiselect: false,
                //
                footerrow: true,
                gridComplete: function () {

                    // Call function to sum cover amounts on adding covers
                    //  SumCoverAmounts();


                }
                //

            });

        });

        //Policy Renewal History Summary Grid
        $(document).ready(function () {

            $("#gridRenewalHistory").jqGrid({
                data: 'local',
                colNames: [
                    'DESCRIPTION', 'FC AMOUNT', 'BC AMOUNT'

                ],
                colModel: [
                { name: 'DESCRIPTION', index: 'DESCRIPTION', width: 400 },
                { name: 'FC_AMOUNT', index: 'FC_AMOUNT', width: 400 },
                { name: 'BC_AMOUNT', index: 'BC_AMOUNT', width: 400 },
                ],
                rowNum: 30,
                rowList: [30, 50, 100],
                pager: '#gridRenewalHistoryPager',
                sortname: 'Code',
                viewrecords: true,
                sortorder: "asc",
                caption: "Policy RI Summary",
                //loadtext: 'Loading, please wait',
                //new added
                width: this.parentElement,
                shrinkToFit: false,
                autowidth: false,
                multiselect: false,
                //
                footerrow: true,
                gridComplete: function () {

                    // Call function to sum cover amounts on adding covers
                    //  SumCoverAmounts();


                }
                //

            });

        });


        //calculate or refresh premium summary
        $(document).ready(function () {

            $("#btnPremRefresh").on('click', function () {

                var premgrid = $('#gridVehRisks');

                var premRowIds = premgrid.jqGrid('getDataIDs');


                var CountRows = premgrid.getGridParam('records');

                if (CountRows > 0) {
                    PolhPremiumSummary();
                }
                else {
                    alert("No premium to refresh, Please check and try again");
                }

            })
        });

        // calculate policy Premium Summary

        function PolhPremiumSummary() {


            var POLICY_PREM_FC = $('#txtPolPremFC').val();
            var POLICY_PREM_BC = $('#txtPolPremBC').val();

            var POL_LOAD_FC = $('#txtPolLoadFC').val();
            var POL_LOAD_BC = $('#txtPolLoadBC').val();

            var POL_DISC_FC = $('#txtPolDiscFC').val();
            var POL_DISC_BC = $('#txtPolDiscBC').val();

            var premiumSum = [

                      { DESCRIPTION: 'POLICY PREMIUM', FC_AMOUNT: POLICY_PREM_FC, BC_AMOUNT: POLICY_PREM_BC },
                      { DESCRIPTION: 'LOADING', FC_AMOUNT: POL_LOAD_FC, BC_AMOUNT: POL_LOAD_BC },
                      { DESCRIPTION: 'DISCOUNT', FC_AMOUNT: POL_DISC_FC, BC_AMOUNT: POL_LOAD_BC, },
                      { DESCRIPTION: 'NIC Fee', FC_AMOUNT: 4.5, BC_AMOUNT: 4.5, },
                      { DESCRIPTION: 'Addmin fee', FC_AMOUNT: 200, BC_AMOUNT: 200, },
                      { DESCRIPTION: 'Ecowas Fee', FC_AMOUNT: 5, BC_AMOUNT: 5, },
            ];

            $("#gridPremSum").clearGridData();

            //load premium grid with data in the array above
            for (var i = 0; i < premiumSum.length; i++) {
                jQuery("#gridPremSum").addRowData(premiumSum[i].id, premiumSum[i]);
            }

            var SumPremFC = 0;
            var SumPremBC = 0;
            //calculate grid premium totals for grid Foota
            var grid = $('#gridPremSum');

            var rowIds = grid.jqGrid('getDataIDs');

            // iterate through the rows
            for (var i = 0, len = rowIds.length; i < len; i++) {
                var currRow = rowIds[i];

                //Sum the values of the Cell
                SumPremFC += parseFloat(grid.jqGrid('getCell', currRow, 'FC_AMOUNT'));

                SumPremBC += parseFloat(grid.jqGrid('getCell', currRow, 'BC_AMOUNT'));

            }

            grid.jqGrid('footerData', 'set', { 'FC_AMOUNT': SumPremFC })
            grid.jqGrid('footerData', 'set', { 'BC_AMOUNT': SumPremBC });
            grid.jqGrid('footerData', 'set', { 'DESCRIPTION': 'Totals' });

        };

        //function to add Vehicle Risks
        function FindIfCoverExists() {

            var grid = $('#gridAppCovers');

            var rowIds = grid.jqGrid('getDataIDs');

            //declare array to contain the codes to varify
            var Code = [];

            // iterate through the rows and check duplicat each of them
            for (var i = 0, len = rowIds.length; i < len; i++) {
                var currRow = rowIds[i];

                //get value of the cell or column in an array
                var cellValue = grid.jqGrid('getCell', currRow, 'RCOV_CODE');

                Code.push(cellValue);

            }

            //find out if the code exists in the array
            if ($.inArray($('#txtCoverCode').val(), Code) < 0) {

                //Call function to Search for  Cover

            }
            else {

                // alert("Cover already added");

            }
        }


        //call add function to add records to Covers grid
        $(document).ready(function () {

            $("#btnAddRiskCovers").on('click', function () {
                if ($('#txtCoverCode').val() == "") {
                    alert("The cover code cannot be null, Please check and try again")

                }
                else {

                    var grid = $('#gridAppCovers');

                    var rowIds = grid.jqGrid('getDataIDs');

                    //declare array to contain the codes to varify
                    var Code = [];

                    // iterate through the rows and check duplicat each of them
                    for (var i = 0, len = rowIds.length; i < len; i++) {
                        var currRow = rowIds[i];

                        //get value of the cell or column in an array
                        var cellValue = grid.jqGrid('getCell', currRow, 'RCOV_CODE');

                        Code.push(cellValue);

                    }

                    //add if recode is not found in the Grid
                    if ($.inArray($('#txtCoverCode').val(), Code) < 0) {

                        //get Cover sys ID
                        RetnSequenceNo('SEQ_VEH_COVERS', getCoverSeqNo);
                        var covSysID = "";
                        function getCoverSeqNo(data) {

                            $("#txtCovSysID").val(data);

                            var CoverData = [
                            {
                                RCOV_SYS_ID: $("#txtCovSysID").val(),
                                RCOV_RISK_SYS_ID: $('#txtVehSysID').val(),
                                RCOV_RISK_NO: $('#txtVehSysID').val(),
                                RCOV_POLH_DOC_NO: $('#txtPolDocNo').val(),
                                RPCOV_END_NO: 0,
                                RCOV_CODE: $('#txtCoverCode').val(),
                                RCOV_NAME: $('#txtRiskCoverName').val(),
                                RCOV_SI_FC: $('#txtCovSI').val(),
                                RCOV_SI_BC: $('#txtCovSI').val(),
                                RCOV_RATE: $('#txtCoveRate').val(),
                                RCOV_GROSS_PREM_FC: $('#txtGrossPrem').val(),
                                RCOV_GROSS_PREM_BC: $('#txtGrossPrem').val(),

                                RCOV_NET_PREM_FC: $('#txtNetPrem').val(),
                                RCOV_NET_PREM_BC: $('#txtNetPrem').val(),
                                //
                                RCOV_RI_SI_YN: 'Y',
                                RCOV_RI_PREM_YN: 'Y',
                                RCOV_TYPE: 'B',
                                RCOV_DISC_YN: $('#txtDiscYN').val(),
                                RCOV_DISC_FC: $("#txtDiscount").val(),
                                RCOV_DISC_BC: $("#txtDiscount").val(),

                                RCOV_LOAD_YN: $('#txtLoadYN').val(),
                                RCOV_LOAD_FC: $("#txtLoading").val(),
                                RCOV_LOAD_BC: $("#txtLoading").val(),
                                RCOV_TXN_STATE: 'U',

                                RCOV_CRTE_BY: 'DEMO',
                                RCOV_CRTE_DATE: sysdate(),
                                RCOV_MOD_BY: 'DEMO',
                                RCOV_MOD_DATE: sysdate(),
                                RCOV_STATUS: 'U',
                                COVER_RATE_CHANGE: $("#txtRateChange").val(),
                                COVER_SI_CHANGE: $("#txtSIChange").val(),
                                COVER_LEVEL: $("#txtCoverLevel").val(),
                                COVER_PREM_REFUND: $("#txtPremRefund").val(),
                                RCOV_RI_YN: $("#txtRIApp").val(),
                                COVER_USER_PREM: $("#txtUserPrem").val(),
                                COVER_TYPE: $("#txtCoverType").val()
                            },

                            ];
                            // add to grid
                            for (var i = 0; i < CoverData.length; i++)
                                jQuery("#gridAppCovers").addRowData(CoverData[i].id, CoverData[i]);


                            //Clear after adding
                            $('#txtCoverCode').val("");
                            $('#txtRiskCoverName').val("");
                            $('#txtCovSI').val(0.00);
                            $('#txtCovSI').val(0.00);
                            $('#txtCoveRate').val(0.00);
                            $('#txtGrossPrem').val(0.00);
                            $('#txtNetPrem').val(0.00);
                            //
                            $("#txtRateChange").val(0.00);
                            $("#txtSIChange").val(0.00);
                            $("#txtCoverLevel").val("");
                            $("#txtPremRefund").val(0.00);
                            $("#txtRIApp").val("");
                            $("#txtUserPrem").val(0.00);
                            $("#txtCoverType").val("");
                        }
                    }

                    else {

                        alert(" Code exists, you cannot add same record " + cellValue);
                    }

                    // Call function to sum cover amounts on adding covers
                    SumCoverAmounts();


                }
            });

        });
        //-- --------------------------------Diaglog form for Company ---------------------- -->
        //<!-- LOV for Codes -->

        $(function () {
            var dialog, form,
            dialog = $("#dialog-Company").dialog({
                autoOpen: false,
                height: 550,
                width: 700,
                modal: true,

                buttons: {
                    "OK": function () {
                        if ($("#txtComCode").val() == "") {
                            alert("No value selected, check and try again")
                        }
                        else {

                            $(this).dialog("close");
                        }
                    },

                    "Clear": function () {
                        $("#txtComCode").val("");
                        $("#txtCompanyName").val("");
                    },

                    Cancel: function () {
                        $(this).dialog("close");
                        $("#txtComCode").val("");
                        $("#txtCompanyName").val("");
                    },
                }

            });

            //open the dialog form
            $("#btnSelCompany").button().on("click", function () {
                dialog.dialog("open");
            });

        });

        //--- -----------------------------------SelectCode  LOV Company------------ -->
        // LOV to select from
        $(document).ready(function () {
            $("#btnQueryCompany").click(function () {
                //function findCovers() {

                var GetItem = [{
                    //paramProdCode: $("#txtProductCode").val(),
                    paramsearchField: $("#txtSearchCompany").val(),
                    //paramCoverCode: $('#txtSearchCover').val()
                }];

                //alert("No data found, Check and try again");

                $.ajax({

                    type: 'POST',
                    url: '/api/CreateCompany/GetName',

                    //Data to send

                    data: JSON.stringify({ getcov: GetItem }),

                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',


                    //dataprocess: true,
                    success: function (data) {

                        //clear the grid
                        $("#grdCompany").clearGridData();

                        var Covdata = data;
                        //alert(data);

                        if (Covdata.length > 0) {
                            for (var i = 0; i < Covdata.length; i++)

                                jQuery("#grdCompany").addRowData(Covdata[i].id, Covdata[i]);
                        }
                        else {

                            alert("No data found, Check and try again");
                        }

                    },
                    'error': function (error) {

                        alert(JSON.stringify(error));
                    }

                });
            });
        });

        $(document).ready(function () {
            $("#grdCompany").jqGrid({
                data: 'local',
                colNames: ['Code', 'Company Name'],
                colModel: [
                    { name: 'CMP_CODE', index: 'CMP_CODE', width: 150 },
                    { name: 'CMP_GLOBAL_NAME', index: 'CMP_GLOBAL_NAME', width: 500 },
                ],
                //Retrive Code and description and return on row click..
                onSelectRow: function (rowid) {
                    var grid = $('#grdCompany');
                    var sel_id = grid.jqGrid('getGridParam', 'selrow');
                    var Id = grid.jqGrid('getCell', sel_id, 'CMP_CODE');
                    var Code = DescCellData = grid.jqGrid('getCell', sel_id, 'CMP_GLOBAL_NAME');
                    $("#txtComCode").val(Id);
                    $("#txtCompanyName").val(Code);
                },

                rowNum: 50,
                rowList: [50, 75, 150],
                pager: '#grdPager',
                sortname: 'id',
                viewrecords: true,
                sortorder: "asc",
                loadonce: true,
                ignoreCase: true,
                caption: "Company list",
                loadtext: 'Loading, please wait',
                //new added
                width: this.parentElement,
                shrinkToFit: false,
                autowidth: false,
                multiselect: false
            });
            jQuery("#grdCompany").jqGrid('navGrid', '#grdPager',
                { search: true, edit: false, add: false, del: false });

            jQuery("#grdCompany").jqGrid('filterToolbar',
             { searchOnEnter: false, stringResult: true, defaultSearch: "cn" });

            jQuery("#grdCompany").jqGrid('bindKeys');
        });


        //-- --------------------------------Diaglog form for Intermediary ---------------------- -->
        //<!-- LOV for Codes -->
        $(function () {
            var dialog, form,
            dialog = $("#dialog-Interm").dialog({
                autoOpen: false,
                height: 550,
                width: 700,
                modal: true,

                buttons: {
                    "OK": function () {
                        if ($("#txtChanIntermCode").val() == "") {
                            alert("No value selected, check and try again")
                        }
                        else {

                            $(this).dialog("close");
                        }
                    },

                    "Clear": function () {
                        $("#txtChanIntermCode").val("");
                        $("#txtChanIntermName").val("");
                    },

                    Cancel: function () {
                        $(this).dialog("close");
                        $("#txtChanIntermCode").val("");
                        $("#txtChanIntermName").val("");
                    },
                }

            });

            //open the dialog form
            $("#btnSelChannelInterm").button().on("click", function () {
                dialog.dialog("open");
            });

        });

        //--- -----------------------------------SelectCode  LOV Intermediary------------ -->
        // LOV to select from
        $(document).ready(function () {
            $("#btnQueryInterm").click(function () {
                //function findCovers() {

                var GetItem = [{
                    //paramProdCode: $("#txtProductCode").val(),
                    paramsearchField: $("#txtSearchInterm").val(),
                    //paramCoverCode: $('#txtSearchCover').val()
                }];

                //alert("No data found, Check and try again");

                $.ajax({

                    type: 'POST',
                    url: '/api/CreateIntermediary/GetName',

                    //Data to send

                    data: JSON.stringify({ getcov: GetItem }),

                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',


                    //dataprocess: true,
                    success: function (data) {

                        //clear the grid
                        $("#grdInterm").clearGridData();

                        var Itemdata = data;
                        //alert(data);

                        if (Itemdata.length > 0) {
                            for (var i = 0; i < Itemdata.length; i++)

                                jQuery("#grdInterm").addRowData(Itemdata[i].id, Itemdata[i]);
                        }
                        else {

                            alert("No data found, Check and try again");
                        }

                    },
                    'error': function (error) {

                        alert(JSON.stringify(error));
                    }

                });
            });
        });

        $(document).ready(function () {
            $("#grdInterm").jqGrid({
                data: 'local',
                colNames: ['Code', 'Name'],
                colModel: [
                    { name: 'INT_PARTY_CODE', index: 'INT_PARTY_CODE', width: 150 },
                    { name: 'INT_FULL_NAME', index: 'INT_FULL_NAME', width: 500 },
                ],
                //Retrive Code and description and return on row click..
                onSelectRow: function (rowid) {
                    var grid = $('#grdInterm');
                    var sel_id = grid.jqGrid('getGridParam', 'selrow');
                    var Id = grid.jqGrid('getCell', sel_id, 'INT_PARTY_CODE');
                    var Code = DescCellData = grid.jqGrid('getCell', sel_id, 'INT_FULL_NAME');
                    $("#txtChanIntermCode").val(Id);
                    $("#txtChanIntermName").val(Code);
                },

                rowNum: 50,
                rowList: [50, 75, 150],
                pager: '#grdPager',
                sortname: 'id',
                viewrecords: true,
                sortorder: "asc",
                loadonce: true,
                ignoreCase: true,
                caption: "Intermediary list",
                loadtext: 'Loading, please wait',
                //new added
                width: this.parentElement,
                shrinkToFit: false,
                autowidth: false,
                multiselect: false
            });
            jQuery("#grdInterm").jqGrid('navGrid', '#grdPager',
                { search: true, edit: false, add: false, del: false });

            jQuery("#grdInterm").jqGrid('filterToolbar',
             { searchOnEnter: false, stringResult: true, defaultSearch: "cn" });

            jQuery("#grdInterm").jqGrid('bindKeys');
        });


        //-- --------------------------------Diaglog form for Office ---------------------- -->
        //<!-- LOV for Codes -->
        $(function () {
            var dialog, form,
            dialog = $("#dialog-Office").dialog({
                autoOpen: false,
                height: 550,
                width: 700,
                modal: true,

                buttons: {
                    "OK": function () {
                        if ($("#txtOffCode").val() == "") {
                            alert("No value selected, check and try again")
                        }
                        else {

                            $(this).dialog("close");
                        }
                    },

                    "Clear": function () {
                        $("#txtOffCode").val("");
                        $("#txtOffName").val("");
                    },

                    Cancel: function () {
                        $(this).dialog("close");
                        $("#txtOffCode").val("");
                        $("#txtOffName").val("");
                    },
                }

            });

            //open the dialog form
            $("#btnSelOffice").button().on("click", function () {
                dialog.dialog("open");
            });

        });

        //--- -----------------------------------SelectCode  LOV Office------------ -->
        // LOV to select from

        $(document).ready(function () {
            $("#btnQueryOffice").click(function () {
                //function findCovers() {

                var GetItem = [{
                    //paramProdCode: $("#txtProductCode").val(),
                    paramsearchField: $("#txtSearchOffice").val(),
                    //paramCoverCode: $('#txtSearchCover').val()
                }];

                //alert("No data found, Check and try again");

                $.ajax({

                    type: 'POST',
                    url: '/api/CreateOffice/GetName',

                    //Data to send

                    data: JSON.stringify({ getcov: GetItem }),

                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',


                    //dataprocess: true,
                    success: function (data) {

                        //clear the grid
                        $("#grdOffice").clearGridData();

                        var Covdata = data;
                        //alert(data);

                        if (Covdata.length > 0) {
                            for (var i = 0; i < Covdata.length; i++)

                                jQuery("#grdOffice").addRowData(Covdata[i].id, Covdata[i]);
                        }
                        else {

                            alert("No data found, Check and try again");
                        }

                    },
                    'error': function (error) {

                        alert(JSON.stringify(error));
                    }

                });
            });
        });

        $(document).ready(function () {
            $("#grdOffice").jqGrid({
                data: 'local',
                colNames: ['Code', 'Name'],
                colModel: [
                    { name: 'OFF_CODE', index: 'OFF_CODE', width: 150 },
                    { name: 'OFF_NAME', index: 'OFF_NAME', width: 500 },
                ],
                //Retrive Code and description and return on row click..
                onSelectRow: function (rowid) {
                    var grid = $('#grdOffice');
                    var sel_id = grid.jqGrid('getGridParam', 'selrow');
                    var Id = grid.jqGrid('getCell', sel_id, 'OFF_CODE');
                    var Code = DescCellData = grid.jqGrid('getCell', sel_id, 'OFF_NAME');
                    $("#txtOffCode").val(Id);
                    $("#txtOffName").val(Code);
                },

                rowNum: 50,
                rowList: [50, 75, 150],
                pager: '#grdPager',
                sortname: 'id',
                viewrecords: true,
                sortorder: "asc",
                loadonce: true,
                ignoreCase: true,
                caption: "Office list",
                loadtext: 'Loading, please wait',
                //new added
                width: this.parentElement,
                shrinkToFit: false,
                autowidth: false,
                multiselect: false
            });
            jQuery("#grdOffice").jqGrid('navGrid', '#grdPager',
                { search: true, edit: false, add: false, del: false });

            jQuery("#grdOffice").jqGrid('filterToolbar',
             { searchOnEnter: false, stringResult: true, defaultSearch: "cn" });

            jQuery("#grdOffice").jqGrid('bindKeys');
        });


        //-- --------------------------------Diaglog form for Customer ---------------------- -->
        //<!-- LOV for Codes -->
        $(function () {
            var dialog, form,
            dialog = $("#dialog-Cust").dialog({
                autoOpen: false,
                height: 550,
                width: 700,
                modal: true,

                buttons: {
                    "OK": function () {
                        if ($("#txtCustCode").val() == "") {
                            alert("No value selected, check and try again")
                        }
                        else {

                            $(this).dialog("close");
                        }
                    },

                    "Clear": function () {
                        $("#txtCustCode").val("");
                        $("#txtCustName").val("");
                        $("#txtAddress").val("");
                        $("#txtCustContNo").val("");
                    },

                    Cancel: function () {
                        $(this).dialog("close");
                        $("#txtCustCode").val("");
                        $("#txtCustName").val("");
                        $("#txtAddress").val("");
                        $("#txtCustContNo").val("");
                    },
                }

            });

            //open the dialog form
            $("#btnSelCust").button().on("click", function () {
                dialog.dialog("open");
            });

        });

        //--- -----------------------------------SelectCode  LOV Customer------------ -->
        // LOV to select from
        $(document).ready(function () {
            $("#btnQueryCust").click(function () {
                //function findCovers() {

                var GetItem = [{
                    //paramProdCode: $("#txtProductCode").val(),
                    paramsearchField: $("#txtSearchCust").val(),
                    //paramCoverCode: $('#txtSearchCover').val()
                }];

                //alert("No data found, Check and try again");

                $.ajax({

                    type: 'POST',
                    url: '/api/CreateCustomers/GetName',

                    //Data to send

                    data: JSON.stringify({ getcov: GetItem }),

                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',


                    //dataprocess: true,
                    success: function (data) {

                        //clear the grid
                        $("#grdCust").clearGridData();

                        var Covdata = data;
                        //alert(data);

                        if (Covdata.length > 0) {
                            for (var i = 0; i < Covdata.length; i++)

                                jQuery("#grdCust").addRowData(Covdata[i].id, Covdata[i]);
                        }
                        else {

                            alert("No data found, Check and try again");
                        }

                    },
                    'error': function (error) {

                        alert(JSON.stringify(error));
                    }

                });
            });
        });

        $(document).ready(function () {
            $("#grdCust").jqGrid({
                data: 'local',
                colNames: ['Code', 'Name', 'Address', 'Mobile Number'],
                colModel: [
                    { name: 'CUS_CODE', index: 'CUS_CODE', width: 100 },
                    { name: 'CUS_FIRST_NAME', index: 'CUS_FIRST_NAME', width: 300 },
                    { name: 'CUS_ADDRS1', index: 'CUS_ADDRS1', width: 300 },
                    { name: 'CUS_MOBILE', index: 'CUS_MOBILE', width: 300 },
                ],
                //Retrive Code and description and return on row click..
                onSelectRow: function (rowid) {
                    var grid = $('#grdCust');
                    var sel_id = grid.jqGrid('getGridParam', 'selrow');
                    var Id = grid.jqGrid('getCell', sel_id, 'CUS_CODE');
                    var Name = DescCellData = grid.jqGrid('getCell', sel_id, 'CUS_FIRST_NAME');
                    var Address = DescCellData = grid.jqGrid('getCell', sel_id, 'CUS_ADDRS1');
                    var Mobile = DescCellData = grid.jqGrid('getCell', sel_id, 'CUS_MOBILE');
                    $("#txtCustCode").val(Id);
                    $("#txtCustName").val(Name);
                    $("#txtAddress").val(Address);
                    $("#txtCustContNo").val(Mobile);
                },

                rowNum: 50,
                rowList: [50, 75, 150],
                pager: '#grdPager',
                sortname: 'id',
                viewrecords: true,
                sortorder: "asc",
                loadonce: true,
                ignoreCase: true,
                caption: "Office list",
                loadtext: 'Loading, please wait',
                //new added
                width: this.parentElement,
                shrinkToFit: false,
                autowidth: false,
                multiselect: false
            });
            jQuery("#grdCust").jqGrid('navGrid', '#grdPager',
                { search: true, edit: false, add: false, del: false });

            jQuery("#grdCust").jqGrid('filterToolbar',
             { searchOnEnter: false, stringResult: true, defaultSearch: "cn" });

            jQuery("#grdCust").jqGrid('bindKeys');
        });


        //-- --------------------------------Diaglog form for Product ---------------------- -->
        //<!-- LOV for Codes -->
        $(function () {
            var dialog, form,
            dialog = $("#dialog-Product").dialog({
                autoOpen: false,
                height: 550,
                width: 700,
                modal: true,

                buttons: {
                    "OK": function () {
                        if ($("#txtProductCode").val() == "") {
                            alert("No value selected, check and try again")
                        }
                        else {

                            $(this).dialog("close");
                        }
                    },

                    "Clear": function () {
                        $("#txtProductCode").val("");
                        $("#txtProductName").val("");
                    },

                    Cancel: function () {
                        $(this).dialog("close");
                        $("#txtProductCode").val("");
                        $("#txtProductName").val("");

                    },
                }

            });

            //open the dialog form
            $("#btnSelProduct").button().on("click", function () {
                dialog.dialog("open");
            });

        });

        //--- -----------------------------------SelectCode  LOV Product------------ -->
        // LOV to select from
        $(document).ready(function () {
            $("#btnQueryProduct").click(function () {
                //function findCovers() {

                var GetItem = [{
                    //paramProdCode: $("#txtProductCode").val(),
                    paramsearchField: $("#txtSearchProduct").val(),
                    //paramCoverCode: $('#txtSearchCover').val()
                }];

                //alert("No data found, Check and try again");

                $.ajax({

                    type: 'POST',
                    url: '/api/CreateProductSetUp/GetName',

                    //Data to send

                    data: JSON.stringify({ getcov: GetItem }),

                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',


                    //dataprocess: true,
                    success: function (data) {

                        //clear the grid
                        $("#grdProduct").clearGridData();

                        var Covdata = data;
                        //alert(data);

                        if (Covdata.length > 0) {
                            for (var i = 0; i < Covdata.length; i++)

                                jQuery("#grdProduct").addRowData(Covdata[i].id, Covdata[i]);
                        }
                        else {

                            alert("No data found, Check and try again");
                        }

                    },
                    'error': function (error) {

                        alert(JSON.stringify(error));
                    }

                });
            });
        });

        $(document).ready(function () {
            $("#grdProduct").jqGrid({
                data: 'local',
                colNames: ['Code', 'Name'],
                colModel: [
                    { name: 'PDT_CODE', index: 'PDT_CODE', width: 150 },
                    { name: 'PDT_NAME', index: 'PDT_NAME', width: 500 },

                ],
                //Retrive Code and description and return on row click..
                onSelectRow: function (rowid) {
                    var grid = $('#grdProduct');
                    var sel_id = grid.jqGrid('getGridParam', 'selrow');
                    var Id = grid.jqGrid('getCell', sel_id, 'PDT_CODE');
                    var Name = DescCellData = grid.jqGrid('getCell', sel_id, 'PDT_NAME');

                    $("#txtProductCode").val(Id);
                    $("#txtProductName").val(Name);

                },

                rowNum: 50,
                rowList: [50, 75, 150],
                pager: '#grdPager',
                sortname: 'id',
                viewrecords: true,
                sortorder: "asc",
                loadonce: true,
                ignoreCase: true,
                caption: "Product list",
                loadtext: 'Loading, please wait',
                //new added
                width: this.parentElement,
                shrinkToFit: false,
                autowidth: false,
                multiselect: false
            });
            jQuery("#grdProduct").jqGrid('navGrid', '#grdPager',
                { search: true, edit: false, add: false, del: false });

            jQuery("#grdProduct").jqGrid('filterToolbar',
             { searchOnEnter: false, stringResult: true, defaultSearch: "cn" });

            jQuery("#grdProduct").jqGrid('bindKeys');
        });


        //-- --------------------------------Diaglog form for Cover ---------------------- -->
        //<!-- LOV for Codes -->
        $(function () {
            var dialog, form,
            dialog = $("#dialog-Cover").dialog({
                autoOpen: false,
                height: 550,
                width: 700,
                modal: true,

                buttons: {
                    "OK": function () {
                        if ($("#txtCoverTypeCode").val() == "") {
                            alert("No value selected, check and try again")
                        }
                        else {

                            $(this).dialog("close");
                        }
                    },

                    "Clear": function () {
                        $("#txtCoverTypeCode").val("");
                        $("#txtCoverName").val("");
                    },

                    Cancel: function () {
                        $(this).dialog("close");
                        $("#txtCoverTypeCode").val("");
                        $("#txtCoverName").val("");

                    },
                }

            });

            //open the dialog form
            $("#btnSelCover").button().on("click", function () {
                dialog.dialog("open");
            });

        });

        //--- -----------------------------------SelectCode  LOV Cover------------ -->
        // LOV to select from
        $(document).ready(function () {
            $("#btnQueryCover").click(function () {
                //function findCovers() {

                var GetItem = [{
                    //paramProdCode: $("#txtProductCode").val(),
                    paramsearchField: $("#txtSearchCover").val(),
                    //paramCoverCode: $('#txtSearchCover').val()
                }];

                //alert("No data found, Check and try again");

                $.ajax({

                    type: 'POST',
                    url: '/api/CreateCovers/GetCoverName',

                    //Data to send

                    data: JSON.stringify({ getcov: GetItem }),

                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',


                    //dataprocess: true,
                    success: function (data) {

                        //clear the grid
                        $("#grdCover").clearGridData();

                        var Covdata = data;
                        //alert(data);

                        if (Covdata.length > 0) {
                            for (var i = 0; i < Covdata.length; i++)

                                jQuery("#grdCover").addRowData(Covdata[i].id, Covdata[i]);
                        }
                        else {

                            alert("No data found, Check and try again");
                        }

                    },
                    'error': function (error) {

                        alert(JSON.stringify(error));
                    }

                });
            });
        });

        $(document).ready(function () {
            $("#grdCover").jqGrid({
                data: 'local',
                colNames: ['Code', 'Name'],
                colModel: [
                    { name: 'CVR_CODE', index: 'CVR_CODE', width: 150 },
                    { name: 'CVR_NAME', index: 'CVR_NAME', width: 500 },

                ],
                //Retrive Code and description and return on row click..
                onSelectRow: function (rowid) {
                    var grid = $('#grdCover');
                    var sel_id = grid.jqGrid('getGridParam', 'selrow');
                    var Id = grid.jqGrid('getCell', sel_id, 'CVR_CODE');
                    var Name = DescCellData = grid.jqGrid('getCell', sel_id, 'CVR_NAME');

                    $("#txtCoverTypeCode").val(Id);
                    $("#txtCoverName").val(Name);

                },

                rowNum: 50,
                rowList: [50, 75, 150],
                pager: '#grdPager',
                sortname: 'id',
                viewrecords: true,
                sortorder: "asc",
                loadonce: true,
                ignoreCase: true,
                caption: "Cover list",
                loadtext: 'Loading, please wait',
                //new added
                width: this.parentElement,
                shrinkToFit: false,
                autowidth: false,
                multiselect: false
            });
            jQuery("#grdCover").jqGrid('navGrid', '#grdPager',
                { search: true, edit: false, add: false, del: false });

            jQuery("#grdCover").jqGrid('filterToolbar',
             { searchOnEnter: false, stringResult: true, defaultSearch: "cn" });

            jQuery("#grdCover").jqGrid('bindKeys');
        });


        //-- --------------------------------Diaglog form for Insurance Source ---------------------- -->
        //<!-- LOV for Codes -->
        $(function () {
            var dialog, form,
            dialog = $("#dialog-InsSrc").dialog({
                autoOpen: false,
                height: 550,
                width: 700,
                modal: true,

                buttons: {
                    "OK": function () {
                        if ($("#txtInsSrcCode").val() == "") {
                            alert("No value selected, check and try again")
                        }
                        else {

                            $(this).dialog("close");
                        }
                    },

                    "Clear": function () {
                        $("#txtInsSrcCode").val("");
                        $("#txtInsSrcName").val("");
                    },

                    Cancel: function () {
                        $(this).dialog("close");
                        $("#txtInsSrcCode").val("");
                        $("#txtInsSrcName").val("");

                    },
                }

            });

            //open the dialog form
            $("#btnSelInsSrc").button().on("click", function () {
                dialog.dialog("open");
            });

        });

        //--- -----------------------------------SelectCode  LOV Insurance Source------------ -->
        // LOV to select from
        $(document).ready(function () {
            $("#btnQueryInsSrc").click(function () {
                //function findCovers() {

                var GetItem = [{
                    //paramProdCode: $("#txtProductCode").val(),
                    paramsearchField: $("#txtSearchInsSrc").val(),
                    //paramCoverCode: $('#txtSearchCover').val()
                }];

                //alert("No data found, Check and try again");

                $.ajax({

                    type: 'POST',
                    url: '/api/CreateAcceptanceTypes/GetName',

                    //Data to send

                    data: JSON.stringify({ getcov: GetItem }),

                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',


                    //dataprocess: true,
                    success: function (data) {

                        //clear the grid
                        $("#grdInsSrc").clearGridData();

                        var Covdata = data;
                        //alert(data);

                        if (Covdata.length > 0) {
                            for (var i = 0; i < Covdata.length; i++)

                                jQuery("#grdInsSrc").addRowData(Covdata[i].id, Covdata[i]);
                        }
                        else {

                            alert("No data found, Check and try again");
                        }

                    },
                    'error': function (error) {

                        alert(JSON.stringify(error));
                    }

                });
            });
        });

        $(document).ready(function () {
            $("#grdInsSrc").jqGrid({
                data: 'local',
                colNames: ['Code', 'Name'],
                colModel: [
                    { name: 'ATY_CODE', index: 'ATY_CODE', width: 150 },
                    { name: 'ATY_DESCRIPTION', index: 'ATY_DESCRIPTION', width: 500 },

                ],
                //Retrive Code and description and return on row click..
                onSelectRow: function (rowid) {
                    var grid = $('#grdInsSrc');
                    var sel_id = grid.jqGrid('getGridParam', 'selrow');
                    var Id = grid.jqGrid('getCell', sel_id, 'ATY_CODE');
                    var Name = DescCellData = grid.jqGrid('getCell', sel_id, 'ATY_DESCRIPTION');

                    $("#txtInsSrcCode").val(Id);
                    $("#txtInsSrcName").val(Name);

                },

                rowNum: 50,
                rowList: [50, 75, 150],
                pager: '#grdPager',
                sortname: 'id',
                viewrecords: true,
                sortorder: "asc",
                loadonce: true,
                ignoreCase: true,
                caption: "Insurance list",
                loadtext: 'Loading, please wait',
                //new added
                width: this.parentElement,
                shrinkToFit: false,
                autowidth: false,
                multiselect: false
            });
            jQuery("#grdInsSrc").jqGrid('navGrid', '#grdPager',
                { search: true, edit: false, add: false, del: false });

            jQuery("#grdInsSrc").jqGrid('filterToolbar',
             { searchOnEnter: false, stringResult: true, defaultSearch: "cn" });

            jQuery("#grdInsSrc").jqGrid('bindKeys');
        });


        //-- --------------------------------Diaglog form for Business Source ---------------------- -->
        //<!-- LOV for Codes -->
        $(function () {
            var dialog, form,
            dialog = $("#dialog-bizSrc").dialog({
                autoOpen: false,
                height: 550,
                width: 700,
                modal: true,

                buttons: {
                    "OK": function () {
                        if ($("#txtbizSrcCode").val() == "") {
                            alert("No value selected, check and try again")
                        }
                        else {

                            $(this).dialog("close");
                        }
                    },

                    "Clear": function () {
                        $("#txtbizSrcCode").val("");
                        $("#txtbizSource").val("");
                    },

                    Cancel: function () {
                        $(this).dialog("close");
                        $("#txtbizSrcCode").val("");
                        $("#txtbizSource").val("");

                    },
                }

            });

            //open the dialog form
            $("#btnSelBizSource").button().on("click", function () {
                dialog.dialog("open");
            });

        });

        //--- -----------------------------------SelectCode  LOV Business Source------------ -->
        // LOV to select from

        $(document).ready(function () {
            $("#btnQuerybizSrc").click(function () {
                //function findCovers() {

                var GetItem = [{
                    //paramProdCode: $("#txtProductCode").val(),
                    paramsearchField: $("#txtSearchbizSrc").val(),
                    //paramCoverCode: $('#txtSearchCover').val()
                }];

                //alert("No data found, Check and try again");

                $.ajax({

                    type: 'POST',
                    url: '/api/CreateSourceofBusiness/GetName',

                    //Data to send

                    data: JSON.stringify({ getcov: GetItem }),

                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',


                    //dataprocess: true,
                    success: function (data) {

                        //clear the grid
                        $("#grdbizSrc").clearGridData();

                        var Covdata = data;
                        //alert(data);

                        if (Covdata.length > 0) {
                            for (var i = 0; i < Covdata.length; i++)

                                jQuery("#grdbizSrc").addRowData(Covdata[i].id, Covdata[i]);
                        }
                        else {

                            alert("No data found, Check and try again");
                        }

                    },
                    'error': function (error) {

                        alert(JSON.stringify(error));
                    }

                });
            });
        });

        $(document).ready(function () {
            $("#grdbizSrc").jqGrid({
                data: 'local',
                colNames: ['Code', 'Name'],
                colModel: [
                    { name: 'SRB_CODE', index: 'SRB_CODE', width: 150 },
                    { name: 'SRB_NAME', index: 'SRB_NAME', width: 500 },

                ],
                //Retrive Code and description and return on row click..
                onSelectRow: function (rowid) {
                    var grid = $('#grdbizSrc');
                    var sel_id = grid.jqGrid('getGridParam', 'selrow');
                    var Id = grid.jqGrid('getCell', sel_id, 'SRB_CODE');
                    var Name = DescCellData = grid.jqGrid('getCell', sel_id, 'SRB_NAME');

                    $("#txtbizSrcCode").val(Id);
                    $("#txtbizSource").val(Name);

                },

                rowNum: 50,
                rowList: [50, 75, 150],
                pager: '#grdPager',
                sortname: 'id',
                viewrecords: true,
                sortorder: "asc",
                loadonce: true,
                ignoreCase: true,
                caption: "Business Source list",
                loadtext: 'Loading, please wait',
                //new added
                width: this.parentElement,
                shrinkToFit: false,
                autowidth: false,
                multiselect: false
            });
            jQuery("#grdbizSrc").jqGrid('navGrid', '#grdPager',
                { search: true, edit: false, add: false, del: false });

            jQuery("#grdbizSrc").jqGrid('filterToolbar',
             { searchOnEnter: false, stringResult: true, defaultSearch: "cn" });

            jQuery("#grdbizSrc").jqGrid('bindKeys');
        });


        //-- --------------------------------Diaglog form for Agent Source ---------------------- -->
        //<!-- LOV for Codes -->
        $(function () {
            var dialog, form,
            dialog = $("#dialog-Agency").dialog({
                autoOpen: false,
                height: 550,
                width: 700,
                modal: true,

                buttons: {
                    "OK": function () {
                        if ($("#txtAgencySrcCode").val() == "") {
                            alert("No value selected, check and try again")
                        }
                        else {

                            $(this).dialog("close");
                        }
                    },

                    "Clear": function () {
                        $("#txtAgencySrcCode").val("");
                        $("#txtAgencySrcName").val("");
                    },

                    Cancel: function () {
                        $(this).dialog("close");
                        $("#txtAgencySrcCode").val("");
                        $("#txtAgencySrcName").val("");

                    },
                }

            });

            //open the dialog form
            $("#btnSelAgencySrc").button().on("click", function () {
                dialog.dialog("open");
            });

        });

        //--- -----------------------------------SelectCode  LOV Agent Source------------ -->
        // LOV to select from
        $(document).ready(function () {
            $("#btnQueryAgency").click(function () {
                //function findCovers() {

                var GetItem = [{
                    //paramProdCode: $("#txtProductCode").val(),
                    paramsearchField: $("#txtSearchAgency").val(),
                    //paramCoverCode: $('#txtSearchCover').val()
                }];

                //alert("No data found, Check and try again");

                $.ajax({

                    type: 'POST',
                    url: '/api/CreateSourceofBusiness/GetName',

                    //Data to send

                    data: JSON.stringify({ getcov: GetItem }),

                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',


                    //dataprocess: true,
                    success: function (data) {

                        //clear the grid
                        $("#grdAgency").clearGridData();

                        var Covdata = data;
                        //alert(data);

                        if (Covdata.length > 0) {
                            for (var i = 0; i < Covdata.length; i++)

                                jQuery("#grdAgency").addRowData(Covdata[i].id, Covdata[i]);
                        }
                        else {

                            alert("No data found, Check and try again");
                        }

                    },
                    'error': function (error) {

                        alert(JSON.stringify(error));
                    }

                });
            });
        });

        $(document).ready(function () {
            $("#grdAgency").jqGrid({
                data: 'local',
                colNames: ['Code', 'Name'],
                colModel: [
                    { name: 'SRB_CODE', index: 'SRB_CODE', width: 150 },
                    { name: 'SRB_NAME', index: 'SRB_NAME', width: 500 },

                ],
                //Retrive Code and description and return on row click..
                onSelectRow: function (rowid) {
                    var grid = $('#grdAgency');
                    var sel_id = grid.jqGrid('getGridParam', 'selrow');
                    var Id = grid.jqGrid('getCell', sel_id, 'SRB_CODE');
                    var Name = DescCellData = grid.jqGrid('getCell', sel_id, 'SRB_NAME');

                    $("#txtAgencySrcCode").val(Id);
                    $("#txtAgencySrcName").val(Name);

                },

                rowNum: 50,
                rowList: [50, 75, 150],
                pager: '#grdPager',
                sortname: 'id',
                viewrecords: true,
                sortorder: "asc",
                loadonce: true,
                ignoreCase: true,
                caption: "Business Source list",
                loadtext: 'Loading, please wait',
                //new added
                width: this.parentElement,
                shrinkToFit: false,
                autowidth: false,
                multiselect: false
            });
            jQuery("#grdAgency").jqGrid('navGrid', '#grdPager',
                { search: true, edit: false, add: false, del: false });

            jQuery("#grdAgency").jqGrid('filterToolbar',
             { searchOnEnter: false, stringResult: true, defaultSearch: "cn" });

            jQuery("#grdAgency").jqGrid('bindKeys');
        });


        //-- --------------------------------Diaglog form for Usage ---------------------- -->
        //<!-- LOV for Codes -->
        $(function () {
            var dialog, form,
            dialog = $("#dialog-Usage").dialog({
                autoOpen: false,
                height: 550,
                width: 700,
                modal: true,

                buttons: {
                    "OK": function () {
                        if ($("#txtVehUsageCode").val() == "") {
                            alert("No value selected, check and try again")
                        }
                        else {

                            $(this).dialog("close");
                        }
                    },

                    "Clear": function () {
                        $("#txtVehUsageCode").val("");
                        $("#txtUsageName").val("");
                    },

                    Cancel: function () {
                        $(this).dialog("close");
                        $("#txtVehUsageCode").val("");
                        $("#txtUsageName").val("");

                    },
                }

            });

            //open the dialog form
            $("#btnSelUsage").button().on("click", function () {
                dialog.dialog("open");
            });

        });

        //--- -----------------------------------SelectCode  LOV Usage------------ -->
        // LOV to select from
        $(document).ready(function () {
            $("#btnQueryUsage").click(function () {
                //function findCovers() {

                var GetItem = [{
                    //paramProdCode: $("#txtProductCode").val(),
                    paramsearchField: $("#txtSearchUsage").val(),
                    //paramCoverCode: $('#txtSearchCover').val()
                }];

                //alert("No data found, Check and try again");

                $.ajax({

                    type: 'POST',
                    url: '/api/CreateMotorRisk/GetMtRiskName',

                    //Data to send

                    data: JSON.stringify({ getcov: GetItem }),

                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',


                    //dataprocess: true,
                    success: function (data) {

                        //clear the grid
                        $("#grdUsage").clearGridData();

                        var Covdata = data;
                        //alert(data);

                        if (Covdata.length > 0) {
                            for (var i = 0; i < Covdata.length; i++)

                                jQuery("#grdUsage").addRowData(Covdata[i].id, Covdata[i]);
                        }
                        else {

                            alert("No data found, Check and try again");
                        }

                    },
                    'error': function (error) {

                        alert(JSON.stringify(error));
                    }

                });
            });
        });

        $(document).ready(function () {
            $("#grdUsage").jqGrid({
                data: 'local',
                colNames: ['Code', 'Name'],
                colModel: [
                    { name: 'MRK_CODE', index: 'MRK_CODE', width: 150 },
                    { name: 'MRK_NAME', index: 'MRK_NAME', width: 500 },

                ],
                //Retrive Code and description and return on row click..
                onSelectRow: function (rowid) {
                    var grid = $('#grdUsage');
                    var sel_id = grid.jqGrid('getGridParam', 'selrow');
                    var Id = grid.jqGrid('getCell', sel_id, 'MRK_CODE');
                    var Name = DescCellData = grid.jqGrid('getCell', sel_id, 'MRK_NAME');

                    $("#txtVehUsageCode").val(Id);
                    $("#txtUsageName").val(Name);

                },

                rowNum: 50,
                rowList: [50, 75, 150],
                pager: '#grdPager',
                sortname: 'id',
                viewrecords: true,
                sortorder: "asc",
                loadonce: true,
                ignoreCase: true,
                caption: "Usage list",
                loadtext: 'Loading, please wait',
                //new added
                width: this.parentElement,
                shrinkToFit: false,
                autowidth: false,
                multiselect: false
            });
            jQuery("#grdUsage").jqGrid('navGrid', '#grdPager',
                { search: true, edit: false, add: false, del: false });

            jQuery("#grdUsage").jqGrid('filterToolbar',
             { searchOnEnter: false, stringResult: true, defaultSearch: "cn" });

            jQuery("#grdUsage").jqGrid('bindKeys');
        });


        //-- --------------------------------Diaglog form for Currency ---------------------- -->
        //<!-- LOV for Codes -->
        $(function () {
            var dialog, form,
            dialog = $("#dialog-Currency").dialog({
                autoOpen: false,
                height: 550,
                width: 700,
                modal: true,

                buttons: {
                    "OK": function () {
                        if ($("#txtCurrCode").val() == "") {
                            alert("No value selected, check and try again")
                        }
                        else {

                            $(this).dialog("close");
                        }
                    },

                    "Clear": function () {
                        $("#txtCurrCode").val("");
                        $("#txtCurrDetls").val("");
                        //$("#txtFxRate").val("");
                    },

                    Cancel: function () {
                        $(this).dialog("close");
                        $("#txtCurrCode").val("");
                        $("#txtCurrDetls").val("");
                        //$("#txtFxRate").val("");
                    },
                }

            });

            //open the dialog form
            $("#btnSelPolCurrency").button().on("click", function () {
                dialog.dialog("open");
            });

        });

        //--- -----------------------------------SelectCode  LOV Currency------------ -->
        // LOV to select from
        $(document).ready(function () {
            $("#btnQueryCurrency").click(function () {
                //function findCovers() {

                var GetItem = [{
                    //paramProdCode: $("#txtProductCode").val(),
                    paramsearchField: $("#txtSearchCurrency").val(),
                    //paramCoverCode: $('#txtSearchCover').val()
                }];

                //alert("No data found, Check and try again");

                $.ajax({

                    type: 'POST',
                    url: '/api/CreateExchangeRate/GetName',

                    //Data to send

                    data: JSON.stringify({ getcov: GetItem }),

                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',


                    //dataprocess: true,
                    success: function (data) {

                        //clear the grid
                        $("#grdCurrency").clearGridData();

                        var Covdata = data;
                        //alert(data);

                        if (Covdata.length > 0) {
                            for (var i = 0; i < Covdata.length; i++)

                                jQuery("#grdCurrency").addRowData(Covdata[i].id, Covdata[i]);
                        }
                        else {

                            alert("No data found, Check and try again");
                        }

                    },
                    'error': function (error) {

                        alert(JSON.stringify(error));
                    }

                });
            });
        });

        $(document).ready(function () {
            $("#grdCurrency").jqGrid({
                data: 'local',
                colNames: ['Code', 'Base Rate', 'Exr Rate'],
                colModel: [
                    { name: 'EXR_BASE_CURRENCY', index: 'EXR_BASE_CURRENCY', width: 100 },
                    { name: 'EXR_BASE_RATE', index: 'EXR_BASE_RATE', width: 300 },
                    { name: 'EXR_EXCHANGE_RATE', index: 'EXR_EXCHANGE_RATE', width: 300 },
                ],
                //Retrive Code and description and return on row click..
                onSelectRow: function (rowid) {
                    var grid = $('#grdCurrency');
                    var sel_id = grid.jqGrid('getGridParam', 'selrow');
                    var Id = grid.jqGrid('getCell', sel_id, 'EXR_BASE_CURRENCY');
                    var Name = DescCellData = grid.jqGrid('getCell', sel_id, 'EXR_BASE_RATE');
                    var Rate = DescCellData = grid.jqGrid('getCell', sel_id, 'EXR_EXCHANGE_RATE');

                    $("#txtCurrCode").val(Id);
                    $("#txtCurrDetls").val(Name);
                    //$("#txtFxRate").val(Rate);

                },

                rowNum: 50,
                rowList: [50, 75, 150],
                pager: '#grdPager',
                sortname: 'id',
                viewrecords: true,
                sortorder: "asc",
                loadonce: true,
                ignoreCase: true,
                caption: "Usage list",
                loadtext: 'Loading, please wait',
                //new added
                width: this.parentElement,
                shrinkToFit: false,
                autowidth: false,
                multiselect: false
            });
            jQuery("#grdCurrency").jqGrid('navGrid', '#grdPager',
                { search: true, edit: false, add: false, del: false });

            jQuery("#grdCurrency").jqGrid('filterToolbar',
             { searchOnEnter: false, stringResult: true, defaultSearch: "cn" });

            jQuery("#grdCurrency").jqGrid('bindKeys');
        });


        //-- --------------------------------Diaglog form for Make ---------------------- -->
        //<!-- LOV for Codes -->
        $(function () {
            var dialog, form,
            dialog = $("#dialog-Make").dialog({
                autoOpen: false,
                height: 550,
                width: 700,
                modal: true,

                buttons: {
                    "OK": function () {
                        if ($("#txtVehMakeCode").val() == "") {
                            alert("No value selected, check and try again")
                        }
                        else {

                            $(this).dialog("close");
                        }
                    },

                    "Clear": function () {
                        $("#txtVehMakeCode").val("");
                        $("#txtVehMakeName").val("");

                    },

                    Cancel: function () {
                        $(this).dialog("close");
                        $("#txtVehMakeCode").val("");
                        $("#txtVehMakeName").val("");
                        $("#txtVehModelCode").val("");
                        $("#txtVehModelName").val("");
                        $("#txtBodyType").val("");
                        $("#txtManuYear").val("");
                        $("#txtChassisNo").val("");
                        $("#dwnCubicCap").val("");
                        $("#txtSeatNo").val("");
                    },
                }

            });

            //open the dialog form
            $("#btnSelMake").button().on("click", function () {
                dialog.dialog("open");
            });

        });

        //--- -----------------------------------SelectCode  LOV Make------------ -->
        // LOV to select from
        $(document).ready(function () {
            $("#btnQueryMake").click(function () {
                //function findCovers() {

                var GetItem = [{
                    //paramProdCode: $("#txtProductCode").val(),
                    paramsearchField: $("#txtSearchMake").val(),
                    //paramCoverCode: $('#txtSearchCover').val()
                }];

                //alert("No data found, Check and try again");

                $.ajax({

                    type: 'POST',
                    url: '/api/CreateMakeModel/GetName',

                    //Data to send

                    data: JSON.stringify({ getcov: GetItem }),

                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',


                    //dataprocess: true,
                    success: function (data) {

                        //clear the grid
                        $("#grdMake").clearGridData();

                        var Covdata = data;
                        //alert(data);

                        if (Covdata.length > 0) {
                            for (var i = 0; i < Covdata.length; i++)

                                jQuery("#grdMake").addRowData(Covdata[i].id, Covdata[i]);
                        }
                        else {

                            alert("No data found, Check and try again");
                        }

                    },
                    'error': function (error) {

                        alert(JSON.stringify(error));
                    }

                });
            });
        });

        $(document).ready(function () {
            $("#grdMake").jqGrid({
                data: 'local',
                colNames: ['Code', 'Name', 'Model', 'Body Type', 'Mft Year', 'Chasis No', 'Cubic Cap', 'No Passengers'],
                colModel: [
                    { name: 'MMO_CODE', index: 'MMO_CODE', width: 150 },
                    { name: 'MMO_NAME', index: 'MMO_NAME', width: 200 },
                    { name: 'MMO_DESC', index: 'MMO_DESC', width: 200 },
                    { name: 'MMO_BODY_TYPE', index: 'MMO_BODY_TYPE', width: 200 },
                    { name: 'MMO_YEAR_MFG', index: 'MMO_YEAR_MFG', width: 200 },
                    { name: 'MMO_CHASSIS_NUM', index: 'MMO_CHASSIS_NUM', width: 200 },
                    { name: 'MMO_CUBIC_CAPACITY', index: 'MMO_CUBIC_CAPACITY', width: 200 },
                    { name: 'MMO_PASSENGERS', index: 'MMO_PASSENGERS', width: 200 },
                ],
                //Retrive Code and description and return on row click..
                onSelectRow: function (rowid) {
                    var grid = $('#grdMake');
                    var sel_id = grid.jqGrid('getGridParam', 'selrow');
                    var Id = grid.jqGrid('getCell', sel_id, 'MMO_CODE');
                    var Name = DescCellData = grid.jqGrid('getCell', sel_id, 'MMO_NAME');
                    var Desc = DescCellData = grid.jqGrid('getCell', sel_id, 'MMO_DESC');
                    var Type = DescCellData = grid.jqGrid('getCell', sel_id, 'MMO_BODY_TYPE');
                    var Year = DescCellData = grid.jqGrid('getCell', sel_id, 'MMO_YEAR_MFG');
                    var Chassis = DescCellData = grid.jqGrid('getCell', sel_id, 'MMO_CHASSIS_NUM');
                    var Cubic = DescCellData = grid.jqGrid('getCell', sel_id, 'MMO_CUBIC_CAPACITY');
                    var Passengers = DescCellData = grid.jqGrid('getCell', sel_id, 'MMO_PASSENGERS');

                    $("#txtVehMakeCode").val(Id);
                    $("#txtVehModelCode").val(Id);
                    $("#txtVehMakeName").val(Name);
                    $("#txtVehModelName").val(Desc);
                    $("#txtBodyType").val(Type);
                    $("#txtManuYear").val(Year);
                    $("#txtChassisNo").val(Chassis);
                    $("#dwnCubicCap").val(Cubic);
                    $("#txtSeatNo").val(Passengers);
                },

                rowNum: 50,
                rowList: [50, 75, 150],
                pager: '#grdPager',
                sortname: 'id',
                viewrecords: true,
                sortorder: "asc",
                loadonce: true,
                ignoreCase: true,
                caption: "Make list",
                loadtext: 'Loading, please wait',
                //new added
                width: this.parentElement,
                shrinkToFit: false,
                autowidth: false,
                multiselect: false
            });
            jQuery("#grdMake").jqGrid('navGrid', '#grdPager',
                { search: true, edit: false, add: false, del: false });

            jQuery("#grdMake").jqGrid('filterToolbar',
             { searchOnEnter: false, stringResult: true, defaultSearch: "cn" });

            jQuery("#grdMake").jqGrid('bindKeys');
        });




        //Taps Layout function call using Jquery
        $(function () {
            $("#tabs").tabs({
                beforeLoad: function (event, ui) {
                    ui.jqXHR.fail(function () {
                        ui.panel.html(
                          "Couldn't load this tab. We'll try to fix this as soon as possible. " +
                          "If this wouldn't be a demo.");
                    });
                }
            });
        });

        $(document).ready(function () {
            // Tab initialization
            $('#tabs-1').tabs({
                select: function (event, ui) {
                    alert("tab clicked");
                }
            });
        });

        $(function () {
            $("#tabs").resizable();
            $("#tabs").height(2000);
            //$("#tabs").width(1500);
            //$("#tabs").draggable();

        });

        //Period days calculations/

        $(document).ready(function () {

            //Policy period days

            document.getElementById("txtPolStDate").addEventListener("focusout", fxnPolPeriodDays);
            document.getElementById("txtPolEndDate").addEventListener("focusout", fxnPolPeriodDays);


            function fxnPolPeriodDays() {
                //alert("Input field lost focus.");
                var fDate = $("#txtPolStDate").val();
                var ldDate = $("#txtPolEndDate").val();

                var StartDate = new Date(fDate);
                var EndDate = new Date(ldDate);

                var polPeriodDays = diffDays(StartDate, EndDate);

                if (polPeriodDays > 0) {
                    $("#txtPolDays").val(polPeriodDays);
                }
                else if ((polPeriodDays <= 0)) {
                    alert("Policy End date cannot be less than or equal to start date");
                    //reset end date and no. of days
                    $("#txtPolEndDate").val('');
                    $("#txtPolDays").val('');

                }
                else {

                }
            }

            //Risk period days

            document.getElementById("dtVehstartDate").addEventListener("focusout", fxnRiskPeriodDays);
            document.getElementById("dtsVehEndDate").addEventListener("focusout", fxnRiskPeriodDays);
            function fxnRiskPeriodDays() {
                //alert("Input field lost focus.");
                var fDate = $("#dtVehstartDate").val();
                var ldDate = $("#dtsVehEndDate").val();

                var StartDate = new Date(fDate);
                var EndDate = new Date(ldDate);

                var riskPeriodDays = diffDays(StartDate, EndDate);

                if (riskPeriodDays > 0) {
                    $("#txtVehPeriodDays").val(riskPeriodDays);
                }
                else if ((riskPeriodDays <= 0)) {
                    alert("Risk End date cannot be less than or equal to start date");
                    //reset end date and no. of days
                    $("#dtsVehEndDate").val('');
                    $("#txtVehPeriodDays").val('');

                }
                else {

                }


                // alert(diffDays(StartDate, EndDate));
            }
        });

        // Dialog to Process Policy
        $(document).ready(function () {
            $(function () {

                var dialog, form,

                dialog = $("#frmProcessPolicy").dialog({
                    autoOpen: false,
                    height: 550,
                    width: 700,
                    modal: true,

                    buttons: {

                        "Run report": function () {

                            if ($('#txtPolDocNoProc').val() == "") {

                                alert('Process parameters not set properly, Please check and try again')
                            }

                            else {

                                fxnProcessPolicy(fxnPremRegData);

                                function fxnPremRegData(data) {



                                    var PolPremium = data[0].POL_PREMIUM;
                                    var AgencyComm = data[0].POL_COMMISSION;


                                    if (PolPremium.length <= 0) {

                                        alert("No Data found to porcess, check and try again");

                                    }
                                    else {
                                        $("#gridPremReg").clearGridData();

                                        if (PolPremium.length > 0 && PolPremium[0].PR_FC_AMOUNT != 0) {


                                            //Load grid
                                            for (var i = 0; i < PolPremium.length; i++)
                                                jQuery("#gridPremReg").addRowData(PolPremium[i].id, PolPremium[i]);

                                        }
                                        if (AgencyComm.length > 0 && AgencyComm[0].PR_FC_AMOUNT != 0) {

                                            //$("#gridPremReg").clearGridData();
                                            //Load grid
                                            for (var i = 0; i < AgencyComm.length; i++)
                                                jQuery("#gridPremReg").addRowData(AgencyComm[i].id, AgencyComm[i]);

                                        }

                                        //Save premium register
                                        var gridPrem = $('#gridPremReg');
                                        var premRegRowIds = gridPrem.jqGrid('getDataIDs');

                                        if (premRegRowIds.length > 0) {

                                            alert("Policy porcess completed sucessfully, do you want to continue?");

                                            fxnSavePremRegister(fxnSavedStatus);

                                            function fxnSavedStatus(data) {

                                                if (data == "A") {

                                                    alert("Premium gregister saved successfully");
                                                }


                                            }

                                        }
                                        else {
                                            alert("Policy porcess, could not complete, check and try again?");
                                        }

                                    }

                                    //

                                }


                            }

                        },

                        "Clear": function () {

                        },

                        Cancel: function () {

                            $(this).dialog("close");

                        },
                    }

                });
                $("#btnProcessPolicy").button().on("click", function () {

                    if ($('#txtPolDocNo').val() =="")
                    {
                        alert("There is no Policy Data to process, please check and try again")
                    }
                    else
                    {
                    dialog.dialog("open");

                    // get Policy doc no
                    var polDocNo = $('#txtPolDocNo').val();

                    $('#txtPolDocNoProc').val(polDocNo);

                    //get Endorsement No.
                    var polEndNo = $('#txtPolEndNo').val();

                    $('#txtPolEndNoProc').val(polEndNo);
                  }
                });
            });
        });


        //Run reports

        // call Dialog box to Submit form parameters
        $(document).ready(function () {
                $(function () {

                    var dialog, form,

                    dialog = $("#frm_MotSch_form").dialog({
                        autoOpen: false,
                        height: 550,
                        width: 700,
                        modal: true,

                        buttons: {

                            "Run report": function () {

                                if ($('#txtPolDocNoPrint').val() == "") {


                                    alert('Input parameters not set properly, Please check and try again')
                                }

                                else {

                                    window.open('frmMotorSchedule', 'result', "width=900,height=1000,toolbar=0,menubar=no,status=no,resizable=yes,location=no,directories=no,scrollbars=yes");

                                    document.getElementById('frm_MotSch_form').submit();


                                    //$("#frm_MotSch_form")[0].submit();

                                }

                            },

                            "Clear": function () {

                            },

                            Cancel: function () {

                                $(this).dialog("close");

                            },
                        }

                    });
                 $("#btnPrint").button().on("click", function () {


                     if ($('#dwnCovType').val() == 'S') {

                         if ($('#txtPolDocNo').val() == "") {

                             alert("There is no Policy Data, please check and try again")
                         }
                         else {
                             dialog.dialog("open");

                             // get Policy doc no
                             var polDocNo = $('#txtPolDocNo').val();

                             $('#txtPolDocNoPrint').val(polDocNo);

                             //get Endorsement No.
                             var polEndNo = $('#txtPolEndNo').val();

                             $('#txtPolEndNoPrint').val(polEndNo);
                         }

                     }
                     else
                     {

                     }
             });

                });
        });



        //Date picker -->
        //Start date
        $(function () {

            $("#dtPolstartDate1").datepicker({
                showOn: "button",
                buttonImage: "../Content/Images/calendar-icon1.png",

                buttonImageOnly: true,
                //buttonText: "Select"
            });
        });
        // ---- Policy Start Date
        $(function () {
            $("#txtPolStDate").datepicker({
                showOn: "button",
                buttonImage: "../Content/Images/calendar-icon1.png",
                buttonImageOnly: true,

            });
        });

        //---- Policy End Date
        $(function () {
            $("#txtPolEndDate").datepicker({
                showOn: "button",
                buttonImage: "../Content/Images/calendar-icon1.png",
                buttonImageOnly: true,
            });
        });

        //Risk effective Date
        $(function () {
            $("#dtVehstartDate").datepicker({
                showOn: "button",
                buttonImage: "../Content/Images/calendar-icon1.png",
                buttonImageOnly: true,
            });
        });

        //Risk End Date
        $(function () {
            $("#dtsVehEndDate").datepicker({
                showOn: "button",
                buttonImage: "../Content/Images/calendar-icon1.png",
                buttonImageOnly: true,
            });
        });

        //Risk Issue Date
        $(function () {
            $("#dtIssueDate").datepicker({
                showOn: "button",
                buttonImage: "../Content/Images/calendar-icon1.png",
                buttonImageOnly: true,
            });
        });
        //Retroactive date
        $(function () {
            $("#dtRetroDate").datepicker({
                showOn: "button",
                buttonImage: "../Content/Images/calendar-icon1.png",
                buttonImageOnly: true,
            });
        });


    </script>

    <div id="tabs">
        <div style="border: 1px solid #000000; border-color: gray; width: 100%" class="roundElement">

            <br />
            <div style="text-align: center; margin-right: 10px" class="containera">


                <select id="dwnCovType" onchange="runReport()" style="width:25%; color:darkgreen; border-radius: 10px" name="Type" class="btn btn-default">

                    <option value="">--Print Policy Documents--</option>
                    <option value="S">Poilicy Schedule</option>
                    <option value="C">Certificate</option>
                    <option value="D">Debit/Credit Notes</option>
                    <option value="R">Renewal Notices</option>

                </select>

                <button id="btnPrint" type="button" value="Print">

                    <img src="~/Content/Images/PrintNew.png" />

                </button>


                <button id="btnSavePolicy" type="button" class="btn btn-default" style="border-radius: 10px">
                    <i class="fa fa-save" title="Save" aria-hidden="true"></i> Save
                </button>

                <button id="btnProcessPolicy" type="button" class="btn btn-default" style="border-radius: 10px">
                    <i class="fa fa-save" title="Save" aria-hidden="true"></i> Process Policy
                </button>

                <button id="btnApprovePolicy" type="button" class="btn btn-default" style="border-radius: 10px">
                    <i class="fa fa-save" title="Save" aria-hidden="true"></i> Approve Policy
                </button>

                <button id="btnDeletePolicy" type="button" class="btn btn-default" style="border-radius: 10px">
                    <i class="fa fa-trash-o" title="Delete" aria-hidden="true"></i> Delete
                </button>

                <button type="reset" class="btn btn-default" style="border-radius: 10px">
                    <i class="fa fa-refresh" title="Reset" aria-hidden="true"></i> Reset
                </button>

                <button type="button" id="btnQueryMotorPolicy" class="btn btn-default" style="float: right;  border-radius: 10px">
                    <i class="fa fa-search" title="Search" aria-hidden="true" style="border-radius: 10px"></i> Search
                </button>
                <input id="txtSearch" style="width:20%; height: 30px; text-align:center; float:right; margin-right: 10px" class="text ui-widget-content ui-corner-all" type="text" name="txtSearch" placeholder="Search by serial Number">

                <br /><br />
            </div>

        </div>

        <!-- Tab 1 Header-->
        <ul>
            <li><a href="#tabs-1">Policy Details</a></li>
            <li><a href="#tabs-2">Risk Details</a></li>
            <li><a href="#tabs-3">Premium Payable</a></li>
            <li><a href="#tabs-4">Payments Details</a></li>
            <li><a href="#tabs-5">RI Details </a></li>
            <li><a href="#tabs-6">Claims History</a></li>
            <li><a href="#tabs-7">Renewal History</a></li>

        </ul>

        <!-- --------------------------Tab 1 Content begins------------------------------------->

        <div id="tabs-1" class="roundElement">

            <form id="frm-polhead">

                <div style="border: 1px solid #000000; border-color: dodgerblue; width: 70%" class="roundElement">


                    <fieldset>


                        <div>
                            <input id="txtPolsysID" style="width:5%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="Company" title="txtPolsysID">
                            <input id="txtPolEndNo" style="width:5%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="Company" title="txtPolEndNo">

                            <input id="txtPolicyState" style="width:5%; height: 30px " title="txtPolicyState">
                            <!-- -->
                            <input id="txtPolPremFC" style="width:10%; height: 30px " title="txtPolPremFC">
                            <input id="txtPolPremBC" style="width:10%; height: 30px " title="txtPolPremBC">

                            <input id="txtPolLoadFC" style="width:10%; height: 30px " title="txtPolLoadFC">
                            <input id="txtPolLoadBC" style="width:10%; height: 30px " title="txtPolLoadBC">

                            <input id="txtPolDiscFC" style="width:10%; height: 30px " title="txtPolDiscFC">
                            <input id="txtPolDiscBC" style="width:10%; height: 30px " title="txtPolDiscBC">

                            <input id="txtPolSIFC" style="width:10%; height: 30px " title="txtPolCommFC">
                            <input id="txtPolSIBC" style="width:10%; height: 30px " title="txtPolCommBC">

                            <input id="txtPolCommFC" style="width:10%; height: 30px " title="txtPolCommFC">
                            <input id="txtPolCommBC" style="width:10%; height: 30px " title="txtPolCommBC">

                            <button type="button" class="btn btn-default" id="btngetDateTest" style="height:30px"></button>



                            <br /><br />

                            <h4 style="border-bottom-color:red" class="sub-header">Distribution Channel</h4>

                            <label id="lblCompanyCode" for="txtCompany">Company</label>
                            <input id="txtComCode" style="width:10%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ID" title="Company">
                            <button type="button" class="btn btn-default" id="btnSelCompany" style="height:30px">
                                <i class="fa fa-sort-down" title="Select" aria-hidden="true"></i>
                            </button>
                            <input id="txtCompanyName" style="width:27%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="Company" title="Office Description">
                            <br />
                            <label id="lblChanIntermCode" for="txtChannelIntermName">Intermidiary</label>
                            <input id="txtChanIntermCode" style="width:10%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="txtChanInterm" title="Channel Intermediary Code">
                            <button type="button" class="btn btn-default" id="btnSelChannelInterm" style="height:30px">
                                <i class="fa fa-sort-down" title="Select" aria-hidden="true"></i>
                            </button>
                            <input id="txtChanIntermName" style="width:27%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="txtChanIntermName" title="Channel Intermediary Name">

                            <br>
                            <label id="lblOffice" for="txtOffice">Office</label>
                            <input id="txtOffCode" style="width:10%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="Office" title="Select Issueing office">
                            <button type="button" class="btn btn-default" id="btnSelOffice" style="height:30px">
                                <i class="fa fa-sort-down" title="Select" aria-hidden="true"></i>
                            </button>
                            <input id="txtOffName" style="width:27%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="OfficeDesc" title="Office Description">

                        </div>

                        <h4 style="border-bottom-color:red" class="sub-header">Customer Details</h4>
                        <div>

                            <label id="lblCustCode" for="txtCustCode">Customer Code</label>
                            <input id="txtCustCode" style="width:10%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="CustID" title="Customer Code">
                            <button type="button" class="btn btn-default" id="btnSelCust" style="height:30px">
                                <i class="fa fa-sort-down" title="Select" aria-hidden="true"></i>
                            </button>
                            <br />
                            <label id="lblCustName" for="txtCustName">Customer Name</label>
                            <input id="txtCustName" style="width:40%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="CustName" title="Customer full name">
                            <br />
                            <label id="lblAddress" for="txtAddress"> Address</label>
                            <input id="txtAddress" style="width:40%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="CustAddress" title="Customer Address">
                            <br />
                            <label id="lblCustContNo" for="txtCustContNo"> Mobile Number</label>
                            <input id="txtCustContNo" style="width:10%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="CustContNo" title="Customer Contact Number">

                        </div> <br />

                        <h4 style="border-bottom-color:red" class="sub-header">Policy Details</h4>
                        <br />
                        <label id="lblProduct" for="txtProduct">Product Type</label>
                        <input id="txtProductCode" style="width:10%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="Select Product">
                        <button type="button" class="btn btn-default" id="btnSelProduct" style="height:30px">
                            <i class="fa fa-sort-down" title="Select" aria-hidden="true"></i>
                        </button>
                        <input id="txtProductName" style="width:27%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="Select Product">
                        <br />

                        <label id="lblCoverCode" for="txtCoverTypeCode">Cover Type</label>
                        <input id="txtCoverTypeCode" style="width:10%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="Select Product">
                        <button type="button" class="btn btn-default" id="btnSelCover" style="height:30px">
                            <i class="fa fa-sort-down" title="Select" aria-hidden="true"></i>
                        </button>
                        <input id="txtCoverName" style="width:27%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="Select Product">
                        <br />
                        <br />
                        <!-- ............................ Policy Details ............. -->

                        <div>

                            <label id="lblInsSrc" for="txtbizSrcCode">Insurance Source</label>
                            <input id="txtInsSrcCode" style="width:10%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ID" title="Insurance Source Code">
                            <button type="button" class="btn btn-default" id="btnSelInsSrc" style="height:30px">
                                <i class="fa fa-sort-down" title="Select" aria-hidden="true"></i>
                            </button>
                            <input id="txtInsSrcName" style="width:27%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ID" title="Insurance Source">
                        </div>

                        <div>
                            <label id="lblbizSrcCode" for="txtbizSrcCode">Business Source</label>
                            <input id="txtbizSrcCode" style="width:10%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ID" title="Business Source Code">
                            <button type="button" class="btn btn-default" id="btnSelBizSource" style="height:30px">
                                <i class="fa fa-sort-down" title="Select" aria-hidden="true"></i>
                            </button>
                            <input id="txtbizSource" style="width:27%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ID" title="Business Source">
                        </div>
                        <div>
                            <label id="lblAgency" for="txtAgencySrcCode">Broker-Agent Soruce</label>
                            <input id="txtAgencySrcCode" style="width:10%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="Agency" title="Agency Code">
                            <button type="button" class="btn btn-default" id="btnSelAgencySrc" style="height:30px">
                                <i class="fa fa-sort-down" title="Select" aria-hidden="true"></i>
                            </button>
                            <input id="txtAgencySrcName" style="width:27%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="Agency" title="Broker-Agency name">
                        </div>


                        <!-- Insurance Period -->
                        <h4 style="border-bottom-color:red" class="sub-header">Period of Insurance</h4>

                        <div>

                            <label id="lblPolDate " for="txtPolStDate"> Start Date</label>
                            <input id="txtPolStDate" style="width:15%; height: 30px " class="text ui-widget-content ui-corner-all" name="dtPolstartDate" type="text" title="Start Date of policy">
                            <br>
                            <label id="lblPolEndDate " for="txtPolEndDate"> End Date</label>
                            <input id="txtPolEndDate" style="width:15%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" title="End Date of Policy">
                            <br>
                            <label id="lblPolDays " for="dtstartDate"> PolicyDays</label>
                            <input id="txtPolDays" style="width:10%; height: 30px " class="text ui-widget-content ui-corner-all" type="number" title="Policy Duration in days">

                        </div><br />


                        <div>
                            <!-- Policy reference Details -->
                            <h4 style="border-bottom-color:red" class="sub-header">Policy reference Details</h4>


                            <label id="lblQtnNo" for="txtQtnSerNo">Quotation Number</label>
                            <input id="txtQuotationNo" style="width:40%; height: 30px; align-self:flex-start" class="text ui-widget-content ui-corner-all" type="text" name="QuotationNo" title="Qoutation number">
                            - <input id="txtQtnSerNo" style="width:10%; height: 30px" class="text ui-widget-content ui-corner-all" type="text" name="QuotationNo" title="Qoutation Serial Number">
                            <br />

                            <label id="lblSerNoID" for="txtSerNo">Policy Number</label>
                            <input id="txtPolicyNo" style="width:40%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ID" title="Policy Number">
                            - <input id="txtSerNo" style="width:10%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ID" title="Policy Serial number">
                            - <input id="txtEndSeq" style="width:10%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ID" title="Endorsement Sequence">
                            - <input id="txtRenSeq" style="width:10%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ID" title="Renewal Sequence">

                        </div>

                        <br /><br />
                    </fieldset>

                </div>
                <br />
                <div style="border: 1px solid #000000; align-content:center; border-color: dodgerblue; width: 70%" class="roundElement">
                    <br /><br />
                    <button id="btnSaveTariff" type="button" class="btn btn-default">
                        <i class="fa fa-save" title="Save" aria-hidden="true"></i> Commissions
                    </button>
                    <button id="btnSaveTariff" type="button" class="btn btn-default">
                        <i class="fa fa-save" title="Save" aria-hidden="true"></i> Covers
                    </button>
                    <button id="btnSaveTariff" type="button" class="btn btn-default">
                        <i class="fa fa-save" title="Save" aria-hidden="true"></i> Conditions and Clauses
                    </button>
                    <button id="btnSaveTariff" type="button" class="btn btn-default">
                        <i class="fa fa-save" title="Save" aria-hidden="true"></i> Excess
                    </button>
                    <button id="btnAttachDocuments" type="button" class="btn btn-default">
                        <i class="fa fa-save" title="Save" aria-hidden="true"></i> Attach Documents
                    </button>
                    <br /><br />
                </div>


            </form>

        </div>
        <!-- --------------------------Tab 1 Content begins------------------------------------->
        <!-- --------------------------Tab 2 Content begins------------------------------------->

        <div id="tabs-2">
            <!-- --------------------------Risk form------------------------------------>
            <form id="frm-MotorRisk">
                <div style="border: 1px solid #000000;height:700px; margin-left: 50px; border-color: dodgerblue; width: 90%" class="roundElement">
                    <br />
                    <!--  style="border: 1px solid #000000; border-color: dodgerblue; margin-left:4px;  width:90%" class="roundElement"-->
                    <div>




                        <button id="btnResetRiskControls" style="margin-left:10px" type="reset" class="btn btn-default">
                            <i class="fa fa-refresh" title="Reset" aria-hidden="true"></i> Reset
                        </button>
                        <button id="btnResetRiskControls" style="margin-left:10px" type="button" class="btn btn-default">
                            <i class="fa fa-refresh" title="Reset" aria-hidden="true"></i> Copy Vehicle
                        </button>

                        <button id="btnValidate" style="margin-left:10px" type="button" class="btn btn-default">
                            <i class="fa fa-refresh" title="Reset" aria-hidden="true"></i> Validate form
                        </button>

                        <input id="txtPolDocNo" style="width:5%; height: 30px " type="text" title="txtPolDocNo">
                        <input id="txtVehSysID" style="width:5%; height: 30px " type="text" title="txtVehSysID">
                        <input id="txtVehRiskID" style="width:5%; height: 30px " title="txtVehRiskID">
                        <input id="txtVehRiskState" style="width:5%; height: 30px " title="txtRiskState">

                        <br />
                        <h4 style="border-bottom-color:blue" class="sub-header"></h4>

                    </div>
                    <div style="border: 1px solid #000000; margin-left: 20px; border-color: dodgerblue; width: 95%" class="roundElement">
                        <h4 style="border-bottom-color:red" class="sub-header"> Risk Managment</h4>

                        <br />

                        <button id="btnAddRisk" style="margin-left:10px" type="button" class="btn btn-default">
                            <img src="~/Content/Images/add.png" />
                            <i title="Add Covers" aria-hidden="true"></i> Add new Vehicle
                        </button>

                        <button id="btnEditVehRisk" type="button" class="btn btn-default" style="border-radius: 10px">

                            <img src="~/Content/Images/Edit.png" />
                            <i title="Edit" aria-hidden="true"></i> Edit
                        </button>


                        <button id="btnDeleteVehRisk" type="button" class="btn btn-default" style="border-radius: 10px">

                            <img src="~/Content/Images/delete.png" />
                            <i title="Delete" aria-hidden="true"></i> Delete
                        </button>


                        <button id="btnDeleteVehRisk" type="button" class="btn btn-default" style="border-radius: 10px">

                            <img src="~/Content/Images/view_new.png" />
                            <i title="Delete" aria-hidden="true"></i> View
                        </button>

                        <input id="chkRIApp" type="checkbox" checked="checked" style="float:right; margin-right: 10px" class="text ui-widget-content ui-corner-all" name="checkbox" placeholder="Search from DB">

                        <label id="lblStaus" for="chkStatus" style="float:right; margin-right: 11px" float:right;>Include for RI?</label>

                        <!--Grid -->
                        <div>
                            <table id="gridVehRisks"></table>
                            <table id="gridVehPager"></table>
                        </div>

                    </div>



                </div>

            </form>


        </div>
        <!-- --------------------------Tab 3 Content Begins------------------------------------->
        <div id="tabs-3">
            <!-- --------------------------Premium calculations------------------------------------>
            <form id="frm-PremSummary">
                <div style="border: 1px solid #000000;height:1200px; margin-left: 50px; border-color: dodgerblue; width: 90%" class="roundElement">
                    <br />
                    <!--  style="border: 1px solid #000000; border-color: dodgerblue; margin-left:4px;  width:90%" class="roundElement"-->

                    <div style="border: 1px solid #000000; margin-left: 20px; border-color: dodgerblue; width: 95%" class="roundElement">
                        <h4 style="border-bottom-color:red" class="sub-header">Policy Premium Summary</h4>

                        <br />
                        <button id="btnPremRefresh" type="button" class="btn btn-default" style="border-radius: 10px">
                            <i title="Recalculate Premium" aria-hidden="true"></i> Refresh Premium
                        </button>
                        <br />
                        <!--Grid -->
                        <div>
                            <table id="gridPremSum"></table>
                            <table id="gridPremSumPager"></table>
                        </div>
                        <br />
                        <br />
                        <div>
                            <table id="gridPremReg"></table>
                            <table id="gridPremRegPager"></table>
                        </div>


                    </div>



                </div>

            </form>
        </div>
        <!-- --------------------------Tab 3 Content Ends------------------------------------>
        <!-- --------------------------Tab 4 Content Begins------------------------------------>

        <div id="tabs-4">
            <!-- --------------------------Payment process------------------------------------>
            <!-- --------------------------Premium Payment Summary------------------------------------>
            <form id="frm-PremPmt">
                <div style="border: 1px solid #000000;height:700px; margin-left: 50px; border-color: dodgerblue; width: 90%" class="roundElement">
                    <br />
                    <!--  style="border: 1px solid #000000; border-color: dodgerblue; margin-left:4px;  width:90%" class="roundElement"-->

                    <div style="border: 1px solid #000000; margin-left: 20px; border-color: dodgerblue; width: 95%" class="roundElement">
                        <h4 style="border-bottom-color:red" class="sub-header"> Premium Payment Summary </h4>

                        <br />

                        <!--Grid -->
                        <div>
                            <table id="gridPremPmt"></table>
                            <table id="gridPremPmtPager"></table>
                        </div>

                    </div>



                </div>

            </form>
        </div>
        <!-- --------------------------Tab 4 Content ends------------------------------------>

        <div id="tabs-5">
            <!-- --------------------------RI Summary------------------------------------>
            <form id="frm-RISummary">
                <div style="border: 1px solid #000000;height:1300px; margin-left: 50px; border-color: dodgerblue; width: 90%" class="roundElement">
                    <br />
                    <!--  style="border: 1px solid #000000; border-color: dodgerblue; margin-left:4px;  width:90%" class="roundElement"-->

                    <div style="border: 1px solid #000000; margin-left: 20px; border-color: dodgerblue; width: 95%" class="roundElement">
                        <h4 style="border-bottom-color:red" class="sub-header"> RI Summary </h4>

                        <br />

                        <!--Grid -->
                        <div>
                            <table id="gridRISummary"></table>
                            <table id="gridRISummaryPager"></table>
                        </div>
                        <br />
                        <h4 style="border-bottom-color:red" class="sub-header"> Treaty Apportionment</h4>
                        <br />

                        <!--Grid -->
                        <div>
                            <table id="gridFACINPremSum"></table>

                            <table id="gridFACINPager"></table>
                        </div>

                        <h4 style="border-bottom-color:red" class="sub-header"> Reinsurance Share Apportionment</h4>
                        <br />

                        <!--Grid -->
                        <div>
                            <table id="gridCoIns"></table>

                            <table id="gridCoInsPager"></table>
                        </div>
                    </div>
                </div>

            </form>

        </div>
        <div id="tabs-6">
            <!-- --------------------------Claims Summary------------------------------------>
            <form id="frm-ClaimsSummary">
                <div style="border: 1px solid #000000;height:700px; margin-left: 50px; border-color: dodgerblue; width: 90%" class="roundElement">
                    <br />
                    <!--  style="border: 1px solid #000000; border-color: dodgerblue; margin-left:4px;  width:90%" class="roundElement"-->

                    <div style="border: 1px solid #000000; margin-left: 20px; border-color: dodgerblue; width: 95%" class="roundElement">
                        <h4 style="border-bottom-color:red" class="sub-header"> Policy Claims History Summary </h4>

                        <br />

                        <!--Grid -->
                        <div>
                            <table id="gridClaimsSummary"></table>
                            <table id="gridClaimsSummaryPager"></table>
                        </div>

                    </div>
                </div>

            </form>
        </div>
        <div id="tabs-7">
            <!-- --------------------------Renewal History------------------------------------>
            <form id="frm-RenewalHistory">
                <div style="border: 1px solid #000000;height:700px; margin-left: 50px; border-color: dodgerblue; width: 90%" class="roundElement">
                    <br />
                    <!--  style="border: 1px solid #000000; border-color: dodgerblue; margin-left:4px;  width:90%" class="roundElement"-->

                    <div style="border: 1px solid #000000; margin-left: 20px; border-color: dodgerblue; width: 95%" class="roundElement">
                        <h4 style="border-bottom-color:red" class="sub-header"> Policy Renewal Summary </h4>

                        <br />

                        <!--Grid -->
                        <div>
                            <table id="gridRenewalHistory"></table>
                            <table id="gridRenewalHistoryPager"></table>
                        </div>

                    </div>
                </div>

            </form>

        </div>
    </div>

    <!-- dialog form for Covers LOV -->
    <div id="dlgCode-form" title="Save Data">
        <form id="ProdCovers">
            <div style="color: red">
                Alert Message
            </div>
            <h4 style="border-bottom-color:blue" class="sub-header"></h4>
            <!-- -->
            <div style="color: fuchsia">

                Are you sure you want to save ?

            </div>

        </form>
    </div>
    <!-- Vehicle Details form-->
    <div>
        <form id="frm-VehDetails">
            <div style="border: 1px solid #000000; margin-left: 40px; border-color: dodgerblue; width: 95%" ; class="roundElement">
                <br />
                <!--  style="border: 1px solid #000000; border-color: dodgerblue; margin-left:4px;  width:90%" class="roundElement"-->

                <div>
                    <fieldset>
                        <div>

                            <h4 style="border-bottom-color:  red" class="sub-header">Risk Type</h4>

                            <label id="lblCoverCode" for="txtCoverTypeCode">Motor Risk</label>
                            <input id="txtVehUsageCode" style="width:10%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="Select Product">
                            <button type="button" class="btn btn-default" id="btnSelUsage" style="height:30px">
                                <i class="fa fa-sort-down" title="Select" aria-hidden="true"></i>
                            </button>
                            <input id="txtUsageName" style="width:80%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="Select Product">
                            <br />

                        </div>

                        <h4 style="border-bottom-color:red; margin-left: 10px" class="sub-header"> Risk Period</h4>

                        <div>
                            <label id="lblDate " for="dtIssueDate"> Issue Date</label>
                            <input id="dtIssueDate" class="text ui-widget-content ui-corner-all" type="text" title="Start Date of policy">

                            <label id="lblDate " for="dtRetroDate"> Retrospective Date</label>
                            <input id="dtRetroDate" class="text ui-widget-content ui-corner-all" type="text" title="Start Date of policy">
                            <br />
                            <label id="lblDate " for="dtVehstartDate"> Effective Date</label>
                            <input id="dtVehstartDate" class="text ui-widget-content ui-corner-all" type="text" title="Start Date of policy">

                            <label id="lblDate " for="dtsVehEndDate"> End Date</label>
                            <input id="dtsVehEndDate" class="text ui-widget-content ui-corner-all" type="text" title="Start Date of policy">
                            <br />
                            <label id="lblDate " for="dtstartDate"> period Days</label>
                            <input id="txtVehPeriodDays" class="text ui-widget-content ui-corner-all" type="text" title="Start Date of policy">

                            <br /><br />
                            <label id="lblchassNo" for="txtChassisNo">Premium Basis</label>

                            <select id="dwnPremBasis" style="width:20%; border-radius: 10px" name="Type" class="btn btn-default">

                                <option value="1">Select basis</option>
                                <option value="2">Pro rata</option>
                                <option value="3">Short Period</option>
                                <option value="3">Flat Premium</option>
                            </select>
                            <br /><br />
                            <h4 style="border-bottom-color:red" class="sub-header">Risk Currency</h4>
                            <label id="lblPolCurrency" for="txtPolCurrency">Currency</label>
                            <input id="txtCurrCode" style="width:10%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ID" title="Policy Curency">
                            <button type="button" class="btn btn-default" id="btnSelPolCurrency" style="height:30px">
                                <i class="fa fa-sort-down" title="Select" aria-hidden="true"></i>
                            </button>
                            <input id="txtCurrDetls" style="width:10%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="Intermidiary" title="Currency details">
                            <input id="txtFxRate" style="width:5%; height: 30px " class="text ui-widget-content ui-corner-all" type="number" title="Policy Duration in days">
                            <br>
                        </div>

                        <div>
                            <h4 style="border-bottom-color:red" class="sub-header">Vehicle Details</h4>

                            <label id="lblVehRegNo" for="txtProduct">Registration No.</label>
                            <input id="txtVehRegNo" style="width:20%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="Select Product">
                            <br /><br />
                            <label id="lblVehMakeCode" for="txtVehMakeCode">Make</label>
                            <input id="txtVehMakeCode" style="width:10%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="Select Product">
                            <button type="button" class="btn btn-default" id="btnSelMake" style="height:30px">
                                <i class="fa fa-sort-down" title="Select" aria-hidden="true"></i>
                            </button>
                            <input id="txtVehMakeName" style="width:27%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="Select Product">
                            <br />
                        </div>
                        <div>

                            <label id="lblVehModelCode" for="txtVehModelCode">Model</label>
                            <input id="txtVehModelCode" style="width:10%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="Select Product">
                            <button type="button" class="btn btn-default" id="btnSelModel" style="height:30px">
                                <i class="fa fa-sort-down" title="Select" aria-hidden="true"></i>
                            </button>
                            <input id="txtVehModelName" style="width:27%; background-color: deepskyblue; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="Select Product">
                            <br />
                        </div>
                        <div>

                            <label id="lblBodyType" for="txtProduct">Body Type</label>
                            <input id="txtBodyType" style="width:20%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="Select Product">
                            <br />
                            <label id="lblManuYear" for="txtManuYear">Year of Manufacture</label>
                            <input id="txtManuYear" style="width:20%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="Select Product">

                            <label id="lblchassNo" for="txtChassisNo">   Chasis Number</label>
                            <input id="txtChassisNo" style="width:20%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="Select Product">
                            <br /><br />
                            <label id="lblchassNo" for="txtChassisNo">Cubic Capacit</label>

                            <select id="dwnCovType" style="width:20%; border-radius: 10px" name="Type" class="btn btn-default">

                                <option value="N">Select CC</option>
                                <option value="1"><=2000</option>
                                <option value="2">2001 and 1000</option>
                                <option value="3">Above 1001</option>
                            </select>
                            <br /><br />
                            <label id="lblSeatNo" for="txtProduct">   Seating Capacity </label>
                            <input id="txtSeatNo" style="width:20%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="Select Product">
                            <br /><br />
                            <label id="lblbuybackExx" for="chkbuybackExx">Buy Back Excess? </label>
                            <input id="chkbuybackExx" type="checkbox" value="Rated?">

                            <label id="lblExxPerc" for="ExxPerc"> Excess % </label>
                            <input id="ExxPerc" style="width:10%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="Select Product">
                            <br />
                            <label id="lblAddTPPD" for="chkbuybackExx">Increase TPPD Limit? </label>
                            <input id="chkAddTPPD" type="checkbox" value="Rated?">

                            <label id="lblAddTPPD" for="txtAddTPPD"> Amount </label>
                            <input id="txtAddTPPDSI" style="width:20%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="Select Product">

                        </div>
                        <div>
                            <br />
                            <h4 style="border-bottom-color:red" class="sub-header">Additional Info</h4>
                            <br />
                            <label id="lblTPInterest" for="chkTPInterest">  Third Party Interest? </label>
                            <input id="chkTPInterest" type="checkbox" value="chkTPInterest">

                            <label id="lblTPInterestInfo" for="txtTPInterestInfo">Details of TP</label>
                            <input id="txtTPInterestInfo" style="width:50%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="Select Product">
                            <br /><br />

                            <p style="color:red">Has any insurance company in connection with any motor vehicle declined your Proposal ? </p>
                            <br /><br />
                            <label id="lblPropDeclined" for="txtbuybackExx">  Yes/No</label>
                            <input id="chkPropDeclined" type="checkbox" value="chkPropDeclined">

                            <label id="lblPropDeclined" for="txtbuybackExx">  Declined Reeasons </label>
                            <input id="txtPropDeclReason" style="width:50%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="Select Product">
                            <br /><br />

                            <p style="color:red"> Has any insurance company in connection with any motor vehicle cancelled your policy ?</p>

                            <label id="lblPolCancelled" for="chkPolCancelled"> Yes/No </label>
                            <input id="chkPolCancelled" type="checkbox" value="chkPolCancelled">

                            <label id="lblReasonCancelled" for="txtReasonCancelled">  Cancelled Reeasons </label>
                            <input id="txtReasonCancelled" style="width:50%; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="Select Product">
                            <br /><br />
                        </div>

                    </fieldset>
                </div>

            </div>

            <!--- =========-->
            <div style="border: 1px solid #000000; margin-left: 40px; border-color: dodgerblue; width: 95%" class="roundElement">
                <br />
                <button id="btnDeftProductCovers" type="button" class="btn btn-default">
                    <i class="fa fa-save" title="Add Covers" aria-hidden="true"></i> Applicable Covers
                </button>

                <button id="btnApplyExcess" type="button" class="btn btn-default">
                    <i class="fa fa-save" title="Deductible Excess" aria-hidden="true"></i> Risk level D/L
                </button>

                <button id="btnApplyExcess" type="button" class="btn btn-default">
                    <i class="fa fa-save" title="Deductible Excess" aria-hidden="true"></i> Risk Level Excess
                </button>
                <button id="btnSaveTariff" type="button" class="btn btn-default">
                    <i class="fa fa-save" title="Attach Vehicle Docs" aria-hidden="true"></i> Attach Documents
                </button>
                <button id="btnSaveTariff" type="button" class="btn btn-default">
                    <i class="fa fa-save" title="Capture Driver Details" aria-hidden="true"></i> Driver Details
                </button>

                <br /><br />
            </div>



        </form>
    </div>

    <!--- ----LOV Dialog Form to select Covers -->
    <div id="dlgSelCovers-form" title="Applicable Covers">
        <form id="SelCovers">
            <div>
                <input id="txtFindField" style="width: 150px;height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" placeholder="Search by Name">

                <button type="button" id="btnfindProdCovers" class="btn btn-default">
                    <i class="fa fa-search" title="Search" aria-hidden="true"></i> Find
                </button>

            </div>

            <h4 style="border-bottom-color:red" class="sub-header"></h4>

            <div>
                <table id="gridFindCovers"></table>
                <table id="gridFindCovPager"></table>
            </div>
        </form>
    </div>

    @*- ----LOV Dialog Form to select Covers
        <div id="dlgfileUpload-form" title="Upload Files">
            <form id="SelCovers">
                <h3>Upload files </h3>
                <input type="file" name="files" value="" multiple="multiple" />
                <input type="submit" value="Upload You Image" title="Uplad" />
            </form>
        </div>*@

    <!--- ----Dialog Form For managing Covers -->
    <div id="dlgCovers-form" title="Applicable Covers">
        <form id="AppCovers">
            <div style="border: 1px solid #000000; margin-left: 30px; border-color: dodgerblue; width: 100%" class="roundElement">
                <h4 style="border-bottom-color:red" class="sub-header"> Covers Managment</h4>

                <br />
                <table>
                    <tr style="color:blue; align-content:center">
                        <th>Cover Code</th>
                        <th></th>
                        <th>Sum Insured </th>
                        <th>Rate</th>
                        <th>Gross Premium</th>
                        <th>Net Premium </th>
                        <th>Diccount</th>
                        <th>Loading</th>
                        <th>Cover Excess </th>
                        <th>Accessories</th>
                    </tr>
                    <tr>

                        <td>
                            <input id="txtCoverCode" style="width: 100px; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="Cover Code">
                        </td>
                        <td>
                            <button id="btnSelCovCode" type="button" style="width: 50px; height: 30px " class="btn btn-default">
                                <i class="fa fa-sort-down" title="Select" aria-hidden="true"></i>
                            </button>

                        </td>
                        <td>
                            <input id="txtCovSI" style="width: 150px;height: 30px " class="text ui-widget-content ui-corner-all" type="number" name="ProductDesc" title="Sum Insured">

                        </td>
                        <td>
                            <input id="txtCoveRate" style="width: 75px; height: 30px " class="text ui-widget-content ui-corner-all" type="number" name="ProductDesc" title="Rate">
                        </td>
                        <td>
                            <input id="txtGrossPrem" style="width: 150px; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="Gross Premium">

                        </td>
                        <td>
                            <input id="txtNetPrem" style="width: 150px; height:30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="Net Premium">

                        </td>
                        <td>
                            <button type="button" class="btn btn-default">
                                <i class="fa fa-refresh" title="Reset" aria-hidden="true"></i> Discount
                            </button>
                        </td>
                        <td>
                            <button type="button" class="btn btn-default">
                                <i class="fa fa-refresh" title="Reset" aria-hidden="true"></i> Loading
                            </button>
                        </td>
                        <td>
                            <button type="button" class="btn btn-default">
                                <i class="fa fa-save" title="Reset" aria-hidden="true"></i>Ded. Excess
                            </button>
                        </td>
                        <td>
                            <button type="reset" class="btn btn-default">
                                <i class="fa fa-save" title="Reset" aria-hidden="true"></i> Accessories
                            </button>
                        </td>

                    </tr>
                </table>
                <br />

                <div>
                    <button id="btnAddRiskCovers" type="button" class="btn btn-default">
                        <img src="~/Content/Images/add.png" />
                        <i title="Add Covers" aria-hidden="true"></i> Add Covers
                    </button>
                    <button type="reset" id="btnResetControls" class="btn btn-default">
                        <i class="fa fa-refresh" title="Reset" aria-hidden="true"></i> Reset
                    </button>
                    <!-- Hidden Controls-->
                    <input id="txtCovSysID" style="width: 50px; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="txtCovSysID">
                    <input id="txtDiscYN" style="width: 50px; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="txtDiscYN">
                    <input id="txtLoadYN" style="width: 50px; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="txtLoadYN">
                    <input id="txtRIYN" style="width: 50px; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="txtRIYN">

                    <input id="txtCoverType" style="width: 50px; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="txtCoverType">
                    <input id="txtRateChange" style="width: 50px; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="txtRateChange">
                    <input id="txtSIChange" style="width: 50px; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="txtSIChange">
                    <input id="txtCoverLevel" style="width: 50px; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="txtCoverLevel">
                    <input id="txtPremRefund" style="width: 50px; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="txtPremRefund">
                    <input id="txtRIApp" style="width: 50px; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="txtRIApp">
                    <input id="txtUserPrem" style="width: 50px; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="txtUserPrem">

                    <input id="txtLoading" style="width: 50px; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="txtLoading">
                    <input id="txtDiscount" style="width: 50px; height: 30px " class="text ui-widget-content ui-corner-all" type="text" name="ProductDesc" title="txtDiscount">

                    <h4 style="border-bottom-color:red" class="sub-header"> </h4>
                </div>

                <br />

                <!-- Grid for Covers-->
            </div>
            <div style="border: 1px solid #000000; margin-left: 30px; border-color: dodgerblue; width: 100%" class="roundElement">
                <br />


                <button id="btnEditCovers" type="button" class="btn btn-default" style="border-radius: 10px">

                    <img src="~/Content/Images/Edit.png" />
                    <i title="Edit" aria-hidden="true"></i> Edit
                </button>

                <button id="btnDeleteCovers" type="button" class="btn btn-default" style="border-radius: 10px">

                    <img src="~/Content/Images/delete.png" />
                    <i title="Delete" aria-hidden="true"></i> Delete
                </button>

                <!--Grid -->
                <div>
                    <table id="gridAppCovers"></table>
                    <table id="gridAppCovPager"></table>
                </div>
                <br /><br />

                <button type="button" id="btnFindTariff" class="btn btn-default" style="float: right;  border-radius: 10px">
                    <i class="fa fa-refresh" title="Recalculate" aria-hidden="true" style="border-radius: 10px"></i> Recalculate
                </button>
                <input id="txtSearch" style="width:20%; height: 30px; text-align:center; float:right; margin-right: 10px" class="text ui-widget-content ui-corner-all" type="text" name="txtSearch" placeholder="Cover Premium">

                <label style="float: right" id="lblTPInterest" for="chkTPInterest"> Cover Total Premium </label>

                <label style="float: left" id="lblTPInterest" for="chkTPInterest"> Cover Name </label>

                <input id="txtRiskCoverName" style="width:30%; height: 30px; text-align:center; float:left; margin-right: 10px" class="text ui-widget-content ui-corner-all" type="text" name="txtSearch" placeholder="Cover Name">

                <br />
                <br />

            </div>

        </form>

    </div>

    <!-----------------------Company  dialog -------------------->

    <div id="dialog-Company" title="Get Info">
        <form>
            <div>
                <input id="txtSearchCompany" type="text" placeholder="Search by Name" style="width: 40%" name="txtSearchCompany" title="">
                <button type="button" class="btn btn-default" id="btnQueryCompany">
                    <i class="fa fa-search" title="Search" aria-hidden="true"></i> Search
                </button>
            </div>
            <h4 style="border-bottom-color: red" class="sub-header"></h4>
            <!-- LOV Grid and pager-->
            <div>
                <table id="grdCompany"></table>
                <table id="grdPager"></table>
            </div>
        </form>
    </div>

    <!-----------------------Intermediary  dialog -------------------->

    <div id="dialog-Interm" title="Get Info">
        <form>
            <div>
                <input id="txtSearchInterm" type="text" placeholder="Search by Name" style="width: 40%" name="txtSearchInterm" title="">
                <button type="button" class="btn btn-default" id="btnQueryInterm">
                    <i class="fa fa-search" title="Search" aria-hidden="true"></i> Search
                </button>
            </div>
            <h4 style="border-bottom-color: red" class="sub-header"></h4>
            <!-- LOV Grid and pager-->
            <div>
                <table id="grdInterm"></table>
                <table id="grdPager"></table>
            </div>
        </form>
    </div>

    <!-----------------------Office  dialog -------------------->

    <div id="dialog-Office" title="Get Info">
        <form>
            <div>
                <input id="txtSearchOffice" type="text" placeholder="Search by Name" style="width: 40%" name="txtSearchOffice" title="">
                <button type="button" class="btn btn-default" id="btnQueryOffice">
                    <i class="fa fa-search" title="Search" aria-hidden="true"></i> Search
                </button>
            </div>
            <h4 style="border-bottom-color: red" class="sub-header"></h4>
            <!-- LOV Grid and pager-->
            <div>
                <table id="grdOffice"></table>
                <table id="grdPager"></table>
            </div>
        </form>
    </div>

    <!-----------------------CUSTOMER  dialog -------------------->

    <div id="dialog-Cust" title="Get Info">
        <form>
            <div>
                <input id="txtSearchCust" type="text" placeholder="Search by Name" style="width: 40%" name="txtSearchCust" title="">
                <button type="button" class="btn btn-default" id="btnQueryCust">
                    <i class="fa fa-search" title="Search" aria-hidden="true"></i> Search
                </button>
            </div>
            <h4 style="border-bottom-color: red" class="sub-header"></h4>
            <!-- LOV Grid and pager-->
            <div>
                <table id="grdCust"></table>
                <table id="grdPager"></table>
            </div>
        </form>
    </div>

    <!-----------------------Cover  dialog -------------------->

    <div id="dialog-Cover" title="Get Info">
        <form>
            <div>
                <input id="txtSearchCover" type="text" placeholder="Search by Name" style="width: 40%" name="txtSearchCover" title="">
                <button type="button" class="btn btn-default" id="btnQueryCover">
                    <i class="fa fa-search" title="Search" aria-hidden="true"></i> Search
                </button>
            </div>
            <h4 style="border-bottom-color: red" class="sub-header"></h4>
            <!-- LOV Grid and pager-->
            <div>
                <table id="grdCover"></table>
                <table id="grdPager"></table>
            </div>
        </form>
    </div>

    <!-----------------------Product  dialog -------------------->

    <div id="dialog-Product" title="Get Info">
        <form>
            <div>
                <input id="txtSearchProduct" type="text" placeholder="Search by Name" style="width: 40%" name="txtSearchProduct" title="">
                <button type="button" class="btn btn-default" id="btnQueryProduct">
                    <i class="fa fa-search" title="Search" aria-hidden="true"></i> Search
                </button>
            </div>
            <h4 style="border-bottom-color: red" class="sub-header"></h4>
            <!-- LOV Grid and pager-->
            <div>
                <table id="grdProduct"></table>
                <table id="grdPager"></table>
            </div>
        </form>
    </div>

    <!-----------------------Insurance Source  dialog -------------------->

    <div id="dialog-InsSrc" title="Get Info">
        <form>
            <div>
                <input id="txtSearchInsSrc" type="text" placeholder="Search by Name" style="width: 40%" name="txtSearchInsSrc" title="">
                <button type="button" class="btn btn-default" id="btnQueryInsSrc">
                    <i class="fa fa-search" title="Search" aria-hidden="true"></i> Search
                </button>
            </div>
            <h4 style="border-bottom-color: red" class="sub-header"></h4>
            <!-- LOV Grid and pager-->
            <div>
                <table id="grdInsSrc"></table>
                <table id="grdPager"></table>
            </div>
        </form>
    </div>

    <!-----------------------Business Source  dialog -------------------->

    <div id="dialog-bizSrc" title="Get Info">
        <form>
            <div>
                <input id="txtSearchbizSrc" type="text" placeholder="Search by Name" style="width: 40%" name="txtSearchbizSrc" title="">
                <button type="button" class="btn btn-default" id="btnQuerybizSrc">
                    <i class="fa fa-search" title="Search" aria-hidden="true"></i> Search
                </button>
            </div>
            <h4 style="border-bottom-color: red" class="sub-header"></h4>
            <!-- LOV Grid and pager-->
            <div>
                <table id="grdbizSrc"></table>
                <table id="grdPager"></table>
            </div>
        </form>
    </div>

    <!-----------------------Agency Source  dialog -------------------->

    <div id="dialog-Agency" title="Get Info">
        <form>
            <div>
                <input id="txtSearchAgency" type="text" placeholder="Search by Name" style="width: 40%" name="txtSearchAgency" title="">
                <button type="button" class="btn btn-default" id="btnQueryAgency">
                    <i class="fa fa-search" title="Search" aria-hidden="true"></i> Search
                </button>
            </div>
            <h4 style="border-bottom-color: red" class="sub-header"></h4>
            <!-- LOV Grid and pager-->
            <div>
                <table id="grdAgency"></table>
                <table id="grdPager"></table>
            </div>
        </form>
    </div>

    <!-----------------------Usage  dialog -------------------->

    <div id="dialog-Usage" title="Get Info">
        <form>
            <div>
                <input id="txtSearchUsage" type="text" placeholder="Search by Name" style="width: 40%" name="txtSearchUsage" title="">
                <button type="button" class="btn btn-default" id="btnQueryUsage">
                    <i class="fa fa-search" title="Search" aria-hidden="true"></i> Search
                </button>
            </div>
            <h4 style="border-bottom-color: red" class="sub-header"></h4>
            <!-- LOV Grid and pager-->
            <div>
                <table id="grdUsage"></table>
                <table id="grdPager"></table>
            </div>
        </form>
    </div>

    <!-----------------------Currency  dialog -------------------->

    <div id="dialog-Currency" title="Get Info">
        <form>
            <div>
                <input id="txtSearchCurrency" type="text" placeholder="Search by Name" style="width: 40%" name="txtSearchCurrency" title="">
                <button type="button" class="btn btn-default" id="btnQueryCurrency">
                    <i class="fa fa-search" title="Search" aria-hidden="true"></i> Search
                </button>
            </div>
            <h4 style="border-bottom-color: red" class="sub-header"></h4>
            <!-- LOV Grid and pager-->
            <div>
                <table id="grdCurrency"></table>
                <table id="grdPager"></table>
            </div>
        </form>
    </div>

    <!-----------------------Make  dialog -------------------->

    <div id="dialog-Make" title="Get Info">
        <form>
            <div>
                <input id="txtSearchMake" type="text" placeholder="Search by Name" style="width: 40%" name="txtSearchMake" title="">
                <button type="button" class="btn btn-default" id="btnQueryMake">
                    <i class="fa fa-search" title="Search" aria-hidden="true"></i> Search
                </button>
            </div>
            <h4 style="border-bottom-color: red" class="sub-header"></h4>
            <!-- LOV Grid and pager-->
            <div>
                <table id="grdMake"></table>
                <table id="grdPager"></table>
            </div>
        </form>
    </div>

    <!-----------------------Model  dialog -------------------->
    <!---
    <div id="dialog-Model" title="Get Info">
        <form>
            <div>
                <input id="txtSearch" type="text" style="width: 20%" name="txtSearch" title="xxxxxxx"/>
                <button type="button" class="btn btn-default" id="btnQueryModel">
                    <i class="fa fa-search" title="Search" aria-hidden="true"></i> Search
                </button>
            </div>
            <h4 style="border-bottom-color: red" class="sub-header"></h4>
            <!-- LOV Grid and pager-->
    @*<div>
                    <table id="grdModel"></table>
                    <table id="grdPager"></table>
                </div>
            </form>
        </div>*@

    <div id="frmProcessPolicy" title="Process Policy" class="roundElement">
        <!-- Modal form to Process Policy-->
        <form>

            <div style="border: 1px solid #000000; height:400px; margin-left: 10px; border-color: red; width: 95%" ; class="roundElement">


                <h4 style="border-bottom-color:red; color:blue " class="sub-header">Process Policy </h4>
                <br />
                <!-- Example element to pass across -->
                <label id="lblPolSerNo " for="txtPolDocNoProc">Serial No.: </label>
                <input name='txtPolDocNoProc' value='' id="txtPolDocNoProc" class="text ui-widget-content ui-corner-all" />
                <br /><br />
                <label id="lblEndNo " for="txtPolEndNoProc"> Endorsement No.:</label>
                <input name='txtPolEndNoProc' value='' id="txtPolEndNoProc" class="text ui-widget-content ui-corner-all" />

                <br /><br /><br />
                <hr />
            </div>

        </form>

    </div>

    <div>
        <!-- Modal form to run reports Form _blank-->
        <form action='frmMotorSchedule' method='post' id="frm_MotSch_form" target="result">

            <div style="border: 1px solid #000000; height:400px; margin-left: 10px; border-color: red; width: 95%" ; class="roundElement">


                <h4 style="border-bottom-color:red; color:blue " class="sub-header">RUN SCHEDULE </h4>
                <br />
                <!-- Example element to pass across -->
                <label id="lblPolSerNo " for="txtPolDocNoPrint">Serial No.: </label>
                <input name='txtPolDocNoPrint' value='' id="txtPolDocNoPrint" class="text ui-widget-content ui-corner-all" />
                <br /><br />
                <label id="lblEndNo " for="txtPolEndNoPrint"> Endorsement No.:</label>
                <input name='txtPolEndNoPrint' value='' id="txtPolEndNoPrint" class="text ui-widget-content ui-corner-all" />

                <br /><br /><br />
                <hr />
            </div>


        </form>

    </div>

</div>

